

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Sun Apr 19 16:59:08 2020

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 7 "code.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 7 "code.c"
    45  2007  FF3A               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFF7F & 0xFFFF & 0xFFFF & 0xFFFF ;#
    46                           	FNCALL	_main,_Lcd8_Init
    47                           	FNCALL	_main,_UART_Init
    48                           	FNCALL	_main,_Lcd8_Clear
    49                           	FNCALL	_main,_Lcd8_Set_Cursor
    50                           	FNCALL	_main,_Lcd8_Write_String
    51                           	FNCALL	_main,_checkRFID
    52                           	FNCALL	_checkRFID,_UART_Data_Ready
    53                           	FNCALL	_checkRFID,_UART_Read
    54                           	FNCALL	_checkRFID,_Lcd8_Clear
    55                           	FNCALL	_checkRFID,_Lcd8_Set_Cursor
    56                           	FNCALL	_checkRFID,_Lcd8_Write_String
    57                           	FNCALL	_checkRFID,_strcmp
    58                           	FNCALL	_checkRFID,_delay
    59                           	FNCALL	_checkRFID,_present
    60                           	FNCALL	_checkRFID,_absent
    61                           	FNCALL	_checkRFID,_initial_State
    62                           	FNCALL	_absent,___awtoft
    63                           	FNCALL	_absent,_ftoa
    64                           	FNCALL	_absent,_Lcd8_Set_Cursor
    65                           	FNCALL	_absent,_Lcd8_Write_String
    66                           	FNCALL	_absent,_delay
    67                           	FNCALL	_present,___awtoft
    68                           	FNCALL	_present,_ftoa
    69                           	FNCALL	_present,_Lcd8_Set_Cursor
    70                           	FNCALL	_present,_Lcd8_Write_String
    71                           	FNCALL	_present,_delay
    72                           	FNCALL	_ftoa,___fttol
    73                           	FNCALL	_ftoa,___awtoft
    74                           	FNCALL	_ftoa,___ftneg
    75                           	FNCALL	_ftoa,___ftadd
    76                           	FNCALL	_ftoa,_intToStr
    77                           	FNCALL	_ftoa,_pow
    78                           	FNCALL	_ftoa,___ftmul
    79                           	FNCALL	_pow,___ftge
    80                           	FNCALL	_pow,___fttol
    81                           	FNCALL	_pow,___lltoft
    82                           	FNCALL	_pow,___ftneg
    83                           	FNCALL	_pow,_log
    84                           	FNCALL	_pow,___ftmul
    85                           	FNCALL	_pow,_exp
    86                           	FNCALL	_exp,___ftge
    87                           	FNCALL	_exp,___ftneg
    88                           	FNCALL	_exp,___ftmul
    89                           	FNCALL	_exp,_floor
    90                           	FNCALL	_exp,___fttol
    91                           	FNCALL	_exp,___awtoft
    92                           	FNCALL	_exp,___ftsub
    93                           	FNCALL	_exp,_eval_poly
    94                           	FNCALL	_exp,_ldexp
    95                           	FNCALL	_exp,___ftdiv
    96                           	FNCALL	_log,___ftge
    97                           	FNCALL	_log,_frexp
    98                           	FNCALL	_log,___ftmul
    99                           	FNCALL	_log,___ftadd
   100                           	FNCALL	_log,_eval_poly
   101                           	FNCALL	_log,___awtoft
   102                           	FNCALL	_initial_State,_Lcd8_Clear
   103                           	FNCALL	_initial_State,_Lcd8_Set_Cursor
   104                           	FNCALL	_initial_State,_Lcd8_Write_String
   105                           	FNCALL	_eval_poly,___bmul
   106                           	FNCALL	_eval_poly,___ftmul
   107                           	FNCALL	_eval_poly,___ftadd
   108                           	FNCALL	_floor,_frexp
   109                           	FNCALL	_floor,___ftge
   110                           	FNCALL	_floor,___fttol
   111                           	FNCALL	_floor,___altoft
   112                           	FNCALL	_floor,___ftadd
   113                           	FNCALL	___ftsub,___ftadd
   114                           	FNCALL	_Lcd8_Write_String,_Lcd8_Write_Char
   115                           	FNCALL	_Lcd8_Init,_Lcd8_Port
   116                           	FNCALL	_Lcd8_Init,_Lcd8_Cmd
   117                           	FNCALL	_Lcd8_Set_Cursor,_Lcd8_Cmd
   118                           	FNCALL	_Lcd8_Clear,_Lcd8_Cmd
   119                           	FNCALL	_ldexp,___ftge
   120                           	FNCALL	_ldexp,___ftneg
   121                           	FNCALL	___lltoft,___ftpack
   122                           	FNCALL	___altoft,___ftpack
   123                           	FNCALL	___awtoft,___ftpack
   124                           	FNCALL	___ftmul,___ftpack
   125                           	FNCALL	___ftdiv,___ftpack
   126                           	FNCALL	___ftadd,___ftpack
   127                           	FNCALL	_intToStr,___awmod
   128                           	FNCALL	_intToStr,___awdiv
   129                           	FNCALL	_intToStr,_reverse
   130                           	FNCALL	_UART_Init,___aldiv
   131                           	FNCALL	_Lcd8_Write_Char,_Lcd8_Port
   132                           	FNCALL	_Lcd8_Cmd,_Lcd8_Port
   133                           	FNROOT	_main
   134                           	global	_validIDs
   135                           psect	idataBANK3,class=CODE,space=0,delta=2
   136                           global __pidataBANK3
   137  136A                     __pidataBANK3:
   138                           	file	"code.c"
   139                           	line	30
   140                           
   141                           ;initializer for _validIDs
   142  136A  3434               	retlw	034h
   143  136B  3430               	retlw	030h
   144  136C  3430               	retlw	030h
   145  136D  3430               	retlw	030h
   146  136E  3432               	retlw	032h
   147  136F  3438               	retlw	038h
   148  1370  3437               	retlw	037h
   149  1371  3444               	retlw	044h
   150  1372  3442               	retlw	042h
   151  1373  3446               	retlw	046h
   152  1374  3441               	retlw	041h
   153  1375  3441               	retlw	041h
   154  1376  3434               	retlw	034h
   155  1377  3430               	retlw	030h
   156  1378  3430               	retlw	030h
   157  1379  3430               	retlw	030h
   158  137A  3432               	retlw	032h
   159  137B  3438               	retlw	038h
   160  137C  3439               	retlw	039h
   161  137D  3438               	retlw	038h
   162  137E  3433               	retlw	033h
   163  137F  3434               	retlw	034h
   164  1380  3443               	retlw	043h
   165  1381  3434               	retlw	034h
   166  1382  3434               	retlw	034h
   167  1383  3430               	retlw	030h
   168  1384  3430               	retlw	030h
   169  1385  3430               	retlw	030h
   170  1386  3432               	retlw	032h
   171  1387  3438               	retlw	038h
   172  1388  3435               	retlw	035h
   173  1389  3443               	retlw	043h
   174  138A  3432               	retlw	032h
   175  138B  3443               	retlw	043h
   176  138C  3431               	retlw	031h
   177  138D  3438               	retlw	038h
   178  138E  3434               	retlw	034h
   179  138F  3430               	retlw	030h
   180  1390  3430               	retlw	030h
   181  1391  3430               	retlw	030h
   182  1392  3432               	retlw	032h
   183  1393  3438               	retlw	038h
   184  1394  3436               	retlw	036h
   185  1395  3438               	retlw	038h
   186  1396  3437               	retlw	037h
   187  1397  3434               	retlw	034h
   188  1398  3437               	retlw	037h
   189  1399  3434               	retlw	034h
   190                           	global	exp@coeff
   191                           psect	strings,class=STRING,delta=2
   192                           global __pstrings
   193  0800                     __pstrings:
   194                           ;	global	stringdir,stringtab,__stringbase
   195  0800                     stringtab:
   196                           ;	String table - string pointers are 1 byte each
   197  0800  1BFF               	btfsc	(btemp+1),7
   198  0801  280A               	ljmp	stringcode
   199  0802  1383               	bcf	status,7
   200  0803  187F               	btfsc	(btemp+1),0
   201  0804  1783               	bsf	status,7
   202  0805  0800               	movf	indf,w
   203  0806  0A84               	incf fsr
   204  0807  1903               skipnz
   205  0808  0AFF               incf btemp+1
   206  0809  0008               	return
   207  080A                     stringcode:stringdir:
      + 080A                     stringdir:	
   208  080A  3008               movlw high(stringdir)
   209  080B  008A               movwf pclath
   210  080C  0804               movf fsr,w
   211  080D  0A84               incf fsr
   212  080E  0782               	addwf pc
   213  080F                     __stringbase:
   214  080F  3400               	retlw	0
   215                           psect	strings
   216                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\exp.c"
   217                           	line	17
   218  0810                     exp@coeff:
   219  0810  3400               	retlw	0x0
   220  0811  3480               	retlw	0x80
   221  0812  343F               	retlw	0x3f
   222                           
   223  0813  3472               	retlw	0x72
   224  0814  3431               	retlw	0x31
   225  0815  343F               	retlw	0x3f
   226                           
   227  0816  34FE               	retlw	0xfe
   228  0817  3475               	retlw	0x75
   229  0818  343E               	retlw	0x3e
   230                           
   231  0819  3458               	retlw	0x58
   232  081A  3463               	retlw	0x63
   233  081B  343D               	retlw	0x3d
   234                           
   235  081C  3495               	retlw	0x95
   236  081D  341D               	retlw	0x1d
   237  081E  343C               	retlw	0x3c
   238                           
   239  081F  34C5               	retlw	0xc5
   240  0820  34AE               	retlw	0xae
   241  0821  343A               	retlw	0x3a
   242                           
   243  0822  3479               	retlw	0x79
   244  0823  3421               	retlw	0x21
   245  0824  3439               	retlw	0x39
   246                           
   247  0825  3494               	retlw	0x94
   248  0826  3480               	retlw	0x80
   249  0827  3437               	retlw	0x37
   250                           
   251  0828  3493               	retlw	0x93
   252  0829  34A7               	retlw	0xa7
   253  082A  3435               	retlw	0x35
   254                           
   255  082B  3456               	retlw	0x56
   256  082C  3415               	retlw	0x15
   257  082D  3434               	retlw	0x34
   258                           
   259                           	global	log@coeff
   260                           psect	strings
   261                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\log.c"
   262                           	line	9
   263  082E                     log@coeff:
   264  082E  3400               	retlw	0x0
   265  082F  3400               	retlw	0x0
   266  0830  3400               	retlw	0x0
   267                           
   268  0831  3400               	retlw	0x0
   269  0832  3480               	retlw	0x80
   270  0833  343F               	retlw	0x3f
   271                           
   272  0834  34F0               	retlw	0xf0
   273  0835  34FF               	retlw	0xff
   274  0836  34BE               	retlw	0xbe
   275                           
   276  0837  34E2               	retlw	0xe2
   277  0838  34A9               	retlw	0xa9
   278  0839  343E               	retlw	0x3e
   279                           
   280  083A  3483               	retlw	0x83
   281  083B  3476               	retlw	0x76
   282  083C  34BE               	retlw	0xbe
   283                           
   284  083D  34AE               	retlw	0xae
   285  083E  342B               	retlw	0x2b
   286  083F  343E               	retlw	0x3e
   287                           
   288  0840  343C               	retlw	0x3c
   289  0841  34C3               	retlw	0xc3
   290  0842  34BD               	retlw	0xbd
   291                           
   292  0843  34D2               	retlw	0xd2
   293  0844  3413               	retlw	0x13
   294  0845  343D               	retlw	0x3d
   295                           
   296  0846  3478               	retlw	0x78
   297  0847  34D3               	retlw	0xd3
   298  0848  34BB               	retlw	0xbb
   299                           
   300                           	global	exp@coeff
   301                           	global	log@coeff
   302                           	global	_errno
   303                           	global	_recordbook
   304                           	global	_counter
   305                           	global	_rfid
   306                           	global	_buffer
   307                           	global	_PORTDbits
   308  0008                     _PORTDbits	set	8
   309                           	global	_RCREG
   310  001A                     _RCREG	set	26
   311                           	global	_TXREG
   312  0019                     _TXREG	set	25
   313                           	global	_CARRY
   314  0018                     _CARRY	set	24
   315                           	global	_CREN
   316  00C4                     _CREN	set	196
   317                           	global	_GIE
   318  005F                     _GIE	set	95
   319                           	global	_RB0
   320  0030                     _RB0	set	48
   321                           	global	_RB1
   322  0031                     _RB1	set	49
   323                           	global	_RB2
   324  0032                     _RB2	set	50
   325                           	global	_RB3
   326  0033                     _RB3	set	51
   327                           	global	_RB4
   328  0034                     _RB4	set	52
   329                           	global	_RB5
   330  0035                     _RB5	set	53
   331                           	global	_RB6
   332  0036                     _RB6	set	54
   333                           	global	_RB7
   334  0037                     _RB7	set	55
   335                           	global	_RCIF
   336  0065                     _RCIF	set	101
   337                           	global	_RD5
   338  0045                     _RD5	set	69
   339                           	global	_RD7
   340  0047                     _RD7	set	71
   341                           	global	_SPEN
   342  00C7                     _SPEN	set	199
   343                           	global	_SPBRG
   344  0099                     _SPBRG	set	153
   345                           	global	_TRISB
   346  0086                     _TRISB	set	134
   347                           	global	_TRISC
   348  0087                     _TRISC	set	135
   349                           	global	_TRISD
   350  0088                     _TRISD	set	136
   351                           	global	_BRGH
   352  04C2                     _BRGH	set	1218
   353                           	global	_SYNC
   354  04C4                     _SYNC	set	1220
   355                           	global	_TRISC6
   356  043E                     _TRISC6	set	1086
   357                           	global	_TRISC7
   358  043F                     _TRISC7	set	1087
   359                           	global	_TRMT
   360  04C1                     _TRMT	set	1217
   361                           	global	_TXEN
   362  04C5                     _TXEN	set	1221
   363                           	global	_EEADR
   364  010D                     _EEADR	set	269
   365                           	global	_EEDATA
   366  010C                     _EEDATA	set	268
   367                           	global	_EECON1
   368  018C                     _EECON1	set	396
   369                           	global	_EECON2
   370  018D                     _EECON2	set	397
   371                           	global	_RD
   372  0C60                     _RD	set	3168
   373                           	global	_WR
   374  0C61                     _WR	set	3169
   375                           	global	_WREN
   376  0C62                     _WREN	set	3170
   377                           	
   378  0849                     STR_13:	
   379  0849  3452               	retlw	82	;'R'
   380  084A  3475               	retlw	117	;'u'
   381  084B  3474               	retlw	116	;'t'
   382  084C  3475               	retlw	117	;'u'
   383  084D  346A               	retlw	106	;'j'
   384  084E  3461               	retlw	97	;'a'
   385  084F  3420               	retlw	32	;' '
   386  0850  3450               	retlw	80	;'P'
   387  0851  3472               	retlw	114	;'r'
   388  0852  3465               	retlw	101	;'e'
   389  0853  3473               	retlw	115	;'s'
   390  0854  3465               	retlw	101	;'e'
   391  0855  346E               	retlw	110	;'n'
   392  0856  3474               	retlw	116	;'t'
   393  0857  3420               	retlw	32	;' '
   394  0858  3420               	retlw	32	;' '
   395  0859  3400               	retlw	0
   396                           psect	strings
   397                           	
   398  085A                     STR_18:	
   399  085A  3457               	retlw	87	;'W'
   400  085B  3465               	retlw	101	;'e'
   401  085C  346C               	retlw	108	;'l'
   402  085D  3463               	retlw	99	;'c'
   403  085E  346F               	retlw	111	;'o'
   404  085F  346D               	retlw	109	;'m'
   405  0860  3465               	retlw	101	;'e'
   406  0861  3420               	retlw	32	;' '
   407  0862  3454               	retlw	84	;'T'
   408  0863  3465               	retlw	101	;'e'
   409  0864  3461               	retlw	97	;'a'
   410  0865  3463               	retlw	99	;'c'
   411  0866  3468               	retlw	104	;'h'
   412  0867  3465               	retlw	101	;'e'
   413  0868  3472               	retlw	114	;'r'
   414  0869  3420               	retlw	32	;' '
   415  086A  3400               	retlw	0
   416                           psect	strings
   417                           	
   418  086B                     STR_16:	
   419  086B  3453               	retlw	83	;'S'
   420  086C  3468               	retlw	104	;'h'
   421  086D  3475               	retlw	117	;'u'
   422  086E  3462               	retlw	98	;'b'
   423  086F  3468               	retlw	104	;'h'
   424  0870  3461               	retlw	97	;'a'
   425  0871  346D               	retlw	109	;'m'
   426  0872  3420               	retlw	32	;' '
   427  0873  3450               	retlw	80	;'P'
   428  0874  3472               	retlw	114	;'r'
   429  0875  3465               	retlw	101	;'e'
   430  0876  3473               	retlw	115	;'s'
   431  0877  3465               	retlw	101	;'e'
   432  0878  346E               	retlw	110	;'n'
   433  0879  3474               	retlw	116	;'t'
   434  087A  3420               	retlw	32	;' '
   435  087B  3400               	retlw	0
   436                           psect	strings
   437                           	
   438  087C                     STR_10:	
   439  087C  3452               	retlw	82	;'R'
   440  087D  3461               	retlw	97	;'a'
   441  087E  346A               	retlw	106	;'j'
   442  087F  3464               	retlw	100	;'d'
   443  0880  3465               	retlw	101	;'e'
   444  0881  3465               	retlw	101	;'e'
   445  0882  3470               	retlw	112	;'p'
   446  0883  3420               	retlw	32	;' '
   447  0884  3450               	retlw	80	;'P'
   448  0885  3472               	retlw	114	;'r'
   449  0886  3465               	retlw	101	;'e'
   450  0887  3473               	retlw	115	;'s'
   451  0888  3465               	retlw	101	;'e'
   452  0889  346E               	retlw	110	;'n'
   453  088A  3474               	retlw	116	;'t'
   454  088B  3420               	retlw	32	;' '
   455  088C  3400               	retlw	0
   456                           psect	strings
   457                           	
   458  088D                     STR_1:	
   459  088D  3450               	retlw	80	;'P'
   460  088E  346C               	retlw	108	;'l'
   461  088F  3461               	retlw	97	;'a'
   462  0890  3463               	retlw	99	;'c'
   463  0891  3465               	retlw	101	;'e'
   464  0892  3420               	retlw	32	;' '
   465  0893  3479               	retlw	121	;'y'
   466  0894  346F               	retlw	111	;'o'
   467  0895  3475               	retlw	117	;'u'
   468  0896  3472               	retlw	114	;'r'
   469  0897  3420               	retlw	32	;' '
   470  0898  3463               	retlw	99	;'c'
   471  0899  3461               	retlw	97	;'a'
   472  089A  3472               	retlw	114	;'r'
   473  089B  3464               	retlw	100	;'d'
   474  089C  3400               	retlw	0
   475                           psect	strings
   476                           	
   477  089D                     STR_17:	
   478  089D  3434               	retlw	52	;'4'
   479  089E  3430               	retlw	48	;'0'
   480  089F  3430               	retlw	48	;'0'
   481  08A0  3430               	retlw	48	;'0'
   482  08A1  3432               	retlw	50	;'2'
   483  08A2  3438               	retlw	56	;'8'
   484  08A3  3436               	retlw	54	;'6'
   485  08A4  3438               	retlw	56	;'8'
   486  08A5  3437               	retlw	55	;'7'
   487  08A6  3434               	retlw	52	;'4'
   488  08A7  3437               	retlw	55	;'7'
   489  08A8  3434               	retlw	52	;'4'
   490  08A9  3400               	retlw	0
   491                           psect	strings
   492                           	
   493  08AA                     STR_11:	
   494  08AA  3434               	retlw	52	;'4'
   495  08AB  3430               	retlw	48	;'0'
   496  08AC  3430               	retlw	48	;'0'
   497  08AD  3430               	retlw	48	;'0'
   498  08AE  3432               	retlw	50	;'2'
   499  08AF  3438               	retlw	56	;'8'
   500  08B0  3439               	retlw	57	;'9'
   501  08B1  3438               	retlw	56	;'8'
   502  08B2  3433               	retlw	51	;'3'
   503  08B3  3434               	retlw	52	;'4'
   504  08B4  3443               	retlw	67	;'C'
   505  08B5  3434               	retlw	52	;'4'
   506  08B6  3400               	retlw	0
   507                           psect	strings
   508                           	
   509  08B7                     STR_14:	
   510  08B7  3434               	retlw	52	;'4'
   511  08B8  3430               	retlw	48	;'0'
   512  08B9  3430               	retlw	48	;'0'
   513  08BA  3430               	retlw	48	;'0'
   514  08BB  3432               	retlw	50	;'2'
   515  08BC  3438               	retlw	56	;'8'
   516  08BD  3435               	retlw	53	;'5'
   517  08BE  3443               	retlw	67	;'C'
   518  08BF  3432               	retlw	50	;'2'
   519  08C0  3443               	retlw	67	;'C'
   520  08C1  3431               	retlw	49	;'1'
   521  08C2  3438               	retlw	56	;'8'
   522  08C3  3400               	retlw	0
   523                           psect	strings
   524                           	
   525  08C4                     STR_8:	
   526  08C4  3434               	retlw	52	;'4'
   527  08C5  3430               	retlw	48	;'0'
   528  08C6  3430               	retlw	48	;'0'
   529  08C7  3430               	retlw	48	;'0'
   530  08C8  3432               	retlw	50	;'2'
   531  08C9  3438               	retlw	56	;'8'
   532  08CA  3437               	retlw	55	;'7'
   533  08CB  3444               	retlw	68	;'D'
   534  08CC  3442               	retlw	66	;'B'
   535  08CD  3446               	retlw	70	;'F'
   536  08CE  3441               	retlw	65	;'A'
   537  08CF  3441               	retlw	65	;'A'
   538  08D0  3400               	retlw	0
   539                           psect	strings
   540                           	
   541  08D1                     STR_9:	
   542  08D1  3441               	retlw	65	;'A'
   543  08D2  346C               	retlw	108	;'l'
   544  08D3  3472               	retlw	114	;'r'
   545  08D4  3465               	retlw	101	;'e'
   546  08D5  3461               	retlw	97	;'a'
   547  08D6  3464               	retlw	100	;'d'
   548  08D7  3479               	retlw	121	;'y'
   549  08D8  3420               	retlw	32	;' '
   550  08D9  3444               	retlw	68	;'D'
   551  08DA  346F               	retlw	111	;'o'
   552  08DB  346E               	retlw	110	;'n'
   553  08DC  3465               	retlw	101	;'e'
   554  08DD  3400               	retlw	0
   555                           psect	strings
   556                           	
   557  08DE                     STR_3:	
   558  08DE  3453               	retlw	83	;'S'
   559  08DF  3474               	retlw	116	;'t'
   560  08E0  3475               	retlw	117	;'u'
   561  08E1  3464               	retlw	100	;'d'
   562  08E2  3465               	retlw	101	;'e'
   563  08E3  346E               	retlw	110	;'n'
   564  08E4  3474               	retlw	116	;'t'
   565  08E5  345F               	retlw	95	;'_'
   566  08E6  3400               	retlw	0
   567                           psect	strings
   568                           	
   569  08E7                     STR_4:	
   570  08E7  3420               	retlw	32	;' '
   571  08E8  3470               	retlw	112	;'p'
   572  08E9  3472               	retlw	114	;'r'
   573  08EA  3465               	retlw	101	;'e'
   574  08EB  3473               	retlw	115	;'s'
   575  08EC  3465               	retlw	101	;'e'
   576  08ED  346E               	retlw	110	;'n'
   577  08EE  3474               	retlw	116	;'t'
   578  08EF  3400               	retlw	0
   579                           psect	strings
   580                           	
   581  08F0                     STR_6:	
   582  08F0  3420               	retlw	32	;' '
   583  08F1  3461               	retlw	97	;'a'
   584  08F2  3462               	retlw	98	;'b'
   585  08F3  3473               	retlw	115	;'s'
   586  08F4  3465               	retlw	101	;'e'
   587  08F5  346E               	retlw	110	;'n'
   588  08F6  3474               	retlw	116	;'t'
   589  08F7  3400               	retlw	0
   590                           psect	strings
   591                           	
   592  08F8                     STR_7:	
   593  08F8  3449               	retlw	73	;'I'
   594  08F9  3444               	retlw	68	;'D'
   595  08FA  343A               	retlw	58	;':'
   596  08FB  3400               	retlw	0
   597                           psect	strings
   598  08D1                     STR_12	equ	STR_9+0
   599  08D1                     STR_15	equ	STR_9+0
   600  088D                     STR_2	equ	STR_1+0
   601  08DE                     STR_5	equ	STR_3+0
   602                           	file	"C:\Users\Rajdeep\AppData\Local\Temp\s5p4."
   603                           	line	#
   604                           psect cinit,class=CODE,delta=2
   605                           global start_initialization
   606  12B6                     start_initialization:
   607                           
   608                           psect	bssBANK0,class=BANK0,space=1
   609                           global __pbssBANK0
   610  006E                     __pbssBANK0:
   611  006E                     _errno:
   612  006E                            ds      2
   613                           
   614                           psect	bssBANK1,class=BANK1,space=1
   615                           global __pbssBANK1
   616  00BF                     __pbssBANK1:
   617  00BF                     _recordbook:
   618  00BF                            ds      6
   619                           
   620  00C5                     _counter:
   621  00C5                            ds      2
   622                           
   623  00C7                     _rfid:
   624  00C7                            ds      12
   625                           
   626  00D3                     _buffer:
   627  00D3                            ds      2
   628                           
   629                           psect	dataBANK3,class=BANK3,space=1
   630                           global __pdataBANK3
   631  0190                     __pdataBANK3:
   632                           	file	"code.c"
   633                           	line	30
   634  0190                     _validIDs:
   635  0190                            ds      48
   636                           
   637                           psect clrtext,class=CODE,delta=2
   638                           global clear_ram
   639                           ;	Called with FSR containing the base address, and
   640                           ;	W with the last address+1
   641  1238                     clear_ram:
   642  1238  0064               	clrwdt			;clear the watchdog before getting into this loop
   643  1239                     clrloop:
   644  1239  0180               	clrf	indf		;clear RAM location pointed to by FSR
   645  123A  0A84               	incf	fsr,f		;increment pointer
   646  123B  0604               	xorwf	fsr,w		;XOR with final address
   647  123C  1903               	btfsc	status,2	;have we reached the end yet?
   648  123D  3400               	retlw	0		;all done for this memory range, return
   649  123E  0604               	xorwf	fsr,w		;XOR again to restore value
   650  123F  2A39               	goto	clrloop		;do the next byte
   651                           
   652                           ; Clear objects allocated to BANK0
   653                           psect cinit,class=CODE,delta=2
   654  12B6  01EE               	clrf	((__pbssBANK0)+0)&07Fh
   655  12B7  01EF               	clrf	((__pbssBANK0)+1)&07Fh
   656                           ; Clear objects allocated to BANK1
   657                           psect cinit,class=CODE,delta=2
   658  12B8  1383               	bcf	status, 7	;select IRP bank0
   659  12B9  30BF               	movlw	low(__pbssBANK1)
   660  12BA  0084               	movwf	fsr
   661  12BB  30D5               	movlw	low((__pbssBANK1)+016h)
   662  12BC  160A  118A  2238   	fcall	clear_ram
              160A  118A         
   663                           global btemp
   664                           psect inittext,class=CODE,delta=2
   665                           global init_fetch,btemp
   666                           ;	Called with low address in FSR and high address in W
   667  1257                     init_fetch:
   668  1257  087E               	movf btemp,w
   669  1258  008A               	movwf pclath
   670  1259  087F               	movf btemp+1,w
   671  125A  0082               	movwf pc
   672                           global init_ram
   673                           ;Called with:
   674                           ;	high address of idata address in btemp 
   675                           ;	low address of idata address in btemp+1 
   676                           ;	low address of data in FSR
   677                           ;	high address + 1 of data in btemp-1
   678  125B                     init_ram:
   679  125B  160A  118A  2257   	fcall init_fetch
              160A  118A         
   680  1260  0080               	movwf indf,f
   681  1261  0A84               	incf fsr,f
   682  1262  0804               	movf fsr,w
   683  1263  067D               	xorwf btemp-1,w
   684  1264  1903               	btfsc status,2
   685  1265  3400               	retlw 0
   686  1266  0AFF               	incf btemp+1,f
   687  1267  1903               	btfsc status,2
   688  1268  0AFE               	incf btemp,f
   689  1269  2A5B               	goto init_ram
   690                           ; Initialize objects allocated to BANK3
   691                           psect cinit,class=CODE,delta=2
   692                           global init_ram, __pidataBANK3
   693  12C1  1783               	bsf	status, 7	;select IRP bank2
   694  12C2  30C0               	movlw low(__pdataBANK3+48)
   695  12C3  00FD               	movwf btemp-1,f
   696  12C4  3013               	movlw high(__pidataBANK3)
   697  12C5  00FE               	movwf btemp,f
   698  12C6  306A               	movlw low(__pidataBANK3)
   699  12C7  00FF               	movwf btemp+1,f
   700  12C8  3090               	movlw low(__pdataBANK3)
   701  12C9  0084               	movwf fsr,f
   702  12CA  160A  118A  225B   	fcall init_ram
              160A  118A         
   703                           psect cinit,class=CODE,delta=2
   704                           global end_of_initialization
   705                           
   706                           ;End of C runtime variable initialization code
   707                           
   708  12CF                     end_of_initialization:
   709  12CF  0183               clrf status
   710  12D0  160A  118A  2C7B   ljmp _main	;jump to C main() function
   711                           psect	cstackBANK1,class=BANK1,space=1
   712                           global __pcstackBANK1
   713  00A0                     __pcstackBANK1:
   714                           	global	_pow$2282
   715  00A0                     _pow$2282:	; 3 bytes @ 0x0
   716  00A0                     	ds	3
   717                           	global	pow@sign
   718  00A3                     pow@sign:	; 1 bytes @ 0x3
   719  00A3                     	ds	1
   720                           	global	pow@yi
   721  00A4                     pow@yi:	; 4 bytes @ 0x4
   722  00A4                     	ds	4
   723                           	global	?_ftoa
   724  00A8                     ?_ftoa:	; 0 bytes @ 0x8
   725                           	global	ftoa@n
   726  00A8                     ftoa@n:	; 3 bytes @ 0x8
   727  00A8                     	ds	3
   728                           	global	ftoa@res
   729  00AB                     ftoa@res:	; 1 bytes @ 0xB
   730  00AB                     	ds	1
   731                           	global	ftoa@afterpoint
   732  00AC                     ftoa@afterpoint:	; 2 bytes @ 0xC
   733  00AC                     	ds	2
   734                           	global	_ftoa$2281
   735  00AE                     _ftoa$2281:	; 3 bytes @ 0xE
   736  00AE                     	ds	3
   737                           	global	ftoa@ipart
   738  00B1                     ftoa@ipart:	; 2 bytes @ 0x11
   739  00B1                     	ds	2
   740                           	global	ftoa@i
   741  00B3                     ftoa@i:	; 2 bytes @ 0x13
   742  00B3                     	ds	2
   743                           	global	ftoa@fpart
   744  00B5                     ftoa@fpart:	; 3 bytes @ 0x15
   745  00B5                     	ds	3
   746                           	global	??_checkRFID
   747  00B8                     ??_checkRFID:	; 0 bytes @ 0x18
   748  00B8                     	ds	3
   749                           	global	checkRFID@a
   750  00BB                     checkRFID@a:	; 2 bytes @ 0x1B
   751  00BB                     	ds	2
   752                           	global	checkRFID@i
   753  00BD                     checkRFID@i:	; 2 bytes @ 0x1D
   754  00BD                     	ds	2
   755                           psect	cstackCOMMON,class=COMMON,space=1
   756                           global __pcstackCOMMON
   757  0070                     __pcstackCOMMON:
   758                           	global	?_checkRFID
   759  0070                     ?_checkRFID:	; 0 bytes @ 0x0
   760                           	global	?_Lcd8_Port
   761  0070                     ?_Lcd8_Port:	; 0 bytes @ 0x0
   762                           	global	??_Lcd8_Port
   763  0070                     ??_Lcd8_Port:	; 0 bytes @ 0x0
   764                           	global	?_Lcd8_Cmd
   765  0070                     ?_Lcd8_Cmd:	; 0 bytes @ 0x0
   766                           	global	?_Lcd8_Init
   767  0070                     ?_Lcd8_Init:	; 0 bytes @ 0x0
   768                           	global	?_Lcd8_Write_Char
   769  0070                     ?_Lcd8_Write_Char:	; 0 bytes @ 0x0
   770                           	global	??_UART_Data_Ready
   771  0070                     ??_UART_Data_Ready:	; 0 bytes @ 0x0
   772                           	global	??_UART_Read
   773  0070                     ??_UART_Read:	; 0 bytes @ 0x0
   774                           	global	?_reverse
   775  0070                     ?_reverse:	; 0 bytes @ 0x0
   776                           	global	?_main
   777  0070                     ?_main:	; 0 bytes @ 0x0
   778                           	global	?_initial_State
   779  0070                     ?_initial_State:	; 0 bytes @ 0x0
   780                           	global	?_delay
   781  0070                     ?_delay:	; 0 bytes @ 0x0
   782                           	global	?_present
   783  0070                     ?_present:	; 0 bytes @ 0x0
   784                           	global	?_absent
   785  0070                     ?_absent:	; 0 bytes @ 0x0
   786                           	global	?___ftge
   787  0070                     ?___ftge:	; 1 bit 
   788                           	global	?_UART_Data_Ready
   789  0070                     ?_UART_Data_Ready:	; 1 bytes @ 0x0
   790                           	global	?_UART_Read
   791  0070                     ?_UART_Read:	; 1 bytes @ 0x0
   792                           	global	?___bmul
   793  0070                     ?___bmul:	; 1 bytes @ 0x0
   794                           	global	?_strcmp
   795  0070                     ?_strcmp:	; 2 bytes @ 0x0
   796                           	global	?_Lcd8_Clear
   797  0070                     ?_Lcd8_Clear:	; 2 bytes @ 0x0
   798                           	global	?___awdiv
   799  0070                     ?___awdiv:	; 2 bytes @ 0x0
   800                           	global	?___awmod
   801  0070                     ?___awmod:	; 2 bytes @ 0x0
   802                           	global	?___ftpack
   803  0070                     ?___ftpack:	; 3 bytes @ 0x0
   804                           	global	?_frexp
   805  0070                     ?_frexp:	; 3 bytes @ 0x0
   806                           	global	?___fttol
   807  0070                     ?___fttol:	; 4 bytes @ 0x0
   808                           	global	?___aldiv
   809  0070                     ?___aldiv:	; 4 bytes @ 0x0
   810                           	global	Lcd8_Port@a
   811  0070                     Lcd8_Port@a:	; 1 bytes @ 0x0
   812                           	global	strcmp@s2
   813  0070                     strcmp@s2:	; 1 bytes @ 0x0
   814                           	global	___bmul@multiplicand
   815  0070                     ___bmul@multiplicand:	; 1 bytes @ 0x0
   816                           	global	reverse@len
   817  0070                     reverse@len:	; 2 bytes @ 0x0
   818                           	global	delay@time
   819  0070                     delay@time:	; 2 bytes @ 0x0
   820                           	global	___awdiv@divisor
   821  0070                     ___awdiv@divisor:	; 2 bytes @ 0x0
   822                           	global	___awmod@divisor
   823  0070                     ___awmod@divisor:	; 2 bytes @ 0x0
   824                           	global	___fttol@f1
   825  0070                     ___fttol@f1:	; 3 bytes @ 0x0
   826                           	global	___ftge@ff1
   827  0070                     ___ftge@ff1:	; 3 bytes @ 0x0
   828                           	global	frexp@value
   829  0070                     frexp@value:	; 3 bytes @ 0x0
   830                           	global	___ftpack@arg
   831  0070                     ___ftpack@arg:	; 3 bytes @ 0x0
   832                           	global	___aldiv@divisor
   833  0070                     ___aldiv@divisor:	; 4 bytes @ 0x0
   834  0070                     	ds	1
   835                           	global	??_Lcd8_Cmd
   836  0071                     ??_Lcd8_Cmd:	; 0 bytes @ 0x1
   837                           	global	??_Lcd8_Write_Char
   838  0071                     ??_Lcd8_Write_Char:	; 0 bytes @ 0x1
   839                           	global	??___bmul
   840  0071                     ??___bmul:	; 0 bytes @ 0x1
   841  0071                     	ds	1
   842                           	global	??_strcmp
   843  0072                     ??_strcmp:	; 0 bytes @ 0x2
   844                           	global	??_reverse
   845  0072                     ??_reverse:	; 0 bytes @ 0x2
   846                           	global	??_delay
   847  0072                     ??_delay:	; 0 bytes @ 0x2
   848                           	global	___bmul@product
   849  0072                     ___bmul@product:	; 1 bytes @ 0x2
   850                           	global	___awdiv@dividend
   851  0072                     ___awdiv@dividend:	; 2 bytes @ 0x2
   852                           	global	___awmod@dividend
   853  0072                     ___awmod@dividend:	; 2 bytes @ 0x2
   854  0072                     	ds	1
   855                           	global	Lcd8_Cmd@a
   856  0073                     Lcd8_Cmd@a:	; 1 bytes @ 0x3
   857                           	global	Lcd8_Write_Char@a
   858  0073                     Lcd8_Write_Char@a:	; 1 bytes @ 0x3
   859                           	global	___bmul@multiplier
   860  0073                     ___bmul@multiplier:	; 1 bytes @ 0x3
   861                           	global	frexp@eptr
   862  0073                     frexp@eptr:	; 1 bytes @ 0x3
   863                           	global	___ftpack@exp
   864  0073                     ___ftpack@exp:	; 1 bytes @ 0x3
   865                           	global	delay@i
   866  0073                     delay@i:	; 2 bytes @ 0x3
   867                           	global	___ftge@ff2
   868  0073                     ___ftge@ff2:	; 3 bytes @ 0x3
   869  0073                     	ds	1
   870                           	global	??_frexp
   871  0074                     ??_frexp:	; 0 bytes @ 0x4
   872                           	global	??_Lcd8_Clear
   873  0074                     ??_Lcd8_Clear:	; 0 bytes @ 0x4
   874                           	global	?_Lcd8_Set_Cursor
   875  0074                     ?_Lcd8_Set_Cursor:	; 0 bytes @ 0x4
   876                           	global	??_Lcd8_Init
   877  0074                     ??_Lcd8_Init:	; 0 bytes @ 0x4
   878                           	global	?_Lcd8_Write_String
   879  0074                     ?_Lcd8_Write_String:	; 0 bytes @ 0x4
   880                           	global	??___fttol
   881  0074                     ??___fttol:	; 0 bytes @ 0x4
   882                           	global	??___awdiv
   883  0074                     ??___awdiv:	; 0 bytes @ 0x4
   884                           	global	??___awmod
   885  0074                     ??___awmod:	; 0 bytes @ 0x4
   886                           	global	Lcd8_Set_Cursor@b
   887  0074                     Lcd8_Set_Cursor@b:	; 1 bytes @ 0x4
   888                           	global	strcmp@r
   889  0074                     strcmp@r:	; 1 bytes @ 0x4
   890                           	global	___ftpack@sign
   891  0074                     ___ftpack@sign:	; 1 bytes @ 0x4
   892                           	global	Lcd8_Write_String@a
   893  0074                     Lcd8_Write_String@a:	; 2 bytes @ 0x4
   894                           	global	___aldiv@dividend
   895  0074                     ___aldiv@dividend:	; 4 bytes @ 0x4
   896  0074                     	ds	1
   897                           	global	??___ftpack
   898  0075                     ??___ftpack:	; 0 bytes @ 0x5
   899                           	global	??_Lcd8_Set_Cursor
   900  0075                     ??_Lcd8_Set_Cursor:	; 0 bytes @ 0x5
   901                           	global	Lcd8_Set_Cursor@a
   902  0075                     Lcd8_Set_Cursor@a:	; 1 bytes @ 0x5
   903                           	global	strcmp@s1
   904  0075                     strcmp@s1:	; 1 bytes @ 0x5
   905                           	global	___awdiv@counter
   906  0075                     ___awdiv@counter:	; 1 bytes @ 0x5
   907                           	global	___awmod@counter
   908  0075                     ___awmod@counter:	; 1 bytes @ 0x5
   909                           	global	reverse@temp
   910  0075                     reverse@temp:	; 2 bytes @ 0x5
   911                           	global	delay@j
   912  0075                     delay@j:	; 2 bytes @ 0x5
   913  0075                     	ds	1
   914                           	global	??_Lcd8_Write_String
   915  0076                     ??_Lcd8_Write_String:	; 0 bytes @ 0x6
   916                           	global	??___ftge
   917  0076                     ??___ftge:	; 0 bytes @ 0x6
   918                           	global	___awdiv@sign
   919  0076                     ___awdiv@sign:	; 1 bytes @ 0x6
   920                           	global	___awmod@sign
   921  0076                     ___awmod@sign:	; 1 bytes @ 0x6
   922                           	global	Lcd8_Write_String@i
   923  0076                     Lcd8_Write_String@i:	; 2 bytes @ 0x6
   924  0076                     	ds	1
   925                           	global	reverse@i
   926  0077                     reverse@i:	; 2 bytes @ 0x7
   927                           	global	___awdiv@quotient
   928  0077                     ___awdiv@quotient:	; 2 bytes @ 0x7
   929  0077                     	ds	1
   930                           	global	??_initial_State
   931  0078                     ??_initial_State:	; 0 bytes @ 0x8
   932                           	global	??___aldiv
   933  0078                     ??___aldiv:	; 0 bytes @ 0x8
   934                           	global	?___ftdiv
   935  0078                     ?___ftdiv:	; 3 bytes @ 0x8
   936                           	global	?___ftneg
   937  0078                     ?___ftneg:	; 3 bytes @ 0x8
   938                           	global	?___lltoft
   939  0078                     ?___lltoft:	; 3 bytes @ 0x8
   940                           	global	___fttol@sign1
   941  0078                     ___fttol@sign1:	; 1 bytes @ 0x8
   942                           	global	___ftdiv@f2
   943  0078                     ___ftdiv@f2:	; 3 bytes @ 0x8
   944                           	global	___ftneg@f1
   945  0078                     ___ftneg@f1:	; 3 bytes @ 0x8
   946                           	global	___lltoft@c
   947  0078                     ___lltoft@c:	; 4 bytes @ 0x8
   948  0078                     	ds	1
   949                           	global	UART_Init@x
   950  0079                     UART_Init@x:	; 2 bytes @ 0x9
   951                           	global	reverse@j
   952  0079                     reverse@j:	; 2 bytes @ 0x9
   953                           	global	___fttol@lval
   954  0079                     ___fttol@lval:	; 4 bytes @ 0x9
   955  0079                     	ds	2
   956                           	global	??___ftneg
   957  007B                     ??___ftneg:	; 0 bytes @ 0xB
   958                           	global	?___awtoft
   959  007B                     ?___awtoft:	; 3 bytes @ 0xB
   960                           	global	reverse@str
   961  007B                     reverse@str:	; 1 bytes @ 0xB
   962                           	global	___awtoft@c
   963  007B                     ___awtoft@c:	; 2 bytes @ 0xB
   964                           	global	___ftdiv@f1
   965  007B                     ___ftdiv@f1:	; 3 bytes @ 0xB
   966  007B                     	ds	1
   967                           	global	??___lltoft
   968  007C                     ??___lltoft:	; 0 bytes @ 0xC
   969  007C                     	ds	1
   970                           	global	___fttol@exp1
   971  007D                     ___fttol@exp1:	; 1 bytes @ 0xD
   972                           	global	___lltoft@exp
   973  007D                     ___lltoft@exp:	; 1 bytes @ 0xD
   974  007D                     	ds	1
   975                           	global	??_main
   976  007E                     ??_main:	; 0 bytes @ 0xE
   977                           	global	??___ftsub
   978  007E                     ??___ftsub:	; 0 bytes @ 0xE
   979                           psect	cstackBANK0,class=BANK0,space=1
   980                           global __pcstackBANK0
   981  0020                     __pcstackBANK0:
   982                           	global	??___ftdiv
   983  0020                     ??___ftdiv:	; 0 bytes @ 0x0
   984                           	global	??___awtoft
   985  0020                     ??___awtoft:	; 0 bytes @ 0x0
   986                           	global	?_intToStr
   987  0020                     ?_intToStr:	; 2 bytes @ 0x0
   988                           	global	?___altoft
   989  0020                     ?___altoft:	; 3 bytes @ 0x0
   990                           	global	___aldiv@counter
   991  0020                     ___aldiv@counter:	; 1 bytes @ 0x0
   992                           	global	intToStr@x
   993  0020                     intToStr@x:	; 2 bytes @ 0x0
   994                           	global	___altoft@c
   995  0020                     ___altoft@c:	; 4 bytes @ 0x0
   996  0020                     	ds	1
   997                           	global	___aldiv@sign
   998  0021                     ___aldiv@sign:	; 1 bytes @ 0x1
   999  0021                     	ds	1
  1000                           	global	intToStr@str
  1001  0022                     intToStr@str:	; 1 bytes @ 0x2
  1002                           	global	___awtoft@sign
  1003  0022                     ___awtoft@sign:	; 1 bytes @ 0x2
  1004                           	global	___aldiv@quotient
  1005  0022                     ___aldiv@quotient:	; 4 bytes @ 0x2
  1006  0022                     	ds	1
  1007                           	global	?___ftmul
  1008  0023                     ?___ftmul:	; 3 bytes @ 0x3
  1009                           	global	intToStr@d
  1010  0023                     intToStr@d:	; 2 bytes @ 0x3
  1011                           	global	___ftmul@f1
  1012  0023                     ___ftmul@f1:	; 3 bytes @ 0x3
  1013  0023                     	ds	1
  1014                           	global	??___altoft
  1015  0024                     ??___altoft:	; 0 bytes @ 0x4
  1016                           	global	___ftdiv@cntr
  1017  0024                     ___ftdiv@cntr:	; 1 bytes @ 0x4
  1018  0024                     	ds	1
  1019                           	global	??_intToStr
  1020  0025                     ??_intToStr:	; 0 bytes @ 0x5
  1021                           	global	___ftdiv@f3
  1022  0025                     ___ftdiv@f3:	; 3 bytes @ 0x5
  1023  0025                     	ds	1
  1024                           	global	?_UART_Init
  1025  0026                     ?_UART_Init:	; 1 bytes @ 0x6
  1026                           	global	___altoft@exp
  1027  0026                     ___altoft@exp:	; 1 bytes @ 0x6
  1028                           	global	___ftmul@f2
  1029  0026                     ___ftmul@f2:	; 3 bytes @ 0x6
  1030                           	global	UART_Init@baudrate
  1031  0026                     UART_Init@baudrate:	; 4 bytes @ 0x6
  1032  0026                     	ds	1
  1033                           	global	___altoft@sign
  1034  0027                     ___altoft@sign:	; 1 bytes @ 0x7
  1035                           	global	intToStr@i
  1036  0027                     intToStr@i:	; 2 bytes @ 0x7
  1037  0027                     	ds	1
  1038                           	global	___ftdiv@exp
  1039  0028                     ___ftdiv@exp:	; 1 bytes @ 0x8
  1040  0028                     	ds	1
  1041                           	global	??___ftmul
  1042  0029                     ??___ftmul:	; 0 bytes @ 0x9
  1043                           	global	___ftdiv@sign
  1044  0029                     ___ftdiv@sign:	; 1 bytes @ 0x9
  1045  0029                     	ds	1
  1046                           	global	??_UART_Init
  1047  002A                     ??_UART_Init:	; 0 bytes @ 0xA
  1048  002A                     	ds	3
  1049                           	global	___ftmul@exp
  1050  002D                     ___ftmul@exp:	; 1 bytes @ 0xD
  1051  002D                     	ds	1
  1052                           	global	___ftmul@f3_as_product
  1053  002E                     ___ftmul@f3_as_product:	; 3 bytes @ 0xE
  1054  002E                     	ds	3
  1055                           	global	___ftmul@cntr
  1056  0031                     ___ftmul@cntr:	; 1 bytes @ 0x11
  1057  0031                     	ds	1
  1058                           	global	___ftmul@sign
  1059  0032                     ___ftmul@sign:	; 1 bytes @ 0x12
  1060  0032                     	ds	1
  1061                           	global	?___ftadd
  1062  0033                     ?___ftadd:	; 3 bytes @ 0x13
  1063                           	global	___ftadd@f1
  1064  0033                     ___ftadd@f1:	; 3 bytes @ 0x13
  1065  0033                     	ds	3
  1066                           	global	___ftadd@f2
  1067  0036                     ___ftadd@f2:	; 3 bytes @ 0x16
  1068  0036                     	ds	3
  1069                           	global	??___ftadd
  1070  0039                     ??___ftadd:	; 0 bytes @ 0x19
  1071  0039                     	ds	4
  1072                           	global	___ftadd@sign
  1073  003D                     ___ftadd@sign:	; 1 bytes @ 0x1D
  1074  003D                     	ds	1
  1075                           	global	___ftadd@exp2
  1076  003E                     ___ftadd@exp2:	; 1 bytes @ 0x1E
  1077  003E                     	ds	1
  1078                           	global	___ftadd@exp1
  1079  003F                     ___ftadd@exp1:	; 1 bytes @ 0x1F
  1080  003F                     	ds	1
  1081                           	global	?_floor
  1082  0040                     ?_floor:	; 3 bytes @ 0x20
  1083                           	global	?_ldexp
  1084  0040                     ?_ldexp:	; 3 bytes @ 0x20
  1085                           	global	?___ftsub
  1086  0040                     ?___ftsub:	; 3 bytes @ 0x20
  1087                           	global	___ftsub@f2
  1088  0040                     ___ftsub@f2:	; 3 bytes @ 0x20
  1089                           	global	floor@x
  1090  0040                     floor@x:	; 3 bytes @ 0x20
  1091                           	global	ldexp@value
  1092  0040                     ldexp@value:	; 3 bytes @ 0x20
  1093  0040                     	ds	3
  1094                           	global	??_floor
  1095  0043                     ??_floor:	; 0 bytes @ 0x23
  1096                           	global	ldexp@newexp
  1097  0043                     ldexp@newexp:	; 2 bytes @ 0x23
  1098                           	global	___ftsub@f1
  1099  0043                     ___ftsub@f1:	; 3 bytes @ 0x23
  1100  0043                     	ds	1
  1101                           	global	floor@i
  1102  0044                     floor@i:	; 3 bytes @ 0x24
  1103  0044                     	ds	1
  1104                           	global	??_ldexp
  1105  0045                     ??_ldexp:	; 0 bytes @ 0x25
  1106  0045                     	ds	2
  1107                           	global	floor@expon
  1108  0047                     floor@expon:	; 2 bytes @ 0x27
  1109                           	global	_ldexp$1975
  1110  0047                     _ldexp$1975:	; 3 bytes @ 0x27
  1111  0047                     	ds	3
  1112                           	global	?_eval_poly
  1113  004A                     ?_eval_poly:	; 3 bytes @ 0x2A
  1114                           	global	eval_poly@x
  1115  004A                     eval_poly@x:	; 3 bytes @ 0x2A
  1116  004A                     	ds	3
  1117                           	global	eval_poly@d
  1118  004D                     eval_poly@d:	; 1 bytes @ 0x2D
  1119  004D                     	ds	1
  1120                           	global	eval_poly@n
  1121  004E                     eval_poly@n:	; 2 bytes @ 0x2E
  1122  004E                     	ds	2
  1123                           	global	??_eval_poly
  1124  0050                     ??_eval_poly:	; 0 bytes @ 0x30
  1125  0050                     	ds	1
  1126                           	global	eval_poly@res
  1127  0051                     eval_poly@res:	; 3 bytes @ 0x31
  1128  0051                     	ds	3
  1129                           	global	?_log
  1130  0054                     ?_log:	; 3 bytes @ 0x34
  1131                           	global	log@x
  1132  0054                     log@x:	; 3 bytes @ 0x34
  1133  0054                     	ds	3
  1134                           	global	??_log
  1135  0057                     ??_log:	; 0 bytes @ 0x37
  1136  0057                     	ds	1
  1137                           	global	log@exp
  1138  0058                     log@exp:	; 2 bytes @ 0x38
  1139  0058                     	ds	2
  1140                           	global	?_exp
  1141  005A                     ?_exp:	; 3 bytes @ 0x3A
  1142                           	global	exp@x
  1143  005A                     exp@x:	; 3 bytes @ 0x3A
  1144  005A                     	ds	3
  1145                           	global	??_exp
  1146  005D                     ??_exp:	; 0 bytes @ 0x3D
  1147  005D                     	ds	1
  1148                           	global	_exp$1929
  1149  005E                     _exp$1929:	; 3 bytes @ 0x3E
  1150  005E                     	ds	3
  1151                           	global	exp@exp
  1152  0061                     exp@exp:	; 2 bytes @ 0x41
  1153  0061                     	ds	2
  1154                           	global	exp@sign
  1155  0063                     exp@sign:	; 1 bytes @ 0x43
  1156  0063                     	ds	1
  1157                           	global	?_pow
  1158  0064                     ?_pow:	; 3 bytes @ 0x44
  1159                           	global	pow@x
  1160  0064                     pow@x:	; 3 bytes @ 0x44
  1161  0064                     	ds	3
  1162                           	global	pow@y
  1163  0067                     pow@y:	; 3 bytes @ 0x47
  1164  0067                     	ds	3
  1165                           	global	??_pow
  1166  006A                     ??_pow:	; 0 bytes @ 0x4A
  1167  006A                     	ds	1
  1168                           	global	??_ftoa
  1169  006B                     ??_ftoa:	; 0 bytes @ 0x4B
  1170  006B                     	ds	2
  1171                           	global	??_present
  1172  006D                     ??_present:	; 0 bytes @ 0x4D
  1173                           	global	??_absent
  1174  006D                     ??_absent:	; 0 bytes @ 0x4D
  1175  006D                     	ds	1
  1176 ;;Data sizes: Strings 179, constant 57, data 48, bss 24, persistent 0 stack 0
  1177 ;;Auto spaces:   Size  Autos    Used
  1178 ;; COMMON          14     14      14
  1179 ;; BANK0           80     78      80
  1180 ;; BANK1           80     31      53
  1181 ;; BANK3           96      0      48
  1182 ;; BANK2           96      0       0
  1183                           
  1184 ;;
  1185 ;; Pointer list with targets:
  1186                           
  1187 ;; ?_frexp	 size(1) Largest target is 0
  1188 ;;
  1189 ;; ?_ldexp	 size(1) Largest target is 0
  1190 ;;
  1191 ;; ?_eval_poly	 size(1) Largest target is 0
  1192 ;;
  1193 ;; ?_floor	 size(1) Largest target is 0
  1194 ;;
  1195 ;; ?___altoft	float  size(1) Largest target is 0
  1196 ;;
  1197 ;; ?___ftdiv	float  size(1) Largest target is 0
  1198 ;;
  1199 ;; ?___ftsub	float  size(1) Largest target is 0
  1200 ;;
  1201 ;; ?___ftpack	float  size(1) Largest target is 0
  1202 ;;
  1203 ;; ?_exp	float  size(1) Largest target is 0
  1204 ;;
  1205 ;; ?_log	float  size(1) Largest target is 0
  1206 ;;
  1207 ;; ?___lltoft	float  size(1) Largest target is 0
  1208 ;;
  1209 ;; ?_strcmp	int  size(1) Largest target is 0
  1210 ;;
  1211 ;; ?___ftmul	float  size(1) Largest target is 0
  1212 ;;
  1213 ;; ?_pow	float  size(1) Largest target is 0
  1214 ;;
  1215 ;; ?___ftadd	float  size(1) Largest target is 0
  1216 ;;
  1217 ;; ?___ftneg	float  size(1) Largest target is 0
  1218 ;;
  1219 ;; ?___awtoft	float  size(1) Largest target is 0
  1220 ;;
  1221 ;; ?___fttol	long  size(1) Largest target is 0
  1222 ;;
  1223 ;; ?_intToStr	int  size(1) Largest target is 0
  1224 ;;
  1225 ;; ?___awdiv	int  size(1) Largest target is 0
  1226 ;;
  1227 ;; ?___awmod	int  size(1) Largest target is 0
  1228 ;;
  1229 ;; ?___aldiv	long  size(1) Largest target is 0
  1230 ;;
  1231 ;; eval_poly@d	PTR const  size(1) Largest target is 30
  1232 ;;		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 
  1233 ;;
  1234 ;; frexp@eptr	PTR int  size(1) Largest target is 2
  1235 ;;		 -> log@exp(BANK0[2]), floor@expon(BANK0[2]), 
  1236 ;;
  1237 ;; strcmp@s2	PTR const unsigned char  size(1) Largest target is 13
  1238 ;;		 -> STR_17(CODE[13]), STR_14(CODE[13]), STR_11(CODE[13]), STR_8(CODE[13]), 
  1239 ;;
  1240 ;; strcmp@s1	PTR const unsigned char  size(1) Largest target is 12
  1241 ;;		 -> rfid(BANK1[12]), 
  1242 ;;
  1243 ;; ftoa@res	PTR unsigned char  size(1) Largest target is 2
  1244 ;;		 -> buffer(BANK1[2]), 
  1245 ;;
  1246 ;; intToStr@str	PTR unsigned char  size(1) Largest target is 2
  1247 ;;		 -> buffer(BANK1[2]), 
  1248 ;;
  1249 ;; reverse@str	PTR unsigned char  size(1) Largest target is 2
  1250 ;;		 -> buffer(BANK1[2]), 
  1251 ;;
  1252 ;; Lcd8_Write_String@a	PTR unsigned char  size(2) Largest target is 17
  1253 ;;		 -> STR_18(CODE[17]), STR_16(CODE[17]), STR_15(CODE[13]), STR_13(CODE[17]), 
  1254 ;;		 -> STR_12(CODE[13]), STR_10(CODE[17]), STR_9(CODE[13]), STR_7(CODE[4]), 
  1255 ;;		 -> rfid(BANK1[12]), STR_6(CODE[8]), STR_5(CODE[9]), STR_4(CODE[9]), 
  1256 ;;		 -> STR_3(CODE[9]), buffer(BANK1[2]), STR_2(CODE[16]), STR_1(CODE[16]), 
  1257 ;;
  1258                           
  1259                           
  1260 ;;
  1261 ;; Critical Paths under _main in COMMON
  1262 ;;
  1263 ;;   _absent->___awtoft
  1264 ;;   _present->___awtoft
  1265 ;;   _ftoa->___fttol
  1266 ;;   _ftoa->___awtoft
  1267 ;;   _pow->___fttol
  1268 ;;   _pow->___lltoft
  1269 ;;   _exp->___fttol
  1270 ;;   _exp->___awtoft
  1271 ;;   _exp->___ftdiv
  1272 ;;   _log->___awtoft
  1273 ;;   _initial_State->_Lcd8_Write_String
  1274 ;;   _floor->___fttol
  1275 ;;   ___ftsub->___awtoft
  1276 ;;   _Lcd8_Write_String->_Lcd8_Write_Char
  1277 ;;   _Lcd8_Init->_Lcd8_Cmd
  1278 ;;   _Lcd8_Set_Cursor->_Lcd8_Cmd
  1279 ;;   _Lcd8_Clear->_Lcd8_Cmd
  1280 ;;   ___lltoft->___ftpack
  1281 ;;   ___altoft->___fttol
  1282 ;;   ___awtoft->___ftneg
  1283 ;;   ___ftmul->___awtoft
  1284 ;;   ___ftdiv->___ftpack
  1285 ;;   ___ftadd->___awtoft
  1286 ;;   _intToStr->___fttol
  1287 ;;   _UART_Init->___aldiv
  1288 ;;   _Lcd8_Write_Char->_Lcd8_Port
  1289 ;;   _Lcd8_Cmd->_Lcd8_Port
  1290 ;;   ___ftneg->___ftpack
  1291 ;;
  1292 ;; Critical Paths under _main in BANK0
  1293 ;;
  1294 ;;   _checkRFID->_present
  1295 ;;   _checkRFID->_absent
  1296 ;;   _absent->_ftoa
  1297 ;;   _present->_ftoa
  1298 ;;   _ftoa->_pow
  1299 ;;   _pow->_exp
  1300 ;;   _exp->_log
  1301 ;;   _log->_eval_poly
  1302 ;;   _eval_poly->_ldexp
  1303 ;;   _floor->___ftadd
  1304 ;;   ___ftsub->___ftadd
  1305 ;;   _ldexp->___ftadd
  1306 ;;   ___ftmul->___awtoft
  1307 ;;   ___ftadd->___ftmul
  1308 ;;   _UART_Init->___aldiv
  1309 ;;
  1310 ;; Critical Paths under _main in BANK1
  1311 ;;
  1312 ;;   _main->_checkRFID
  1313 ;;   _absent->_ftoa
  1314 ;;   _present->_ftoa
  1315 ;;   _ftoa->_pow
  1316 ;;
  1317 ;; Critical Paths under _main in BANK3
  1318 ;;
  1319 ;;   None.
  1320 ;;
  1321 ;; Critical Paths under _main in BANK2
  1322 ;;
  1323 ;;   None.
  1324                           
  1325 ;;
  1326 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1327 ;;
  1328                           
  1329 ;;
  1330 ;;Call Graph Tables:
  1331 ;;
  1332 ;; ---------------------------------------------------------------------------------
  1333 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1334 ;; ---------------------------------------------------------------------------------
  1335 ;; (0) _main                                                 0     0      0   40094
  1336 ;;                          _Lcd8_Init
  1337 ;;                          _UART_Init
  1338 ;;                         _Lcd8_Clear
  1339 ;;                    _Lcd8_Set_Cursor
  1340 ;;                  _Lcd8_Write_String
  1341 ;;                          _checkRFID
  1342 ;; ---------------------------------------------------------------------------------
  1343 ;; (1) _checkRFID                                            7     7      0   38492
  1344 ;;                                             24 BANK1      7     7      0
  1345 ;;                    _UART_Data_Ready
  1346 ;;                          _UART_Read
  1347 ;;                         _Lcd8_Clear
  1348 ;;                    _Lcd8_Set_Cursor
  1349 ;;                  _Lcd8_Write_String
  1350 ;;                             _strcmp
  1351 ;;                              _delay
  1352 ;;                            _present
  1353 ;;                             _absent
  1354 ;;                      _initial_State
  1355 ;; ---------------------------------------------------------------------------------
  1356 ;; (2) _absent                                               1     1      0   18303
  1357 ;;                                             77 BANK0      1     1      0
  1358 ;;                           ___awtoft
  1359 ;;                               _ftoa
  1360 ;;                    _Lcd8_Set_Cursor
  1361 ;;                  _Lcd8_Write_String
  1362 ;;                              _delay
  1363 ;; ---------------------------------------------------------------------------------
  1364 ;; (2) _present                                              1     1      0   18303
  1365 ;;                                             77 BANK0      1     1      0
  1366 ;;                           ___awtoft
  1367 ;;                               _ftoa
  1368 ;;                    _Lcd8_Set_Cursor
  1369 ;;                  _Lcd8_Write_String
  1370 ;;                              _delay
  1371 ;; ---------------------------------------------------------------------------------
  1372 ;; (3) _ftoa                                                18    12      6   17337
  1373 ;;                                             75 BANK0      2     2      0
  1374 ;;                                              8 BANK1     16    10      6
  1375 ;;                            ___fttol
  1376 ;;                           ___awtoft
  1377 ;;                            ___ftneg
  1378 ;;                            ___ftadd
  1379 ;;                           _intToStr
  1380 ;;                                _pow
  1381 ;;                            ___ftmul
  1382 ;; ---------------------------------------------------------------------------------
  1383 ;; (4) _pow                                                 15     9      6   13644
  1384 ;;                                             68 BANK0      7     1      6
  1385 ;;                                              0 BANK1      8     8      0
  1386 ;;                             ___ftge
  1387 ;;                            ___fttol
  1388 ;;                           ___lltoft
  1389 ;;                            ___ftneg
  1390 ;;                                _log
  1391 ;;                            ___ftmul
  1392 ;;                                _exp
  1393 ;; ---------------------------------------------------------------------------------
  1394 ;; (5) _exp                                                 10     7      3    7799
  1395 ;;                                             58 BANK0     10     7      3
  1396 ;;                             ___ftge
  1397 ;;                            ___ftneg
  1398 ;;                            ___ftmul
  1399 ;;                              _floor
  1400 ;;                            ___fttol
  1401 ;;                           ___awtoft
  1402 ;;                            ___ftsub
  1403 ;;                          _eval_poly
  1404 ;;                              _ldexp
  1405 ;;                            ___ftdiv
  1406 ;;                                _log (ARG)
  1407 ;; ---------------------------------------------------------------------------------
  1408 ;; (5) _log                                                  6     3      3    4263
  1409 ;;                                             52 BANK0      6     3      3
  1410 ;;                             ___ftge
  1411 ;;                              _frexp
  1412 ;;                            ___ftmul
  1413 ;;                            ___ftadd
  1414 ;;                          _eval_poly
  1415 ;;                           ___awtoft
  1416 ;; ---------------------------------------------------------------------------------
  1417 ;; (2) _initial_State                                        0     0      0     772
  1418 ;;                         _Lcd8_Clear
  1419 ;;                    _Lcd8_Set_Cursor
  1420 ;;                  _Lcd8_Write_String
  1421 ;; ---------------------------------------------------------------------------------
  1422 ;; (6) _eval_poly                                           10     4      6    1854
  1423 ;;                                             42 BANK0     10     4      6
  1424 ;;                             ___bmul
  1425 ;;                            ___ftmul
  1426 ;;                            ___ftadd
  1427 ;;                              _ldexp (ARG)
  1428 ;; ---------------------------------------------------------------------------------
  1429 ;; (6) _floor                                                9     6      3    2259
  1430 ;;                                             32 BANK0      9     6      3
  1431 ;;                              _frexp
  1432 ;;                             ___ftge
  1433 ;;                            ___fttol
  1434 ;;                           ___altoft
  1435 ;;                            ___ftadd
  1436 ;; ---------------------------------------------------------------------------------
  1437 ;; (6) ___ftsub                                              6     0      6    1094
  1438 ;;                                             32 BANK0      6     0      6
  1439 ;;                            ___ftadd
  1440 ;;                           ___awtoft (ARG)
  1441 ;; ---------------------------------------------------------------------------------
  1442 ;; (3) _Lcd8_Write_String                                    4     2      2     288
  1443 ;;                                              4 COMMON     4     2      2
  1444 ;;                    _Lcd8_Write_Char
  1445 ;; ---------------------------------------------------------------------------------
  1446 ;; (1) _Lcd8_Init                                            2     2      0     374
  1447 ;;                                              4 COMMON     2     2      0
  1448 ;;                          _Lcd8_Port
  1449 ;;                           _Lcd8_Cmd
  1450 ;; ---------------------------------------------------------------------------------
  1451 ;; (3) _Lcd8_Set_Cursor                                      2     1      1     286
  1452 ;;                                              4 COMMON     2     1      1
  1453 ;;                           _Lcd8_Cmd
  1454 ;; ---------------------------------------------------------------------------------
  1455 ;; (3) _Lcd8_Clear                                           0     0      0     198
  1456 ;;                           _Lcd8_Cmd
  1457 ;; ---------------------------------------------------------------------------------
  1458 ;; (6) _ldexp                                               10     5      5     453
  1459 ;;                                             32 BANK0     10     5      5
  1460 ;;                             ___ftge
  1461 ;;                            ___ftneg
  1462 ;;                             ___bmul (ARG)
  1463 ;;                            ___ftmul (ARG)
  1464 ;;                            ___ftadd (ARG)
  1465 ;; ---------------------------------------------------------------------------------
  1466 ;; (5) ___lltoft                                             6     2      4     278
  1467 ;;                                              8 COMMON     6     2      4
  1468 ;;                           ___ftpack
  1469 ;; ---------------------------------------------------------------------------------
  1470 ;; (7) ___altoft                                             8     4      4     347
  1471 ;;                                              0 BANK0      8     4      4
  1472 ;;                           ___ftpack
  1473 ;;                            ___fttol (ARG)
  1474 ;; ---------------------------------------------------------------------------------
  1475 ;; (6) ___awtoft                                             6     3      3     300
  1476 ;;                                             11 COMMON     3     0      3
  1477 ;;                                              0 BANK0      3     3      0
  1478 ;;                           ___ftpack
  1479 ;;                            ___ftneg (ARG)
  1480 ;; ---------------------------------------------------------------------------------
  1481 ;; (4) ___ftmul                                             16    10      6     535
  1482 ;;                                              3 BANK0     16    10      6
  1483 ;;                           ___ftpack
  1484 ;;                           ___awtoft (ARG)
  1485 ;;                              _frexp (ARG)
  1486 ;; ---------------------------------------------------------------------------------
  1487 ;; (6) ___ftdiv                                             16    10      6     489
  1488 ;;                                              8 COMMON     6     0      6
  1489 ;;                                              0 BANK0     10    10      0
  1490 ;;                           ___ftpack
  1491 ;; ---------------------------------------------------------------------------------
  1492 ;; (7) ___ftadd                                             13     7      6    1049
  1493 ;;                                             19 BANK0     13     7      6
  1494 ;;                           ___ftpack
  1495 ;;                            ___ftneg (ARG)
  1496 ;;                           ___awtoft (ARG)
  1497 ;;                            ___ftmul (ARG)
  1498 ;;                              _frexp (ARG)
  1499 ;;                             ___bmul (ARG)
  1500 ;; ---------------------------------------------------------------------------------
  1501 ;; (4) _intToStr                                             9     4      5    1177
  1502 ;;                                              0 BANK0      9     4      5
  1503 ;;                            ___awmod
  1504 ;;                            ___awdiv
  1505 ;;                            _reverse
  1506 ;;                            ___fttol (ARG)
  1507 ;; ---------------------------------------------------------------------------------
  1508 ;; (1) _UART_Init                                           18    14      4     456
  1509 ;;                                              9 COMMON     2     2      0
  1510 ;;                                              6 BANK0     16    12      4
  1511 ;;                            ___aldiv
  1512 ;; ---------------------------------------------------------------------------------
  1513 ;; (4) _Lcd8_Write_Char                                      3     3      0     198
  1514 ;;                                              1 COMMON     3     3      0
  1515 ;;                          _Lcd8_Port
  1516 ;; ---------------------------------------------------------------------------------
  1517 ;; (4) _Lcd8_Cmd                                             3     3      0     198
  1518 ;;                                              1 COMMON     3     3      0
  1519 ;;                          _Lcd8_Port
  1520 ;; ---------------------------------------------------------------------------------
  1521 ;; (7) _frexp                                                6     2      4     224
  1522 ;;                                              0 COMMON     6     2      4
  1523 ;; ---------------------------------------------------------------------------------
  1524 ;; (5) ___awmod                                              7     3      4     296
  1525 ;;                                              0 COMMON     7     3      4
  1526 ;; ---------------------------------------------------------------------------------
  1527 ;; (2) ___aldiv                                             15     7      8     300
  1528 ;;                                              0 COMMON     9     1      8
  1529 ;;                                              0 BANK0      6     6      0
  1530 ;; ---------------------------------------------------------------------------------
  1531 ;; (7) ___ftge                                              12     6      6     136
  1532 ;;                                              0 COMMON    12     6      6
  1533 ;; ---------------------------------------------------------------------------------
  1534 ;; (7) ___ftneg                                              3     0      3      45
  1535 ;;                                              8 COMMON     3     0      3
  1536 ;;                           ___ftpack (ARG)
  1537 ;; ---------------------------------------------------------------------------------
  1538 ;; (5) ___awdiv                                              9     5      4     300
  1539 ;;                                              0 COMMON     9     5      4
  1540 ;; ---------------------------------------------------------------------------------
  1541 ;; (6) ___fttol                                             14    10      4     252
  1542 ;;                                              0 COMMON    14    10      4
  1543 ;; ---------------------------------------------------------------------------------
  1544 ;; (5) ___ftpack                                             8     3      5     209
  1545 ;;                                              0 COMMON     8     3      5
  1546 ;; ---------------------------------------------------------------------------------
  1547 ;; (7) ___bmul                                               4     3      1      92
  1548 ;;                                              0 COMMON     4     3      1
  1549 ;; ---------------------------------------------------------------------------------
  1550 ;; (3) _strcmp                                               6     4      2      89
  1551 ;;                                              0 COMMON     6     4      2
  1552 ;; ---------------------------------------------------------------------------------
  1553 ;; (3) _delay                                                7     5      2      92
  1554 ;;                                              0 COMMON     7     5      2
  1555 ;; ---------------------------------------------------------------------------------
  1556 ;; (5) _reverse                                             12    10      2     269
  1557 ;;                                              0 COMMON    12    10      2
  1558 ;; ---------------------------------------------------------------------------------
  1559 ;; (2) _UART_Read                                            0     0      0       0
  1560 ;; ---------------------------------------------------------------------------------
  1561 ;; (2) _UART_Data_Ready                                      0     0      0       0
  1562 ;; ---------------------------------------------------------------------------------
  1563 ;; (5) _Lcd8_Port                                            1     1      0     176
  1564 ;;                                              0 COMMON     1     1      0
  1565 ;; ---------------------------------------------------------------------------------
  1566 ;; Estimated maximum stack depth 7
  1567 ;; ---------------------------------------------------------------------------------
  1568                           
  1569 ;; Call Graph Graphs:
  1570                           
  1571 ;; _main (ROOT)
  1572 ;;   _Lcd8_Init
  1573 ;;     _Lcd8_Port
  1574 ;;     _Lcd8_Cmd
  1575 ;;       _Lcd8_Port
  1576 ;;   _UART_Init
  1577 ;;     ___aldiv
  1578 ;;   _Lcd8_Clear
  1579 ;;     _Lcd8_Cmd
  1580 ;;       _Lcd8_Port
  1581 ;;   _Lcd8_Set_Cursor
  1582 ;;     _Lcd8_Cmd
  1583 ;;       _Lcd8_Port
  1584 ;;   _Lcd8_Write_String
  1585 ;;     _Lcd8_Write_Char
  1586 ;;       _Lcd8_Port
  1587 ;;   _checkRFID
  1588 ;;     _UART_Data_Ready
  1589 ;;     _UART_Read
  1590 ;;     _Lcd8_Clear
  1591 ;;       _Lcd8_Cmd
  1592 ;;         _Lcd8_Port
  1593 ;;     _Lcd8_Set_Cursor
  1594 ;;       _Lcd8_Cmd
  1595 ;;         _Lcd8_Port
  1596 ;;     _Lcd8_Write_String
  1597 ;;       _Lcd8_Write_Char
  1598 ;;         _Lcd8_Port
  1599 ;;     _strcmp
  1600 ;;     _delay
  1601 ;;     _present
  1602 ;;       ___awtoft
  1603 ;;         ___ftpack
  1604 ;;         ___ftneg (ARG)
  1605 ;;           ___ftpack (ARG)
  1606 ;;       _ftoa
  1607 ;;         ___fttol
  1608 ;;         ___awtoft
  1609 ;;           ___ftpack
  1610 ;;           ___ftneg (ARG)
  1611 ;;             ___ftpack (ARG)
  1612 ;;         ___ftneg
  1613 ;;           ___ftpack (ARG)
  1614 ;;         ___ftadd
  1615 ;;           ___ftpack
  1616 ;;           ___ftneg (ARG)
  1617 ;;             ___ftpack (ARG)
  1618 ;;           ___awtoft (ARG)
  1619 ;;             ___ftpack
  1620 ;;             ___ftneg (ARG)
  1621 ;;               ___ftpack (ARG)
  1622 ;;           ___ftmul (ARG)
  1623 ;;             ___ftpack
  1624 ;;             ___awtoft (ARG)
  1625 ;;               ___ftpack
  1626 ;;               ___ftneg (ARG)
  1627 ;;                 ___ftpack (ARG)
  1628 ;;             _frexp (ARG)
  1629 ;;           _frexp (ARG)
  1630 ;;           ___bmul (ARG)
  1631 ;;         _intToStr
  1632 ;;           ___awmod
  1633 ;;           ___awdiv
  1634 ;;           _reverse
  1635 ;;           ___fttol (ARG)
  1636 ;;         _pow
  1637 ;;           ___ftge
  1638 ;;           ___fttol
  1639 ;;           ___lltoft
  1640 ;;             ___ftpack
  1641 ;;           ___ftneg
  1642 ;;             ___ftpack (ARG)
  1643 ;;           _log
  1644 ;;             ___ftge
  1645 ;;             _frexp
  1646 ;;             ___ftmul
  1647 ;;               ___ftpack
  1648 ;;               ___awtoft (ARG)
  1649 ;;                 ___ftpack
  1650 ;;                 ___ftneg (ARG)
  1651 ;;                   ___ftpack (ARG)
  1652 ;;               _frexp (ARG)
  1653 ;;             ___ftadd
  1654 ;;               ___ftpack
  1655 ;;               ___ftneg (ARG)
  1656 ;;                 ___ftpack (ARG)
  1657 ;;               ___awtoft (ARG)
  1658 ;;                 ___ftpack
  1659 ;;                 ___ftneg (ARG)
  1660 ;;                   ___ftpack (ARG)
  1661 ;;               ___ftmul (ARG)
  1662 ;;                 ___ftpack
  1663 ;;                 ___awtoft (ARG)
  1664 ;;                   ___ftpack
  1665 ;;                   ___ftneg (ARG)
  1666 ;;                     ___ftpack (ARG)
  1667 ;;                 _frexp (ARG)
  1668 ;;               _frexp (ARG)
  1669 ;;               ___bmul (ARG)
  1670 ;;             _eval_poly
  1671 ;;               ___bmul
  1672 ;;               ___ftmul
  1673 ;;                 ___ftpack
  1674 ;;                 ___awtoft (ARG)
  1675 ;;                   ___ftpack
  1676 ;;                   ___ftneg (ARG)
  1677 ;;                     ___ftpack (ARG)
  1678 ;;                 _frexp (ARG)
  1679 ;;               ___ftadd
  1680 ;;                 ___ftpack
  1681 ;;                 ___ftneg (ARG)
  1682 ;;                   ___ftpack (ARG)
  1683 ;;                 ___awtoft (ARG)
  1684 ;;                   ___ftpack
  1685 ;;                   ___ftneg (ARG)
  1686 ;;                     ___ftpack (ARG)
  1687 ;;                 ___ftmul (ARG)
  1688 ;;                   ___ftpack
  1689 ;;                   ___awtoft (ARG)
  1690 ;;                     ___ftpack
  1691 ;;                     ___ftneg (ARG)
  1692 ;;                       ___ftpack (ARG)
  1693 ;;                   _frexp (ARG)
  1694 ;;                 _frexp (ARG)
  1695 ;;                 ___bmul (ARG)
  1696 ;;               _ldexp (ARG)
  1697 ;;                 ___ftge
  1698 ;;                 ___ftneg
  1699 ;;                   ___ftpack (ARG)
  1700 ;;                 ___bmul (ARG)
  1701 ;;                 ___ftmul (ARG)
  1702 ;;                   ___ftpack
  1703 ;;                   ___awtoft (ARG)
  1704 ;;                     ___ftpack
  1705 ;;                     ___ftneg (ARG)
  1706 ;;                       ___ftpack (ARG)
  1707 ;;                   _frexp (ARG)
  1708 ;;                 ___ftadd (ARG)
  1709 ;;                   ___ftpack
  1710 ;;                   ___ftneg (ARG)
  1711 ;;                     ___ftpack (ARG)
  1712 ;;                   ___awtoft (ARG)
  1713 ;;                     ___ftpack
  1714 ;;                     ___ftneg (ARG)
  1715 ;;                       ___ftpack (ARG)
  1716 ;;                   ___ftmul (ARG)
  1717 ;;                     ___ftpack
  1718 ;;                     ___awtoft (ARG)
  1719 ;;                       ___ftpack
  1720 ;;                       ___ftneg (ARG)
  1721 ;;                         ___ftpack (ARG)
  1722 ;;                     _frexp (ARG)
  1723 ;;                   _frexp (ARG)
  1724 ;;                   ___bmul (ARG)
  1725 ;;             ___awtoft
  1726 ;;               ___ftpack
  1727 ;;               ___ftneg (ARG)
  1728 ;;                 ___ftpack (ARG)
  1729 ;;           ___ftmul
  1730 ;;             ___ftpack
  1731 ;;             ___awtoft (ARG)
  1732 ;;               ___ftpack
  1733 ;;               ___ftneg (ARG)
  1734 ;;                 ___ftpack (ARG)
  1735 ;;             _frexp (ARG)
  1736 ;;           _exp
  1737 ;;             ___ftge
  1738 ;;             ___ftneg
  1739 ;;               ___ftpack (ARG)
  1740 ;;             ___ftmul
  1741 ;;               ___ftpack
  1742 ;;               ___awtoft (ARG)
  1743 ;;                 ___ftpack
  1744 ;;                 ___ftneg (ARG)
  1745 ;;                   ___ftpack (ARG)
  1746 ;;               _frexp (ARG)
  1747 ;;             _floor
  1748 ;;               _frexp
  1749 ;;               ___ftge
  1750 ;;               ___fttol
  1751 ;;               ___altoft
  1752 ;;                 ___ftpack
  1753 ;;                 ___fttol (ARG)
  1754 ;;               ___ftadd
  1755 ;;                 ___ftpack
  1756 ;;                 ___ftneg (ARG)
  1757 ;;                   ___ftpack (ARG)
  1758 ;;                 ___awtoft (ARG)
  1759 ;;                   ___ftpack
  1760 ;;                   ___ftneg (ARG)
  1761 ;;                     ___ftpack (ARG)
  1762 ;;                 ___ftmul (ARG)
  1763 ;;                   ___ftpack
  1764 ;;                   ___awtoft (ARG)
  1765 ;;                     ___ftpack
  1766 ;;                     ___ftneg (ARG)
  1767 ;;                       ___ftpack (ARG)
  1768 ;;                   _frexp (ARG)
  1769 ;;                 _frexp (ARG)
  1770 ;;                 ___bmul (ARG)
  1771 ;;             ___fttol
  1772 ;;             ___awtoft
  1773 ;;               ___ftpack
  1774 ;;               ___ftneg (ARG)
  1775 ;;                 ___ftpack (ARG)
  1776 ;;             ___ftsub
  1777 ;;               ___ftadd
  1778 ;;                 ___ftpack
  1779 ;;                 ___ftneg (ARG)
  1780 ;;                   ___ftpack (ARG)
  1781 ;;                 ___awtoft (ARG)
  1782 ;;                   ___ftpack
  1783 ;;                   ___ftneg (ARG)
  1784 ;;                     ___ftpack (ARG)
  1785 ;;                 ___ftmul (ARG)
  1786 ;;                   ___ftpack
  1787 ;;                   ___awtoft (ARG)
  1788 ;;                     ___ftpack
  1789 ;;                     ___ftneg (ARG)
  1790 ;;                       ___ftpack (ARG)
  1791 ;;                   _frexp (ARG)
  1792 ;;                 _frexp (ARG)
  1793 ;;                 ___bmul (ARG)
  1794 ;;               ___awtoft (ARG)
  1795 ;;                 ___ftpack
  1796 ;;                 ___ftneg (ARG)
  1797 ;;                   ___ftpack (ARG)
  1798 ;;             _eval_poly
  1799 ;;               ___bmul
  1800 ;;               ___ftmul
  1801 ;;                 ___ftpack
  1802 ;;                 ___awtoft (ARG)
  1803 ;;                   ___ftpack
  1804 ;;                   ___ftneg (ARG)
  1805 ;;                     ___ftpack (ARG)
  1806 ;;                 _frexp (ARG)
  1807 ;;               ___ftadd
  1808 ;;                 ___ftpack
  1809 ;;                 ___ftneg (ARG)
  1810 ;;                   ___ftpack (ARG)
  1811 ;;                 ___awtoft (ARG)
  1812 ;;                   ___ftpack
  1813 ;;                   ___ftneg (ARG)
  1814 ;;                     ___ftpack (ARG)
  1815 ;;                 ___ftmul (ARG)
  1816 ;;                   ___ftpack
  1817 ;;                   ___awtoft (ARG)
  1818 ;;                     ___ftpack
  1819 ;;                     ___ftneg (ARG)
  1820 ;;                       ___ftpack (ARG)
  1821 ;;                   _frexp (ARG)
  1822 ;;                 _frexp (ARG)
  1823 ;;                 ___bmul (ARG)
  1824 ;;               _ldexp (ARG)
  1825 ;;                 ___ftge
  1826 ;;                 ___ftneg
  1827 ;;                   ___ftpack (ARG)
  1828 ;;                 ___bmul (ARG)
  1829 ;;                 ___ftmul (ARG)
  1830 ;;                   ___ftpack
  1831 ;;                   ___awtoft (ARG)
  1832 ;;                     ___ftpack
  1833 ;;                     ___ftneg (ARG)
  1834 ;;                       ___ftpack (ARG)
  1835 ;;                   _frexp (ARG)
  1836 ;;                 ___ftadd (ARG)
  1837 ;;                   ___ftpack
  1838 ;;                   ___ftneg (ARG)
  1839 ;;                     ___ftpack (ARG)
  1840 ;;                   ___awtoft (ARG)
  1841 ;;                     ___ftpack
  1842 ;;                     ___ftneg (ARG)
  1843 ;;                       ___ftpack (ARG)
  1844 ;;                   ___ftmul (ARG)
  1845 ;;                     ___ftpack
  1846 ;;                     ___awtoft (ARG)
  1847 ;;                       ___ftpack
  1848 ;;                       ___ftneg (ARG)
  1849 ;;                         ___ftpack (ARG)
  1850 ;;                     _frexp (ARG)
  1851 ;;                   _frexp (ARG)
  1852 ;;                   ___bmul (ARG)
  1853 ;;             _ldexp
  1854 ;;               ___ftge
  1855 ;;               ___ftneg
  1856 ;;                 ___ftpack (ARG)
  1857 ;;               ___bmul (ARG)
  1858 ;;               ___ftmul (ARG)
  1859 ;;                 ___ftpack
  1860 ;;                 ___awtoft (ARG)
  1861 ;;                   ___ftpack
  1862 ;;                   ___ftneg (ARG)
  1863 ;;                     ___ftpack (ARG)
  1864 ;;                 _frexp (ARG)
  1865 ;;               ___ftadd (ARG)
  1866 ;;                 ___ftpack
  1867 ;;                 ___ftneg (ARG)
  1868 ;;                   ___ftpack (ARG)
  1869 ;;                 ___awtoft (ARG)
  1870 ;;                   ___ftpack
  1871 ;;                   ___ftneg (ARG)
  1872 ;;                     ___ftpack (ARG)
  1873 ;;                 ___ftmul (ARG)
  1874 ;;                   ___ftpack
  1875 ;;                   ___awtoft (ARG)
  1876 ;;                     ___ftpack
  1877 ;;                     ___ftneg (ARG)
  1878 ;;                       ___ftpack (ARG)
  1879 ;;                   _frexp (ARG)
  1880 ;;                 _frexp (ARG)
  1881 ;;                 ___bmul (ARG)
  1882 ;;             ___ftdiv
  1883 ;;               ___ftpack
  1884 ;;             _log (ARG)
  1885 ;;               ___ftge
  1886 ;;               _frexp
  1887 ;;               ___ftmul
  1888 ;;                 ___ftpack
  1889 ;;                 ___awtoft (ARG)
  1890 ;;                   ___ftpack
  1891 ;;                   ___ftneg (ARG)
  1892 ;;                     ___ftpack (ARG)
  1893 ;;                 _frexp (ARG)
  1894 ;;               ___ftadd
  1895 ;;                 ___ftpack
  1896 ;;                 ___ftneg (ARG)
  1897 ;;                   ___ftpack (ARG)
  1898 ;;                 ___awtoft (ARG)
  1899 ;;                   ___ftpack
  1900 ;;                   ___ftneg (ARG)
  1901 ;;                     ___ftpack (ARG)
  1902 ;;                 ___ftmul (ARG)
  1903 ;;                   ___ftpack
  1904 ;;                   ___awtoft (ARG)
  1905 ;;                     ___ftpack
  1906 ;;                     ___ftneg (ARG)
  1907 ;;                       ___ftpack (ARG)
  1908 ;;                   _frexp (ARG)
  1909 ;;                 _frexp (ARG)
  1910 ;;                 ___bmul (ARG)
  1911 ;;               _eval_poly
  1912 ;;                 ___bmul
  1913 ;;                 ___ftmul
  1914 ;;                   ___ftpack
  1915 ;;                   ___awtoft (ARG)
  1916 ;;                     ___ftpack
  1917 ;;                     ___ftneg (ARG)
  1918 ;;                       ___ftpack (ARG)
  1919 ;;                   _frexp (ARG)
  1920 ;;                 ___ftadd
  1921 ;;                   ___ftpack
  1922 ;;                   ___ftneg (ARG)
  1923 ;;                     ___ftpack (ARG)
  1924 ;;                   ___awtoft (ARG)
  1925 ;;                     ___ftpack
  1926 ;;                     ___ftneg (ARG)
  1927 ;;                       ___ftpack (ARG)
  1928 ;;                   ___ftmul (ARG)
  1929 ;;                     ___ftpack
  1930 ;;                     ___awtoft (ARG)
  1931 ;;                       ___ftpack
  1932 ;;                       ___ftneg (ARG)
  1933 ;;                         ___ftpack (ARG)
  1934 ;;                     _frexp (ARG)
  1935 ;;                   _frexp (ARG)
  1936 ;;                   ___bmul (ARG)
  1937 ;;                 _ldexp (ARG)
  1938 ;;                   ___ftge
  1939 ;;                   ___ftneg
  1940 ;;                     ___ftpack (ARG)
  1941 ;;                   ___bmul (ARG)
  1942 ;;                   ___ftmul (ARG)
  1943 ;;                     ___ftpack
  1944 ;;                     ___awtoft (ARG)
  1945 ;;                       ___ftpack
  1946 ;;                       ___ftneg (ARG)
  1947 ;;                         ___ftpack (ARG)
  1948 ;;                     _frexp (ARG)
  1949 ;;                   ___ftadd (ARG)
  1950 ;;                     ___ftpack
  1951 ;;                     ___ftneg (ARG)
  1952 ;;                       ___ftpack (ARG)
  1953 ;;                     ___awtoft (ARG)
  1954 ;;                       ___ftpack
  1955 ;;                       ___ftneg (ARG)
  1956 ;;                         ___ftpack (ARG)
  1957 ;;                     ___ftmul (ARG)
  1958 ;;                       ___ftpack
  1959 ;;                       ___awtoft (ARG)
  1960 ;;                         ___ftpack
  1961 ;;                         ___ftneg (ARG)
  1962 ;;                           ___ftpack (ARG)
  1963 ;;                       _frexp (ARG)
  1964 ;;                     _frexp (ARG)
  1965 ;;                     ___bmul (ARG)
  1966 ;;               ___awtoft
  1967 ;;                 ___ftpack
  1968 ;;                 ___ftneg (ARG)
  1969 ;;                   ___ftpack (ARG)
  1970 ;;         ___ftmul
  1971 ;;           ___ftpack
  1972 ;;           ___awtoft (ARG)
  1973 ;;             ___ftpack
  1974 ;;             ___ftneg (ARG)
  1975 ;;               ___ftpack (ARG)
  1976 ;;           _frexp (ARG)
  1977 ;;       _Lcd8_Set_Cursor
  1978 ;;         _Lcd8_Cmd
  1979 ;;           _Lcd8_Port
  1980 ;;       _Lcd8_Write_String
  1981 ;;         _Lcd8_Write_Char
  1982 ;;           _Lcd8_Port
  1983 ;;       _delay
  1984 ;;     _absent
  1985 ;;       ___awtoft
  1986 ;;         ___ftpack
  1987 ;;         ___ftneg (ARG)
  1988 ;;           ___ftpack (ARG)
  1989 ;;       _ftoa
  1990 ;;         ___fttol
  1991 ;;         ___awtoft
  1992 ;;           ___ftpack
  1993 ;;           ___ftneg (ARG)
  1994 ;;             ___ftpack (ARG)
  1995 ;;         ___ftneg
  1996 ;;           ___ftpack (ARG)
  1997 ;;         ___ftadd
  1998 ;;           ___ftpack
  1999 ;;           ___ftneg (ARG)
  2000 ;;             ___ftpack (ARG)
  2001 ;;           ___awtoft (ARG)
  2002 ;;             ___ftpack
  2003 ;;             ___ftneg (ARG)
  2004 ;;               ___ftpack (ARG)
  2005 ;;           ___ftmul (ARG)
  2006 ;;             ___ftpack
  2007 ;;             ___awtoft (ARG)
  2008 ;;               ___ftpack
  2009 ;;               ___ftneg (ARG)
  2010 ;;                 ___ftpack (ARG)
  2011 ;;             _frexp (ARG)
  2012 ;;           _frexp (ARG)
  2013 ;;           ___bmul (ARG)
  2014 ;;         _intToStr
  2015 ;;           ___awmod
  2016 ;;           ___awdiv
  2017 ;;           _reverse
  2018 ;;           ___fttol (ARG)
  2019 ;;         _pow
  2020 ;;           ___ftge
  2021 ;;           ___fttol
  2022 ;;           ___lltoft
  2023 ;;             ___ftpack
  2024 ;;           ___ftneg
  2025 ;;             ___ftpack (ARG)
  2026 ;;           _log
  2027 ;;             ___ftge
  2028 ;;             _frexp
  2029 ;;             ___ftmul
  2030 ;;               ___ftpack
  2031 ;;               ___awtoft (ARG)
  2032 ;;                 ___ftpack
  2033 ;;                 ___ftneg (ARG)
  2034 ;;                   ___ftpack (ARG)
  2035 ;;               _frexp (ARG)
  2036 ;;             ___ftadd
  2037 ;;               ___ftpack
  2038 ;;               ___ftneg (ARG)
  2039 ;;                 ___ftpack (ARG)
  2040 ;;               ___awtoft (ARG)
  2041 ;;                 ___ftpack
  2042 ;;                 ___ftneg (ARG)
  2043 ;;                   ___ftpack (ARG)
  2044 ;;               ___ftmul (ARG)
  2045 ;;                 ___ftpack
  2046 ;;                 ___awtoft (ARG)
  2047 ;;                   ___ftpack
  2048 ;;                   ___ftneg (ARG)
  2049 ;;                     ___ftpack (ARG)
  2050 ;;                 _frexp (ARG)
  2051 ;;               _frexp (ARG)
  2052 ;;               ___bmul (ARG)
  2053 ;;             _eval_poly
  2054 ;;               ___bmul
  2055 ;;               ___ftmul
  2056 ;;                 ___ftpack
  2057 ;;                 ___awtoft (ARG)
  2058 ;;                   ___ftpack
  2059 ;;                   ___ftneg (ARG)
  2060 ;;                     ___ftpack (ARG)
  2061 ;;                 _frexp (ARG)
  2062 ;;               ___ftadd
  2063 ;;                 ___ftpack
  2064 ;;                 ___ftneg (ARG)
  2065 ;;                   ___ftpack (ARG)
  2066 ;;                 ___awtoft (ARG)
  2067 ;;                   ___ftpack
  2068 ;;                   ___ftneg (ARG)
  2069 ;;                     ___ftpack (ARG)
  2070 ;;                 ___ftmul (ARG)
  2071 ;;                   ___ftpack
  2072 ;;                   ___awtoft (ARG)
  2073 ;;                     ___ftpack
  2074 ;;                     ___ftneg (ARG)
  2075 ;;                       ___ftpack (ARG)
  2076 ;;                   _frexp (ARG)
  2077 ;;                 _frexp (ARG)
  2078 ;;                 ___bmul (ARG)
  2079 ;;               _ldexp (ARG)
  2080 ;;                 ___ftge
  2081 ;;                 ___ftneg
  2082 ;;                   ___ftpack (ARG)
  2083 ;;                 ___bmul (ARG)
  2084 ;;                 ___ftmul (ARG)
  2085 ;;                   ___ftpack
  2086 ;;                   ___awtoft (ARG)
  2087 ;;                     ___ftpack
  2088 ;;                     ___ftneg (ARG)
  2089 ;;                       ___ftpack (ARG)
  2090 ;;                   _frexp (ARG)
  2091 ;;                 ___ftadd (ARG)
  2092 ;;                   ___ftpack
  2093 ;;                   ___ftneg (ARG)
  2094 ;;                     ___ftpack (ARG)
  2095 ;;                   ___awtoft (ARG)
  2096 ;;                     ___ftpack
  2097 ;;                     ___ftneg (ARG)
  2098 ;;                       ___ftpack (ARG)
  2099 ;;                   ___ftmul (ARG)
  2100 ;;                     ___ftpack
  2101 ;;                     ___awtoft (ARG)
  2102 ;;                       ___ftpack
  2103 ;;                       ___ftneg (ARG)
  2104 ;;                         ___ftpack (ARG)
  2105 ;;                     _frexp (ARG)
  2106 ;;                   _frexp (ARG)
  2107 ;;                   ___bmul (ARG)
  2108 ;;             ___awtoft
  2109 ;;               ___ftpack
  2110 ;;               ___ftneg (ARG)
  2111 ;;                 ___ftpack (ARG)
  2112 ;;           ___ftmul
  2113 ;;             ___ftpack
  2114 ;;             ___awtoft (ARG)
  2115 ;;               ___ftpack
  2116 ;;               ___ftneg (ARG)
  2117 ;;                 ___ftpack (ARG)
  2118 ;;             _frexp (ARG)
  2119 ;;           _exp
  2120 ;;             ___ftge
  2121 ;;             ___ftneg
  2122 ;;               ___ftpack (ARG)
  2123 ;;             ___ftmul
  2124 ;;               ___ftpack
  2125 ;;               ___awtoft (ARG)
  2126 ;;                 ___ftpack
  2127 ;;                 ___ftneg (ARG)
  2128 ;;                   ___ftpack (ARG)
  2129 ;;               _frexp (ARG)
  2130 ;;             _floor
  2131 ;;               _frexp
  2132 ;;               ___ftge
  2133 ;;               ___fttol
  2134 ;;               ___altoft
  2135 ;;                 ___ftpack
  2136 ;;                 ___fttol (ARG)
  2137 ;;               ___ftadd
  2138 ;;                 ___ftpack
  2139 ;;                 ___ftneg (ARG)
  2140 ;;                   ___ftpack (ARG)
  2141 ;;                 ___awtoft (ARG)
  2142 ;;                   ___ftpack
  2143 ;;                   ___ftneg (ARG)
  2144 ;;                     ___ftpack (ARG)
  2145 ;;                 ___ftmul (ARG)
  2146 ;;                   ___ftpack
  2147 ;;                   ___awtoft (ARG)
  2148 ;;                     ___ftpack
  2149 ;;                     ___ftneg (ARG)
  2150 ;;                       ___ftpack (ARG)
  2151 ;;                   _frexp (ARG)
  2152 ;;                 _frexp (ARG)
  2153 ;;                 ___bmul (ARG)
  2154 ;;             ___fttol
  2155 ;;             ___awtoft
  2156 ;;               ___ftpack
  2157 ;;               ___ftneg (ARG)
  2158 ;;                 ___ftpack (ARG)
  2159 ;;             ___ftsub
  2160 ;;               ___ftadd
  2161 ;;                 ___ftpack
  2162 ;;                 ___ftneg (ARG)
  2163 ;;                   ___ftpack (ARG)
  2164 ;;                 ___awtoft (ARG)
  2165 ;;                   ___ftpack
  2166 ;;                   ___ftneg (ARG)
  2167 ;;                     ___ftpack (ARG)
  2168 ;;                 ___ftmul (ARG)
  2169 ;;                   ___ftpack
  2170 ;;                   ___awtoft (ARG)
  2171 ;;                     ___ftpack
  2172 ;;                     ___ftneg (ARG)
  2173 ;;                       ___ftpack (ARG)
  2174 ;;                   _frexp (ARG)
  2175 ;;                 _frexp (ARG)
  2176 ;;                 ___bmul (ARG)
  2177 ;;               ___awtoft (ARG)
  2178 ;;                 ___ftpack
  2179 ;;                 ___ftneg (ARG)
  2180 ;;                   ___ftpack (ARG)
  2181 ;;             _eval_poly
  2182 ;;               ___bmul
  2183 ;;               ___ftmul
  2184 ;;                 ___ftpack
  2185 ;;                 ___awtoft (ARG)
  2186 ;;                   ___ftpack
  2187 ;;                   ___ftneg (ARG)
  2188 ;;                     ___ftpack (ARG)
  2189 ;;                 _frexp (ARG)
  2190 ;;               ___ftadd
  2191 ;;                 ___ftpack
  2192 ;;                 ___ftneg (ARG)
  2193 ;;                   ___ftpack (ARG)
  2194 ;;                 ___awtoft (ARG)
  2195 ;;                   ___ftpack
  2196 ;;                   ___ftneg (ARG)
  2197 ;;                     ___ftpack (ARG)
  2198 ;;                 ___ftmul (ARG)
  2199 ;;                   ___ftpack
  2200 ;;                   ___awtoft (ARG)
  2201 ;;                     ___ftpack
  2202 ;;                     ___ftneg (ARG)
  2203 ;;                       ___ftpack (ARG)
  2204 ;;                   _frexp (ARG)
  2205 ;;                 _frexp (ARG)
  2206 ;;                 ___bmul (ARG)
  2207 ;;               _ldexp (ARG)
  2208 ;;                 ___ftge
  2209 ;;                 ___ftneg
  2210 ;;                   ___ftpack (ARG)
  2211 ;;                 ___bmul (ARG)
  2212 ;;                 ___ftmul (ARG)
  2213 ;;                   ___ftpack
  2214 ;;                   ___awtoft (ARG)
  2215 ;;                     ___ftpack
  2216 ;;                     ___ftneg (ARG)
  2217 ;;                       ___ftpack (ARG)
  2218 ;;                   _frexp (ARG)
  2219 ;;                 ___ftadd (ARG)
  2220 ;;                   ___ftpack
  2221 ;;                   ___ftneg (ARG)
  2222 ;;                     ___ftpack (ARG)
  2223 ;;                   ___awtoft (ARG)
  2224 ;;                     ___ftpack
  2225 ;;                     ___ftneg (ARG)
  2226 ;;                       ___ftpack (ARG)
  2227 ;;                   ___ftmul (ARG)
  2228 ;;                     ___ftpack
  2229 ;;                     ___awtoft (ARG)
  2230 ;;                       ___ftpack
  2231 ;;                       ___ftneg (ARG)
  2232 ;;                         ___ftpack (ARG)
  2233 ;;                     _frexp (ARG)
  2234 ;;                   _frexp (ARG)
  2235 ;;                   ___bmul (ARG)
  2236 ;;             _ldexp
  2237 ;;               ___ftge
  2238 ;;               ___ftneg
  2239 ;;                 ___ftpack (ARG)
  2240 ;;               ___bmul (ARG)
  2241 ;;               ___ftmul (ARG)
  2242 ;;                 ___ftpack
  2243 ;;                 ___awtoft (ARG)
  2244 ;;                   ___ftpack
  2245 ;;                   ___ftneg (ARG)
  2246 ;;                     ___ftpack (ARG)
  2247 ;;                 _frexp (ARG)
  2248 ;;               ___ftadd (ARG)
  2249 ;;                 ___ftpack
  2250 ;;                 ___ftneg (ARG)
  2251 ;;                   ___ftpack (ARG)
  2252 ;;                 ___awtoft (ARG)
  2253 ;;                   ___ftpack
  2254 ;;                   ___ftneg (ARG)
  2255 ;;                     ___ftpack (ARG)
  2256 ;;                 ___ftmul (ARG)
  2257 ;;                   ___ftpack
  2258 ;;                   ___awtoft (ARG)
  2259 ;;                     ___ftpack
  2260 ;;                     ___ftneg (ARG)
  2261 ;;                       ___ftpack (ARG)
  2262 ;;                   _frexp (ARG)
  2263 ;;                 _frexp (ARG)
  2264 ;;                 ___bmul (ARG)
  2265 ;;             ___ftdiv
  2266 ;;               ___ftpack
  2267 ;;             _log (ARG)
  2268 ;;               ___ftge
  2269 ;;               _frexp
  2270 ;;               ___ftmul
  2271 ;;                 ___ftpack
  2272 ;;                 ___awtoft (ARG)
  2273 ;;                   ___ftpack
  2274 ;;                   ___ftneg (ARG)
  2275 ;;                     ___ftpack (ARG)
  2276 ;;                 _frexp (ARG)
  2277 ;;               ___ftadd
  2278 ;;                 ___ftpack
  2279 ;;                 ___ftneg (ARG)
  2280 ;;                   ___ftpack (ARG)
  2281 ;;                 ___awtoft (ARG)
  2282 ;;                   ___ftpack
  2283 ;;                   ___ftneg (ARG)
  2284 ;;                     ___ftpack (ARG)
  2285 ;;                 ___ftmul (ARG)
  2286 ;;                   ___ftpack
  2287 ;;                   ___awtoft (ARG)
  2288 ;;                     ___ftpack
  2289 ;;                     ___ftneg (ARG)
  2290 ;;                       ___ftpack (ARG)
  2291 ;;                   _frexp (ARG)
  2292 ;;                 _frexp (ARG)
  2293 ;;                 ___bmul (ARG)
  2294 ;;               _eval_poly
  2295 ;;                 ___bmul
  2296 ;;                 ___ftmul
  2297 ;;                   ___ftpack
  2298 ;;                   ___awtoft (ARG)
  2299 ;;                     ___ftpack
  2300 ;;                     ___ftneg (ARG)
  2301 ;;                       ___ftpack (ARG)
  2302 ;;                   _frexp (ARG)
  2303 ;;                 ___ftadd
  2304 ;;                   ___ftpack
  2305 ;;                   ___ftneg (ARG)
  2306 ;;                     ___ftpack (ARG)
  2307 ;;                   ___awtoft (ARG)
  2308 ;;                     ___ftpack
  2309 ;;                     ___ftneg (ARG)
  2310 ;;                       ___ftpack (ARG)
  2311 ;;                   ___ftmul (ARG)
  2312 ;;                     ___ftpack
  2313 ;;                     ___awtoft (ARG)
  2314 ;;                       ___ftpack
  2315 ;;                       ___ftneg (ARG)
  2316 ;;                         ___ftpack (ARG)
  2317 ;;                     _frexp (ARG)
  2318 ;;                   _frexp (ARG)
  2319 ;;                   ___bmul (ARG)
  2320 ;;                 _ldexp (ARG)
  2321 ;;                   ___ftge
  2322 ;;                   ___ftneg
  2323 ;;                     ___ftpack (ARG)
  2324 ;;                   ___bmul (ARG)
  2325 ;;                   ___ftmul (ARG)
  2326 ;;                     ___ftpack
  2327 ;;                     ___awtoft (ARG)
  2328 ;;                       ___ftpack
  2329 ;;                       ___ftneg (ARG)
  2330 ;;                         ___ftpack (ARG)
  2331 ;;                     _frexp (ARG)
  2332 ;;                   ___ftadd (ARG)
  2333 ;;                     ___ftpack
  2334 ;;                     ___ftneg (ARG)
  2335 ;;                       ___ftpack (ARG)
  2336 ;;                     ___awtoft (ARG)
  2337 ;;                       ___ftpack
  2338 ;;                       ___ftneg (ARG)
  2339 ;;                         ___ftpack (ARG)
  2340 ;;                     ___ftmul (ARG)
  2341 ;;                       ___ftpack
  2342 ;;                       ___awtoft (ARG)
  2343 ;;                         ___ftpack
  2344 ;;                         ___ftneg (ARG)
  2345 ;;                           ___ftpack (ARG)
  2346 ;;                       _frexp (ARG)
  2347 ;;                     _frexp (ARG)
  2348 ;;                     ___bmul (ARG)
  2349 ;;               ___awtoft
  2350 ;;                 ___ftpack
  2351 ;;                 ___ftneg (ARG)
  2352 ;;                   ___ftpack (ARG)
  2353 ;;         ___ftmul
  2354 ;;           ___ftpack
  2355 ;;           ___awtoft (ARG)
  2356 ;;             ___ftpack
  2357 ;;             ___ftneg (ARG)
  2358 ;;               ___ftpack (ARG)
  2359 ;;           _frexp (ARG)
  2360 ;;       _Lcd8_Set_Cursor
  2361 ;;         _Lcd8_Cmd
  2362 ;;           _Lcd8_Port
  2363 ;;       _Lcd8_Write_String
  2364 ;;         _Lcd8_Write_Char
  2365 ;;           _Lcd8_Port
  2366 ;;       _delay
  2367 ;;     _initial_State
  2368 ;;       _Lcd8_Clear
  2369 ;;         _Lcd8_Cmd
  2370 ;;           _Lcd8_Port
  2371 ;;       _Lcd8_Set_Cursor
  2372 ;;         _Lcd8_Cmd
  2373 ;;           _Lcd8_Port
  2374 ;;       _Lcd8_Write_String
  2375 ;;         _Lcd8_Write_Char
  2376 ;;           _Lcd8_Port
  2377 ;;
  2378                           
  2379 ;; Address spaces:
  2380                           
  2381 ;;Name               Size   Autos  Total    Cost      Usage
  2382 ;;BANK3               60      0      30       9       50.0%
  2383 ;;BITBANK3            60      0       0       8        0.0%
  2384 ;;SFR3                 0      0       0       4        0.0%
  2385 ;;BITSFR3              0      0       0       4        0.0%
  2386 ;;BANK2               60      0       0      11        0.0%
  2387 ;;BITBANK2            60      0       0      10        0.0%
  2388 ;;SFR2                 0      0       0       5        0.0%
  2389 ;;BITSFR2              0      0       0       5        0.0%
  2390 ;;SFR1                 0      0       0       2        0.0%
  2391 ;;BITSFR1              0      0       0       2        0.0%
  2392 ;;BANK1               50     1F      35       7       66.3%
  2393 ;;BITBANK1            50      0       0       6        0.0%
  2394 ;;CODE                 0      0       0       0        0.0%
  2395 ;;DATA                 0      0      CB      12        0.0%
  2396 ;;ABS                  0      0      C3       3        0.0%
  2397 ;;NULL                 0      0       0       0        0.0%
  2398 ;;STACK                0      0       8       2        0.0%
  2399 ;;BANK0               50     4E      50       5      100.0%
  2400 ;;BITBANK0            50      0       0       4        0.0%
  2401 ;;SFR0                 0      0       0       1        0.0%
  2402 ;;BITSFR0              0      0       0       1        0.0%
  2403 ;;COMMON               E      E       E       1      100.0%
  2404 ;;BITCOMMON            E      0       0       0        0.0%
  2405 ;;EEDATA             100      0       0       0        0.0%
  2406                           
  2407                           	global	_main
  2408                           psect	maintext,global,class=CODE,delta=2
  2409                           global __pmaintext
  2410  147B                     __pmaintext:
  2411                           
  2412 ;; *************** function _main *****************
  2413 ;; Defined at:
  2414 ;;		line 37 in file "code.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;		None
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;		None
  2419 ;; Return value:  Size  Location     Type
  2420 ;;		None               void
  2421 ;; Registers used:
  2422 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2423 ;; Tracked objects:
  2424 ;;		On entry : 17F/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2428 ;;      Params:         0       0       0       0       0
  2429 ;;      Locals:         0       0       0       0       0
  2430 ;;      Temps:          0       0       0       0       0
  2431 ;;      Totals:         0       0       0       0       0
  2432 ;;Total ram usage:        0 bytes
  2433 ;; Hardware stack levels required when called:    8
  2434 ;; This function calls:
  2435 ;;		_Lcd8_Init
  2436 ;;		_UART_Init
  2437 ;;		_Lcd8_Clear
  2438 ;;		_Lcd8_Set_Cursor
  2439 ;;		_Lcd8_Write_String
  2440 ;;		_checkRFID
  2441 ;; This function is called by:
  2442 ;;		Startup code after reset
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           psect	maintext
  2446                           	file	"code.c"
  2447                           	line	37
  2448                           	global	__size_of_main
  2449  0040                     	__size_of_main	equ	__end_of_main-_main
  2450                           	
  2451  147B                     _main:	
  2452                           	opt	stack 0
  2453                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2454                           	line	38
  2455                           	
  2456  147B                     l5429:	
  2457                           ;code.c: 38: TRISB = 0x00;
  2458  147B  1683               	bsf	status, 5	;RP0=1, select bank1
  2459  147C  1303               	bcf	status, 6	;RP1=0, select bank1
  2460  147D  0186               	clrf	(134)^080h	;volatile
  2461                           	line	39
  2462                           ;code.c: 39: TRISD = 0x00;
  2463  147E  0188               	clrf	(136)^080h	;volatile
  2464                           	line	40
  2465                           	
  2466  147F                     l5431:	
  2467                           ;code.c: 40: TRISC = 0xFF;
  2468  147F  30FF               	movlw	(0FFh)
  2469  1480  0087               	movwf	(135)^080h	;volatile
  2470                           	line	41
  2471                           	
  2472  1481                     l5433:	
  2473                           ;code.c: 41: PORTDbits.RD6 = 0;
  2474  1481  1283               	bcf	status, 5	;RP0=0, select bank0
  2475  1482  1303               	bcf	status, 6	;RP1=0, select bank0
  2476  1483  1308               	bcf	(8),6	;volatile
  2477                           	line	42
  2478                           	
  2479  1484                     l5435:	
  2480                           ;code.c: 42: PORTDbits.RD4 = 0;
  2481  1484  1208               	bcf	(8),4	;volatile
  2482                           	line	43
  2483                           	
  2484  1485                     l5437:	
  2485                           ;code.c: 43: Lcd8_Init();
  2486  1485  160A  118A  259F   	fcall	_Lcd8_Init
              160A  118A         
  2487                           	line	44
  2488                           	
  2489  148A                     l5439:	
  2490                           ;code.c: 44: UART_Init(9600);
  2491  148A  3000               	movlw	0
  2492  148B  1283               	bcf	status, 5	;RP0=0, select bank0
  2493  148C  1303               	bcf	status, 6	;RP1=0, select bank0
  2494  148D  00A9               	movwf	(?_UART_Init+3)
  2495  148E  3000               	movlw	0
  2496  148F  00A8               	movwf	(?_UART_Init+2)
  2497  1490  3025               	movlw	025h
  2498  1491  00A7               	movwf	(?_UART_Init+1)
  2499  1492  3080               	movlw	080h
  2500  1493  00A6               	movwf	(?_UART_Init)
  2501                           
  2502  1494  120A  158A  270D   	fcall	_UART_Init
              160A  118A         
  2503                           	line	46
  2504                           	
  2505  1499                     l5441:	
  2506                           ;code.c: 46: Lcd8_Clear();
  2507  1499  120A  158A  20FC   	fcall	_Lcd8_Clear
              160A  118A         
  2508                           	line	47
  2509                           	
  2510  149E                     l5443:	
  2511                           ;code.c: 47: Lcd8_Set_Cursor(1,1);
  2512  149E  01F4               	clrf	(?_Lcd8_Set_Cursor)
  2513  149F  1403               	bsf	status,0
  2514  14A0  0DF4               	rlf	(?_Lcd8_Set_Cursor),f
  2515  14A1  3001               	movlw	(01h)
  2516  14A2  160A  118A  22D3   	fcall	_Lcd8_Set_Cursor
              160A  118A         
  2517                           	line	48
  2518                           	
  2519  14A7                     l5445:	
  2520                           ;code.c: 48: Lcd8_Write_String("Place your card");
  2521  14A7  307E               	movlw	low((STR_1-__stringbase))
  2522  14A8  00F4               	movwf	(?_Lcd8_Write_String)
  2523  14A9  3080               	movlw	80h
  2524  14AA  00F5               	movwf	(?_Lcd8_Write_String+1)
  2525  14AB  160A  118A  23CC   	fcall	_Lcd8_Write_String
              160A  118A         
  2526  14B0  2CB1               	goto	l5447
  2527                           	line	49
  2528                           ;code.c: 49: while(1)
  2529                           	
  2530  14B1                     l847:	
  2531                           	line	50
  2532                           	
  2533  14B1                     l5447:	
  2534                           ;code.c: 50: checkRFID();
  2535  14B1  120A  118A  25D1   	fcall	_checkRFID
              160A  118A         
  2536  14B6  2CB1               	goto	l5447
  2537                           	
  2538  14B7                     l848:	
  2539                           	line	49
  2540  14B7  2CB1               	goto	l5447
  2541                           	
  2542  14B8                     l849:	
  2543                           	line	52
  2544                           	
  2545  14B8                     l850:	
  2546                           	global	start
  2547  14B8  120A  118A  2800   	ljmp	start
  2548                           	opt stack 0
  2549                           GLOBAL	__end_of_main
  2550  14BB                     	__end_of_main:
  2551 ;; =============== function _main ends ============
  2552                           
  2553                           	signat	_main,88
  2554                           	global	_checkRFID
  2555                           psect	text888,local,class=CODE,delta=2
  2556                           global __ptext888
  2557  05D1                     __ptext888:
  2558                           
  2559 ;; *************** function _checkRFID *****************
  2560 ;; Defined at:
  2561 ;;		line 88 in file "code.c"
  2562 ;; Parameters:    Size  Location     Type
  2563 ;;		None
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;  i               2   29[BANK1 ] int 
  2566 ;;  a               2   27[BANK1 ] int 
  2567 ;; Return value:  Size  Location     Type
  2568 ;;		None               void
  2569 ;; Registers used:
  2570 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2576 ;;      Params:         0       0       0       0       0
  2577 ;;      Locals:         0       0       4       0       0
  2578 ;;      Temps:          0       0       3       0       0
  2579 ;;      Totals:         0       0       7       0       0
  2580 ;;Total ram usage:        7 bytes
  2581 ;; Hardware stack levels used:    1
  2582 ;; Hardware stack levels required when called:    7
  2583 ;; This function calls:
  2584 ;;		_UART_Data_Ready
  2585 ;;		_UART_Read
  2586 ;;		_Lcd8_Clear
  2587 ;;		_Lcd8_Set_Cursor
  2588 ;;		_Lcd8_Write_String
  2589 ;;		_strcmp
  2590 ;;		_delay
  2591 ;;		_present
  2592 ;;		_absent
  2593 ;;		_initial_State
  2594 ;; This function is called by:
  2595 ;;		_main
  2596 ;; This function uses a non-reentrant model
  2597 ;;
  2598                           psect	text888
  2599                           	file	"code.c"
  2600                           	line	88
  2601                           	global	__size_of_checkRFID
  2602  022F                     	__size_of_checkRFID	equ	__end_of_checkRFID-_checkRFID
  2603                           	
  2604  05D1                     _checkRFID:	
  2605                           	opt	stack 0
  2606                           ; Regs used in _checkRFID: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2607                           	line	89
  2608                           	
  2609  05D1                     l5307:	
  2610                           ;code.c: 89: int i,a=0;
  2611  05D1  1683               	bsf	status, 5	;RP0=1, select bank1
  2612  05D2  1303               	bcf	status, 6	;RP1=0, select bank1
  2613  05D3  01BB               	clrf	(checkRFID@a)^080h
  2614  05D4  01BC               	clrf	(checkRFID@a+1)^080h
  2615                           	line	91
  2616                           	
  2617  05D5                     l5309:	
  2618                           ;code.c: 91: if(UART_Data_Ready())
  2619  05D5  160A  118A  2231   	fcall	_UART_Data_Ready
              120A  118A         
  2620  05DA  3A00               	xorlw	0
  2621  05DB  1903               	skipnz
  2622  05DC  2DDE               	goto	u4811
  2623  05DD  2DDF               	goto	u4810
  2624  05DE                     u4811:
  2625  05DE  2E27               	goto	l870
  2626  05DF                     u4810:
  2627                           	line	93
  2628                           	
  2629  05DF                     l5311:	
  2630                           ;code.c: 92: {
  2631                           ;code.c: 93: for(i=0;i<12;)
  2632  05DF  1683               	bsf	status, 5	;RP0=1, select bank1
  2633  05E0  1303               	bcf	status, 6	;RP1=0, select bank1
  2634  05E1  01BD               	clrf	(checkRFID@i)^080h
  2635  05E2  01BE               	clrf	(checkRFID@i+1)^080h
  2636                           	
  2637  05E3                     l5313:	
  2638  05E3  083E               	movf	(checkRFID@i+1)^080h,w
  2639  05E4  3A80               	xorlw	80h
  2640  05E5  00FF               	movwf	btemp+1
  2641  05E6  3080               	movlw	(high(0Ch))^80h
  2642  05E7  027F               	subwf	btemp+1,w
  2643  05E8  1D03               	skipz
  2644  05E9  2DEC               	goto	u4825
  2645  05EA  300C               	movlw	low(0Ch)
  2646  05EB  023D               	subwf	(checkRFID@i)^080h,w
  2647  05EC                     u4825:
  2648                           
  2649  05EC  1C03               	skipc
  2650  05ED  2DEF               	goto	u4821
  2651  05EE  2DF0               	goto	u4820
  2652  05EF                     u4821:
  2653  05EF  2DF2               	goto	l5317
  2654  05F0                     u4820:
  2655  05F0  2E21               	goto	l5325
  2656                           	
  2657  05F1                     l5315:	
  2658  05F1  2E21               	goto	l5325
  2659                           	line	94
  2660                           	
  2661  05F2                     l871:	
  2662                           	line	95
  2663                           	
  2664  05F2                     l5317:	
  2665                           ;code.c: 94: {
  2666                           ;code.c: 95: if(UART_Data_Ready())
  2667  05F2  160A  118A  2231   	fcall	_UART_Data_Ready
              120A  118A         
  2668  05F7  3A00               	xorlw	0
  2669  05F8  1903               	skipnz
  2670  05F9  2DFB               	goto	u4831
  2671  05FA  2DFC               	goto	u4830
  2672  05FB                     u4831:
  2673  05FB  2E11               	goto	l5323
  2674  05FC                     u4830:
  2675                           	line	97
  2676                           	
  2677  05FC                     l5319:	
  2678                           ;code.c: 96: {
  2679                           ;code.c: 97: rfid[i] = UART_Read();
  2680  05FC  160A  118A  2240   	fcall	_UART_Read
              120A  118A         
  2681  0601  1683               	bsf	status, 5	;RP0=1, select bank1
  2682  0602  1303               	bcf	status, 6	;RP1=0, select bank1
  2683  0603  00B8               	movwf	(??_checkRFID+0)^080h+0
  2684  0604  083D               	movf	(checkRFID@i)^080h,w
  2685  0605  3EC7               	addlw	_rfid&0ffh
  2686  0606  0084               	movwf	fsr0
  2687  0607  0838               	movf	(??_checkRFID+0)^080h+0,w
  2688  0608  1383               	bcf	status, 7	;select IRP bank1
  2689  0609  0080               	movwf	indf
  2690                           	line	98
  2691                           	
  2692  060A                     l5321:	
  2693                           ;code.c: 98: i++;
  2694  060A  3001               	movlw	low(01h)
  2695  060B  07BD               	addwf	(checkRFID@i)^080h,f
  2696  060C  1803               	skipnc
  2697  060D  0ABE               	incf	(checkRFID@i+1)^080h,f
  2698  060E  3000               	movlw	high(01h)
  2699  060F  07BE               	addwf	(checkRFID@i+1)^080h,f
  2700  0610  2E11               	goto	l5323
  2701                           	line	99
  2702                           	
  2703  0611                     l873:	
  2704                           	line	93
  2705                           	
  2706  0611                     l5323:	
  2707  0611  1683               	bsf	status, 5	;RP0=1, select bank1
  2708  0612  1303               	bcf	status, 6	;RP1=0, select bank1
  2709  0613  083E               	movf	(checkRFID@i+1)^080h,w
  2710  0614  3A80               	xorlw	80h
  2711  0615  00FF               	movwf	btemp+1
  2712  0616  3080               	movlw	(high(0Ch))^80h
  2713  0617  027F               	subwf	btemp+1,w
  2714  0618  1D03               	skipz
  2715  0619  2E1C               	goto	u4845
  2716  061A  300C               	movlw	low(0Ch)
  2717  061B  023D               	subwf	(checkRFID@i)^080h,w
  2718  061C                     u4845:
  2719                           
  2720  061C  1C03               	skipc
  2721  061D  2E1F               	goto	u4841
  2722  061E  2E20               	goto	u4840
  2723  061F                     u4841:
  2724  061F  2DF2               	goto	l5317
  2725  0620                     u4840:
  2726  0620  2E21               	goto	l5325
  2727                           	
  2728  0621                     l872:	
  2729                           	line	101
  2730                           	
  2731  0621                     l5325:	
  2732                           ;code.c: 99: }
  2733                           ;code.c: 100: }
  2734                           ;code.c: 101: a = 1;
  2735  0621  3001               	movlw	low(01h)
  2736  0622  1683               	bsf	status, 5	;RP0=1, select bank1
  2737  0623  1303               	bcf	status, 6	;RP1=0, select bank1
  2738  0624  00BB               	movwf	(checkRFID@a)^080h
  2739  0625  3000               	movlw	high(01h)
  2740  0626  00BC               	movwf	((checkRFID@a)^080h)+1
  2741                           	line	102
  2742                           	
  2743  0627                     l870:	
  2744                           	line	103
  2745                           ;code.c: 102: }
  2746                           ;code.c: 103: if(a==1)
  2747  0627  3001               	movlw	01h
  2748  0628  1683               	bsf	status, 5	;RP0=1, select bank1
  2749  0629  1303               	bcf	status, 6	;RP1=0, select bank1
  2750  062A  063B               	xorwf	(checkRFID@a)^080h,w
  2751  062B  043C               	iorwf	(checkRFID@a+1)^080h,w
  2752  062C  1D03               	skipz
  2753  062D  2E2F               	goto	u4851
  2754  062E  2E30               	goto	u4850
  2755  062F                     u4851:
  2756  062F  2FFF               	goto	l893
  2757  0630                     u4850:
  2758                           	line	105
  2759                           	
  2760  0630                     l5327:	
  2761                           ;code.c: 104: {
  2762                           ;code.c: 105: Lcd8_Clear();
  2763  0630  120A  158A  20FC   	fcall	_Lcd8_Clear
              120A  118A         
  2764                           	line	106
  2765                           ;code.c: 106: Lcd8_Set_Cursor(1,0);
  2766  0635  01F4               	clrf	(?_Lcd8_Set_Cursor)
  2767  0636  3001               	movlw	(01h)
  2768  0637  160A  118A  22D3   	fcall	_Lcd8_Set_Cursor
              120A  118A         
  2769                           	line	107
  2770                           	
  2771  063C                     l5329:	
  2772                           ;code.c: 107: Lcd8_Write_String("ID:");
  2773  063C  30E9               	movlw	low((STR_7-__stringbase))
  2774  063D  00F4               	movwf	(?_Lcd8_Write_String)
  2775  063E  3080               	movlw	80h
  2776  063F  00F5               	movwf	(?_Lcd8_Write_String+1)
  2777  0640  160A  118A  23CC   	fcall	_Lcd8_Write_String
              120A  118A         
  2778                           	line	108
  2779                           	
  2780  0645                     l5331:	
  2781                           ;code.c: 108: Lcd8_Write_String(rfid);
  2782  0645  30C7               	movlw	(_rfid&0ffh)
  2783  0646  00F4               	movwf	(?_Lcd8_Write_String)
  2784  0647  3000               	movlw	(0x1/2)
  2785  0648  00F5               	movwf	(?_Lcd8_Write_String+1)
  2786  0649  160A  118A  23CC   	fcall	_Lcd8_Write_String
              120A  118A         
  2787                           	line	110
  2788                           	
  2789  064E                     l5333:	
  2790                           ;code.c: 110: if(!strcmp(rfid,"4000287DBFAA"))
  2791  064E  30B5               	movlw	((STR_8-__stringbase))&0ffh
  2792  064F  1683               	bsf	status, 5	;RP0=1, select bank1
  2793  0650  1303               	bcf	status, 6	;RP1=0, select bank1
  2794  0651  00B8               	movwf	(??_checkRFID+0)^080h+0
  2795  0652  0838               	movf	(??_checkRFID+0)^080h+0,w
  2796  0653  00F0               	movwf	(?_strcmp)
  2797  0654  30C7               	movlw	(_rfid)&0ffh
  2798  0655  160A  118A  233B   	fcall	_strcmp
              120A  118A         
  2799  065A  0871               	movf	((1+(?_strcmp))),w
  2800  065B  0470               	iorwf	((0+(?_strcmp))),w
  2801  065C  1D03               	skipz
  2802  065D  2E5F               	goto	u4861
  2803  065E  2E60               	goto	u4860
  2804  065F                     u4861:
  2805  065F  2E9A               	goto	l5349
  2806  0660                     u4860:
  2807                           	line	112
  2808                           	
  2809  0660                     l5335:	
  2810                           ;code.c: 111: {
  2811                           ;code.c: 112: if(recordbook[0]==1)
  2812  0660  3001               	movlw	01h
  2813  0661  1683               	bsf	status, 5	;RP0=1, select bank1
  2814  0662  1303               	bcf	status, 6	;RP1=0, select bank1
  2815  0663  063F               	xorwf	(_recordbook)^080h,w
  2816  0664  0440               	iorwf	(_recordbook+1)^080h,w
  2817  0665  1D03               	skipz
  2818  0666  2E68               	goto	u4871
  2819  0667  2E69               	goto	u4870
  2820  0668                     u4871:
  2821  0668  2E7A               	goto	l5341
  2822  0669                     u4870:
  2823                           	line	114
  2824                           	
  2825  0669                     l5337:	
  2826                           ;code.c: 113: {
  2827                           ;code.c: 114: Lcd8_Set_Cursor(2,0);
  2828  0669  01F4               	clrf	(?_Lcd8_Set_Cursor)
  2829  066A  3002               	movlw	(02h)
  2830  066B  160A  118A  22D3   	fcall	_Lcd8_Set_Cursor
              120A  118A         
  2831                           	line	115
  2832                           	
  2833  0670                     l5339:	
  2834                           ;code.c: 115: Lcd8_Write_String("Already Done");
  2835  0670  30C2               	movlw	low((STR_9-__stringbase))
  2836  0671  00F4               	movwf	(?_Lcd8_Write_String)
  2837  0672  3080               	movlw	80h
  2838  0673  00F5               	movwf	(?_Lcd8_Write_String+1)
  2839  0674  160A  118A  23CC   	fcall	_Lcd8_Write_String
              120A  118A         
  2840  0679  2E7A               	goto	l5341
  2841                           	line	116
  2842                           	
  2843  067A                     l876:	
  2844                           	line	117
  2845                           	
  2846  067A                     l5341:	
  2847                           ;code.c: 116: }
  2848                           ;code.c: 117: if(recordbook[0]==0)
  2849  067A  1683               	bsf	status, 5	;RP0=1, select bank1
  2850  067B  1303               	bcf	status, 6	;RP1=0, select bank1
  2851  067C  0840               	movf	((_recordbook+1)^080h),w
  2852  067D  043F               	iorwf	((_recordbook)^080h),w
  2853  067E  1D03               	skipz
  2854  067F  2E81               	goto	u4881
  2855  0680  2E82               	goto	u4880
  2856  0681                     u4881:
  2857  0681  2E9A               	goto	l5349
  2858  0682                     u4880:
  2859                           	line	119
  2860                           	
  2861  0682                     l5343:	
  2862                           ;code.c: 118: {
  2863                           ;code.c: 119: Lcd8_Set_Cursor(2,0);
  2864  0682  01F4               	clrf	(?_Lcd8_Set_Cursor)
  2865  0683  3002               	movlw	(02h)
  2866  0684  160A  118A  22D3   	fcall	_Lcd8_Set_Cursor
              120A  118A         
  2867                           	line	120
  2868                           	
  2869  0689                     l5345:	
  2870                           ;code.c: 120: Lcd8_Write_String("Rajdeep Present ");
  2871  0689  306D               	movlw	low((STR_10-__stringbase))
  2872  068A  00F4               	movwf	(?_Lcd8_Write_String)
  2873  068B  3080               	movlw	80h
  2874  068C  00F5               	movwf	(?_Lcd8_Write_String+1)
  2875  068D  160A  118A  23CC   	fcall	_Lcd8_Write_String
              120A  118A         
  2876                           	line	121
  2877                           	
  2878  0692                     l5347:	
  2879                           ;code.c: 121: recordbook[0]=1;
  2880  0692  3001               	movlw	low(01h)
  2881  0693  1683               	bsf	status, 5	;RP0=1, select bank1
  2882  0694  1303               	bcf	status, 6	;RP1=0, select bank1
  2883  0695  00BF               	movwf	(_recordbook)^080h
  2884  0696  3000               	movlw	high(01h)
  2885  0697  00C0               	movwf	((_recordbook)^080h)+1
  2886  0698  2E9A               	goto	l5349
  2887                           	line	122
  2888                           	
  2889  0699                     l877:	
  2890  0699  2E9A               	goto	l5349
  2891                           	line	123
  2892                           	
  2893  069A                     l875:	
  2894                           	line	124
  2895                           	
  2896  069A                     l5349:	
  2897                           ;code.c: 122: }
  2898                           ;code.c: 123: }
  2899                           ;code.c: 124: if(!strcmp(rfid,"4000289834C4"))
  2900  069A  309B               	movlw	((STR_11-__stringbase))&0ffh
  2901  069B  1683               	bsf	status, 5	;RP0=1, select bank1
  2902  069C  1303               	bcf	status, 6	;RP1=0, select bank1
  2903  069D  00B8               	movwf	(??_checkRFID+0)^080h+0
  2904  069E  0838               	movf	(??_checkRFID+0)^080h+0,w
  2905  069F  00F0               	movwf	(?_strcmp)
  2906  06A0  30C7               	movlw	(_rfid)&0ffh
  2907  06A1  160A  118A  233B   	fcall	_strcmp
              120A  118A         
  2908  06A6  0871               	movf	((1+(?_strcmp))),w
  2909  06A7  0470               	iorwf	((0+(?_strcmp))),w
  2910  06A8  1D03               	skipz
  2911  06A9  2EAB               	goto	u4891
  2912  06AA  2EAC               	goto	u4890
  2913  06AB                     u4891:
  2914  06AB  2EE6               	goto	l5365
  2915  06AC                     u4890:
  2916                           	line	126
  2917                           	
  2918  06AC                     l5351:	
  2919                           ;code.c: 125: {
  2920                           ;code.c: 126: if(recordbook[1]==1)
  2921  06AC  3001               	movlw	01h
  2922  06AD  1683               	bsf	status, 5	;RP0=1, select bank1
  2923  06AE  1303               	bcf	status, 6	;RP1=0, select bank1
  2924  06AF  0641               	xorwf	0+(_recordbook)^080h+02h,w
  2925  06B0  0442               	iorwf	1+(_recordbook)^080h+02h,w
  2926  06B1  1D03               	skipz
  2927  06B2  2EB4               	goto	u4901
  2928  06B3  2EB5               	goto	u4900
  2929  06B4                     u4901:
  2930  06B4  2EC6               	goto	l5357
  2931  06B5                     u4900:
  2932                           	line	128
  2933                           	
  2934  06B5                     l5353:	
  2935                           ;code.c: 127: {
  2936                           ;code.c: 128: Lcd8_Set_Cursor(2,0);
  2937  06B5  01F4               	clrf	(?_Lcd8_Set_Cursor)
  2938  06B6  3002               	movlw	(02h)
  2939  06B7  160A  118A  22D3   	fcall	_Lcd8_Set_Cursor
              120A  118A         
  2940                           	line	129
  2941                           	
  2942  06BC                     l5355:	
  2943                           ;code.c: 129: Lcd8_Write_String("Already Done");
  2944  06BC  30C2               	movlw	low((STR_12-__stringbase))
  2945  06BD  00F4               	movwf	(?_Lcd8_Write_String)
  2946  06BE  3080               	movlw	80h
  2947  06BF  00F5               	movwf	(?_Lcd8_Write_String+1)
  2948  06C0  160A  118A  23CC   	fcall	_Lcd8_Write_String
              120A  118A         
  2949  06C5  2EC6               	goto	l5357
  2950                           	line	130
  2951                           	
  2952  06C6                     l879:	
  2953                           	line	131
  2954                           	
  2955  06C6                     l5357:	
  2956                           ;code.c: 130: }
  2957                           ;code.c: 131: if(recordbook[1]==0)
  2958  06C6  1683               	bsf	status, 5	;RP0=1, select bank1
  2959  06C7  1303               	bcf	status, 6	;RP1=0, select bank1
  2960  06C8  0842               	movf	(1+(_recordbook)^080h+02h),w
  2961  06C9  0441               	iorwf	(0+(_recordbook)^080h+02h),w
  2962  06CA  1D03               	skipz
  2963  06CB  2ECD               	goto	u4911
  2964  06CC  2ECE               	goto	u4910
  2965  06CD                     u4911:
  2966  06CD  2EE6               	goto	l5365
  2967  06CE                     u4910:
  2968                           	line	133
  2969                           	
  2970  06CE                     l5359:	
  2971                           ;code.c: 132: {
  2972                           ;code.c: 133: Lcd8_Set_Cursor(2,0);
  2973  06CE  01F4               	clrf	(?_Lcd8_Set_Cursor)
  2974  06CF  3002               	movlw	(02h)
  2975  06D0  160A  118A  22D3   	fcall	_Lcd8_Set_Cursor
              120A  118A         
  2976                           	line	134
  2977                           	
  2978  06D5                     l5361:	
  2979                           ;code.c: 134: Lcd8_Write_String("Rutuja Present  ");
  2980  06D5  303A               	movlw	low((STR_13-__stringbase))
  2981  06D6  00F4               	movwf	(?_Lcd8_Write_String)
  2982  06D7  3080               	movlw	80h
  2983  06D8  00F5               	movwf	(?_Lcd8_Write_String+1)
  2984  06D9  160A  118A  23CC   	fcall	_Lcd8_Write_String
              120A  118A         
  2985                           	line	135
  2986                           	
  2987  06DE                     l5363:	
  2988                           ;code.c: 135: recordbook[1]=1;
  2989  06DE  3001               	movlw	low(01h)
  2990  06DF  1683               	bsf	status, 5	;RP0=1, select bank1
  2991  06E0  1303               	bcf	status, 6	;RP1=0, select bank1
  2992  06E1  00C1               	movwf	0+(_recordbook)^080h+02h
  2993  06E2  3000               	movlw	high(01h)
  2994  06E3  00C2               	movwf	(0+(_recordbook)^080h+02h)+1
  2995  06E4  2EE6               	goto	l5365
  2996                           	line	136
  2997                           	
  2998  06E5                     l880:	
  2999  06E5  2EE6               	goto	l5365
  3000                           	line	137
  3001                           	
  3002  06E6                     l878:	
  3003                           	line	138
  3004                           	
  3005  06E6                     l5365:	
  3006                           ;code.c: 136: }
  3007                           ;code.c: 137: }
  3008                           ;code.c: 138: if(!strcmp(rfid,"4000285C2C18"))
  3009  06E6  30A8               	movlw	((STR_14-__stringbase))&0ffh
  3010  06E7  1683               	bsf	status, 5	;RP0=1, select bank1
  3011  06E8  1303               	bcf	status, 6	;RP1=0, select bank1
  3012  06E9  00B8               	movwf	(??_checkRFID+0)^080h+0
  3013  06EA  0838               	movf	(??_checkRFID+0)^080h+0,w
  3014  06EB  00F0               	movwf	(?_strcmp)
  3015  06EC  30C7               	movlw	(_rfid)&0ffh
  3016  06ED  160A  118A  233B   	fcall	_strcmp
              120A  118A         
  3017  06F2  0871               	movf	((1+(?_strcmp))),w
  3018  06F3  0470               	iorwf	((0+(?_strcmp))),w
  3019  06F4  1D03               	skipz
  3020  06F5  2EF7               	goto	u4921
  3021  06F6  2EF8               	goto	u4920
  3022  06F7                     u4921:
  3023  06F7  2F32               	goto	l5381
  3024  06F8                     u4920:
  3025                           	line	140
  3026                           	
  3027  06F8                     l5367:	
  3028                           ;code.c: 139: {
  3029                           ;code.c: 140: if(recordbook[2]==1)
  3030  06F8  3001               	movlw	01h
  3031  06F9  1683               	bsf	status, 5	;RP0=1, select bank1
  3032  06FA  1303               	bcf	status, 6	;RP1=0, select bank1
  3033  06FB  0643               	xorwf	0+(_recordbook)^080h+04h,w
  3034  06FC  0444               	iorwf	1+(_recordbook)^080h+04h,w
  3035  06FD  1D03               	skipz
  3036  06FE  2F00               	goto	u4931
  3037  06FF  2F01               	goto	u4930
  3038  0700                     u4931:
  3039  0700  2F12               	goto	l5373
  3040  0701                     u4930:
  3041                           	line	142
  3042                           	
  3043  0701                     l5369:	
  3044                           ;code.c: 141: {
  3045                           ;code.c: 142: Lcd8_Set_Cursor(2,0);
  3046  0701  01F4               	clrf	(?_Lcd8_Set_Cursor)
  3047  0702  3002               	movlw	(02h)
  3048  0703  160A  118A  22D3   	fcall	_Lcd8_Set_Cursor
              120A  118A         
  3049                           	line	143
  3050                           	
  3051  0708                     l5371:	
  3052                           ;code.c: 143: Lcd8_Write_String("Already Done");
  3053  0708  30C2               	movlw	low((STR_15-__stringbase))
  3054  0709  00F4               	movwf	(?_Lcd8_Write_String)
  3055  070A  3080               	movlw	80h
  3056  070B  00F5               	movwf	(?_Lcd8_Write_String+1)
  3057  070C  160A  118A  23CC   	fcall	_Lcd8_Write_String
              120A  118A         
  3058  0711  2F12               	goto	l5373
  3059                           	line	144
  3060                           	
  3061  0712                     l882:	
  3062                           	line	145
  3063                           	
  3064  0712                     l5373:	
  3065                           ;code.c: 144: }
  3066                           ;code.c: 145: if(recordbook[2]==0)
  3067  0712  1683               	bsf	status, 5	;RP0=1, select bank1
  3068  0713  1303               	bcf	status, 6	;RP1=0, select bank1
  3069  0714  0844               	movf	(1+(_recordbook)^080h+04h),w
  3070  0715  0443               	iorwf	(0+(_recordbook)^080h+04h),w
  3071  0716  1D03               	skipz
  3072  0717  2F19               	goto	u4941
  3073  0718  2F1A               	goto	u4940
  3074  0719                     u4941:
  3075  0719  2F32               	goto	l5381
  3076  071A                     u4940:
  3077                           	line	147
  3078                           	
  3079  071A                     l5375:	
  3080                           ;code.c: 146: {
  3081                           ;code.c: 147: Lcd8_Set_Cursor(2,0);
  3082  071A  01F4               	clrf	(?_Lcd8_Set_Cursor)
  3083  071B  3002               	movlw	(02h)
  3084  071C  160A  118A  22D3   	fcall	_Lcd8_Set_Cursor
              120A  118A         
  3085                           	line	148
  3086                           	
  3087  0721                     l5377:	
  3088                           ;code.c: 148: Lcd8_Write_String("Shubham Present ");
  3089  0721  305C               	movlw	low((STR_16-__stringbase))
  3090  0722  00F4               	movwf	(?_Lcd8_Write_String)
  3091  0723  3080               	movlw	80h
  3092  0724  00F5               	movwf	(?_Lcd8_Write_String+1)
  3093  0725  160A  118A  23CC   	fcall	_Lcd8_Write_String
              120A  118A         
  3094                           	line	149
  3095                           	
  3096  072A                     l5379:	
  3097                           ;code.c: 149: recordbook[2]=1;
  3098  072A  3001               	movlw	low(01h)
  3099  072B  1683               	bsf	status, 5	;RP0=1, select bank1
  3100  072C  1303               	bcf	status, 6	;RP1=0, select bank1
  3101  072D  00C3               	movwf	0+(_recordbook)^080h+04h
  3102  072E  3000               	movlw	high(01h)
  3103  072F  00C4               	movwf	(0+(_recordbook)^080h+04h)+1
  3104  0730  2F32               	goto	l5381
  3105                           	line	150
  3106                           	
  3107  0731                     l883:	
  3108  0731  2F32               	goto	l5381
  3109                           	line	153
  3110                           	
  3111  0732                     l881:	
  3112                           	line	154
  3113                           	
  3114  0732                     l5381:	
  3115                           ;code.c: 150: }
  3116                           ;code.c: 153: }
  3117                           ;code.c: 154: if(!strcmp(rfid,"400028687474"))
  3118  0732  308E               	movlw	((STR_17-__stringbase))&0ffh
  3119  0733  1683               	bsf	status, 5	;RP0=1, select bank1
  3120  0734  1303               	bcf	status, 6	;RP1=0, select bank1
  3121  0735  00B8               	movwf	(??_checkRFID+0)^080h+0
  3122  0736  0838               	movf	(??_checkRFID+0)^080h+0,w
  3123  0737  00F0               	movwf	(?_strcmp)
  3124  0738  30C7               	movlw	(_rfid)&0ffh
  3125  0739  160A  118A  233B   	fcall	_strcmp
              120A  118A         
  3126  073E  0871               	movf	((1+(?_strcmp))),w
  3127  073F  0470               	iorwf	((0+(?_strcmp))),w
  3128  0740  1D03               	skipz
  3129  0741  2F43               	goto	u4951
  3130  0742  2F44               	goto	u4950
  3131  0743                     u4951:
  3132  0743  2FBE               	goto	l5411
  3133  0744                     u4950:
  3134                           	line	156
  3135                           	
  3136  0744                     l5383:	
  3137                           ;code.c: 155: {
  3138                           ;code.c: 156: Lcd8_Set_Cursor(2,0);
  3139  0744  01F4               	clrf	(?_Lcd8_Set_Cursor)
  3140  0745  3002               	movlw	(02h)
  3141  0746  160A  118A  22D3   	fcall	_Lcd8_Set_Cursor
              120A  118A         
  3142                           	line	157
  3143                           	
  3144  074B                     l5385:	
  3145                           ;code.c: 157: Lcd8_Write_String("Welcome Teacher ");
  3146  074B  304B               	movlw	low((STR_18-__stringbase))
  3147  074C  00F4               	movwf	(?_Lcd8_Write_String)
  3148  074D  3080               	movlw	80h
  3149  074E  00F5               	movwf	(?_Lcd8_Write_String+1)
  3150  074F  160A  118A  23CC   	fcall	_Lcd8_Write_String
              120A  118A         
  3151                           	line	158
  3152                           	
  3153  0754                     l5387:	
  3154                           ;code.c: 158: delay(35);
  3155  0754  3023               	movlw	low(023h)
  3156  0755  00F0               	movwf	(?_delay)
  3157  0756  3000               	movlw	high(023h)
  3158  0757  00F1               	movwf	((?_delay))+1
  3159  0758  160A  118A  23FE   	fcall	_delay
              120A  118A         
  3160                           	line	159
  3161                           	
  3162  075D                     l5389:	
  3163                           ;code.c: 159: for(counter=0;counter<3;counter++)
  3164  075D  1683               	bsf	status, 5	;RP0=1, select bank1
  3165  075E  1303               	bcf	status, 6	;RP1=0, select bank1
  3166  075F  01C5               	clrf	(_counter)^080h
  3167  0760  01C6               	clrf	(_counter+1)^080h
  3168                           	
  3169  0761                     l5391:	
  3170  0761  0846               	movf	(_counter+1)^080h,w
  3171  0762  3A80               	xorlw	80h
  3172  0763  00FF               	movwf	btemp+1
  3173  0764  3080               	movlw	(high(03h))^80h
  3174  0765  027F               	subwf	btemp+1,w
  3175  0766  1D03               	skipz
  3176  0767  2F6A               	goto	u4965
  3177  0768  3003               	movlw	low(03h)
  3178  0769  0245               	subwf	(_counter)^080h,w
  3179  076A                     u4965:
  3180                           
  3181  076A  1C03               	skipc
  3182  076B  2F6D               	goto	u4961
  3183  076C  2F6E               	goto	u4960
  3184  076D                     u4961:
  3185  076D  2F70               	goto	l5395
  3186  076E                     u4960:
  3187  076E  2FBE               	goto	l5411
  3188                           	
  3189  076F                     l5393:	
  3190  076F  2FBE               	goto	l5411
  3191                           	line	160
  3192                           	
  3193  0770                     l885:	
  3194                           	line	161
  3195                           	
  3196  0770                     l5395:	
  3197                           ;code.c: 160: {
  3198                           ;code.c: 161: Lcd8_Clear();
  3199  0770  120A  158A  20FC   	fcall	_Lcd8_Clear
              120A  118A         
  3200                           	line	162
  3201                           	
  3202  0775                     l5397:	
  3203                           ;code.c: 162: delay(10);
  3204  0775  300A               	movlw	low(0Ah)
  3205  0776  00F0               	movwf	(?_delay)
  3206  0777  3000               	movlw	high(0Ah)
  3207  0778  00F1               	movwf	((?_delay))+1
  3208  0779  160A  118A  23FE   	fcall	_delay
              120A  118A         
  3209                           	line	163
  3210                           	
  3211  077E                     l5399:	
  3212                           ;code.c: 163: (recordbook[counter]==1)?present():absent();
  3213  077E  1683               	bsf	status, 5	;RP0=1, select bank1
  3214  077F  1303               	bcf	status, 6	;RP1=0, select bank1
  3215  0780  0845               	movf	(_counter)^080h,w
  3216  0781  00B8               	movwf	(??_checkRFID+0)^080h+0
  3217  0782  0738               	addwf	(??_checkRFID+0)^080h+0,w
  3218  0783  3EBF               	addlw	_recordbook&0ffh
  3219  0784  0084               	movwf	fsr0
  3220  0785  1383               	bcf	status, 7	;select IRP bank1
  3221  0786  0800               	movf	indf,w
  3222  0787  00B9               	movwf	(??_checkRFID+1)^080h+0+0
  3223  0788  0A84               	incf	fsr0,f
  3224  0789  0800               	movf	indf,w
  3225  078A  00BA               	movwf	(??_checkRFID+1)^080h+0+1
  3226  078B  3001               	movlw	01h
  3227  078C  0639               	xorwf	0+(??_checkRFID+1)^080h+0,w
  3228  078D  043A               	iorwf	1+(??_checkRFID+1)^080h+0,w
  3229  078E  1D03               	skipz
  3230  078F  2F91               	goto	u4971
  3231  0790  2F92               	goto	u4970
  3232  0791                     u4971:
  3233  0791  2F98               	goto	l5403
  3234  0792                     u4970:
  3235                           	
  3236  0792                     l5401:	
  3237  0792  160A  118A  25ED   	fcall	_present
              120A  118A         
  3238  0797  2F9E               	goto	l5405
  3239                           	
  3240  0798                     l888:	
  3241                           	
  3242  0798                     l5403:	
  3243  0798  160A  118A  264C   	fcall	_absent
              120A  118A         
  3244  079D  2F9E               	goto	l5405
  3245                           	
  3246  079E                     l890:	
  3247                           	line	164
  3248                           	
  3249  079E                     l5405:	
  3250                           ;code.c: 164: delay(10);
  3251  079E  300A               	movlw	low(0Ah)
  3252  079F  00F0               	movwf	(?_delay)
  3253  07A0  3000               	movlw	high(0Ah)
  3254  07A1  00F1               	movwf	((?_delay))+1
  3255  07A2  160A  118A  23FE   	fcall	_delay
              120A  118A         
  3256                           	line	159
  3257                           	
  3258  07A7                     l5407:	
  3259  07A7  3001               	movlw	low(01h)
  3260  07A8  1683               	bsf	status, 5	;RP0=1, select bank1
  3261  07A9  1303               	bcf	status, 6	;RP1=0, select bank1
  3262  07AA  07C5               	addwf	(_counter)^080h,f
  3263  07AB  1803               	skipnc
  3264  07AC  0AC6               	incf	(_counter+1)^080h,f
  3265  07AD  3000               	movlw	high(01h)
  3266  07AE  07C6               	addwf	(_counter+1)^080h,f
  3267                           	
  3268  07AF                     l5409:	
  3269  07AF  0846               	movf	(_counter+1)^080h,w
  3270  07B0  3A80               	xorlw	80h
  3271  07B1  00FF               	movwf	btemp+1
  3272  07B2  3080               	movlw	(high(03h))^80h
  3273  07B3  027F               	subwf	btemp+1,w
  3274  07B4  1D03               	skipz
  3275  07B5  2FB8               	goto	u4985
  3276  07B6  3003               	movlw	low(03h)
  3277  07B7  0245               	subwf	(_counter)^080h,w
  3278  07B8                     u4985:
  3279                           
  3280  07B8  1C03               	skipc
  3281  07B9  2FBB               	goto	u4981
  3282  07BA  2FBC               	goto	u4980
  3283  07BB                     u4981:
  3284  07BB  2F70               	goto	l5395
  3285  07BC                     u4980:
  3286  07BC  2FBE               	goto	l5411
  3287                           	
  3288  07BD                     l886:	
  3289  07BD  2FBE               	goto	l5411
  3290                           	line	166
  3291                           	
  3292  07BE                     l884:	
  3293                           	line	168
  3294                           	
  3295  07BE                     l5411:	
  3296                           ;code.c: 165: }
  3297                           ;code.c: 166: }
  3298                           ;code.c: 168: a = 0;
  3299  07BE  1683               	bsf	status, 5	;RP0=1, select bank1
  3300  07BF  1303               	bcf	status, 6	;RP1=0, select bank1
  3301  07C0  01BB               	clrf	(checkRFID@a)^080h
  3302  07C1  01BC               	clrf	(checkRFID@a+1)^080h
  3303                           	line	169
  3304                           	
  3305  07C2                     l5413:	
  3306                           ;code.c: 169: delay(100);
  3307  07C2  3064               	movlw	low(064h)
  3308  07C3  00F0               	movwf	(?_delay)
  3309  07C4  3000               	movlw	high(064h)
  3310  07C5  00F1               	movwf	((?_delay))+1
  3311  07C6  160A  118A  23FE   	fcall	_delay
              120A  118A         
  3312                           	line	170
  3313                           	
  3314  07CB                     l5415:	
  3315                           ;code.c: 170: initial_State();
  3316  07CB  120A  118A  2003   	fcall	_initial_State
              120A  118A         
  3317                           	line	171
  3318                           	
  3319  07D0                     l5417:	
  3320                           ;code.c: 171: for(i=0;i<12;i++)
  3321  07D0  1683               	bsf	status, 5	;RP0=1, select bank1
  3322  07D1  1303               	bcf	status, 6	;RP1=0, select bank1
  3323  07D2  01BD               	clrf	(checkRFID@i)^080h
  3324  07D3  01BE               	clrf	(checkRFID@i+1)^080h
  3325                           	
  3326  07D4                     l5419:	
  3327  07D4  083E               	movf	(checkRFID@i+1)^080h,w
  3328  07D5  3A80               	xorlw	80h
  3329  07D6  00FF               	movwf	btemp+1
  3330  07D7  3080               	movlw	(high(0Ch))^80h
  3331  07D8  027F               	subwf	btemp+1,w
  3332  07D9  1D03               	skipz
  3333  07DA  2FDD               	goto	u4995
  3334  07DB  300C               	movlw	low(0Ch)
  3335  07DC  023D               	subwf	(checkRFID@i)^080h,w
  3336  07DD                     u4995:
  3337                           
  3338  07DD  1C03               	skipc
  3339  07DE  2FE0               	goto	u4991
  3340  07DF  2FE1               	goto	u4990
  3341  07E0                     u4991:
  3342  07E0  2FE3               	goto	l5423
  3343  07E1                     u4990:
  3344  07E1  2FFF               	goto	l893
  3345                           	
  3346  07E2                     l5421:	
  3347  07E2  2FFF               	goto	l893
  3348                           	line	172
  3349                           	
  3350  07E3                     l891:	
  3351                           	
  3352  07E3                     l5423:	
  3353                           ;code.c: 172: rfid[i] = 0;
  3354  07E3  1683               	bsf	status, 5	;RP0=1, select bank1
  3355  07E4  1303               	bcf	status, 6	;RP1=0, select bank1
  3356  07E5  083D               	movf	(checkRFID@i)^080h,w
  3357  07E6  3EC7               	addlw	_rfid&0ffh
  3358  07E7  0084               	movwf	fsr0
  3359  07E8  1383               	bcf	status, 7	;select IRP bank1
  3360  07E9  0180               	clrf	indf
  3361                           	line	171
  3362                           	
  3363  07EA                     l5425:	
  3364  07EA  3001               	movlw	low(01h)
  3365  07EB  07BD               	addwf	(checkRFID@i)^080h,f
  3366  07EC  1803               	skipnc
  3367  07ED  0ABE               	incf	(checkRFID@i+1)^080h,f
  3368  07EE  3000               	movlw	high(01h)
  3369  07EF  07BE               	addwf	(checkRFID@i+1)^080h,f
  3370                           	
  3371  07F0                     l5427:	
  3372  07F0  083E               	movf	(checkRFID@i+1)^080h,w
  3373  07F1  3A80               	xorlw	80h
  3374  07F2  00FF               	movwf	btemp+1
  3375  07F3  3080               	movlw	(high(0Ch))^80h
  3376  07F4  027F               	subwf	btemp+1,w
  3377  07F5  1D03               	skipz
  3378  07F6  2FF9               	goto	u5005
  3379  07F7  300C               	movlw	low(0Ch)
  3380  07F8  023D               	subwf	(checkRFID@i)^080h,w
  3381  07F9                     u5005:
  3382                           
  3383  07F9  1C03               	skipc
  3384  07FA  2FFC               	goto	u5001
  3385  07FB  2FFD               	goto	u5000
  3386  07FC                     u5001:
  3387  07FC  2FE3               	goto	l5423
  3388  07FD                     u5000:
  3389  07FD  2FFF               	goto	l893
  3390                           	
  3391  07FE                     l892:	
  3392  07FE  2FFF               	goto	l893
  3393                           	line	173
  3394                           	
  3395  07FF                     l874:	
  3396                           	line	175
  3397                           	
  3398  07FF                     l893:	
  3399  07FF  0008               	return
  3400                           	opt stack 0
  3401                           GLOBAL	__end_of_checkRFID
  3402  0800                     	__end_of_checkRFID:
  3403 ;; =============== function _checkRFID ends ============
  3404                           
  3405                           	signat	_checkRFID,88
  3406                           	global	_absent
  3407                           psect	text889,local,class=CODE,delta=2
  3408                           global __ptext889
  3409  164C                     __ptext889:
  3410                           
  3411 ;; *************** function _absent *****************
  3412 ;; Defined at:
  3413 ;;		line 77 in file "code.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;		None
  3416 ;; Auto vars:     Size  Location     Type
  3417 ;;		None
  3418 ;; Return value:  Size  Location     Type
  3419 ;;		None               void
  3420 ;; Registers used:
  3421 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3422 ;; Tracked objects:
  3423 ;;		On entry : 0/0
  3424 ;;		On exit  : 0/0
  3425 ;;		Unchanged: 0/0
  3426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3427 ;;      Params:         0       0       0       0       0
  3428 ;;      Locals:         0       0       0       0       0
  3429 ;;      Temps:          0       1       0       0       0
  3430 ;;      Totals:         0       1       0       0       0
  3431 ;;Total ram usage:        1 bytes
  3432 ;; Hardware stack levels used:    1
  3433 ;; Hardware stack levels required when called:    6
  3434 ;; This function calls:
  3435 ;;		___awtoft
  3436 ;;		_ftoa
  3437 ;;		_Lcd8_Set_Cursor
  3438 ;;		_Lcd8_Write_String
  3439 ;;		_delay
  3440 ;; This function is called by:
  3441 ;;		_checkRFID
  3442 ;; This function uses a non-reentrant model
  3443 ;;
  3444                           psect	text889
  3445                           	file	"code.c"
  3446                           	line	77
  3447                           	global	__size_of_absent
  3448  005F                     	__size_of_absent	equ	__end_of_absent-_absent
  3449                           	
  3450  164C                     _absent:	
  3451                           	opt	stack 0
  3452                           ; Regs used in _absent: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3453                           	line	78
  3454                           	
  3455  164C                     l5295:	
  3456                           ;code.c: 78: ftoa(counter+1,buffer,0);
  3457  164C  1683               	bsf	status, 5	;RP0=1, select bank1
  3458  164D  1303               	bcf	status, 6	;RP1=0, select bank1
  3459  164E  0845               	movf	(_counter)^080h,w
  3460  164F  3E01               	addlw	low(01h)
  3461  1650  00FB               	movwf	(?___awtoft)
  3462  1651  0846               	movf	(_counter+1)^080h,w
  3463  1652  1803               	skipnc
  3464  1653  3E01               	addlw	1
  3465  1654  3E00               	addlw	high(01h)
  3466  1655  00FC               	movwf	1+(?___awtoft)
  3467  1656  160A  118A  2311   	fcall	___awtoft
              160A  118A         
  3468  165B  087B               	movf	(0+(?___awtoft)),w
  3469  165C  1683               	bsf	status, 5	;RP0=1, select bank1
  3470  165D  1303               	bcf	status, 6	;RP1=0, select bank1
  3471  165E  00A8               	movwf	(?_ftoa)^080h
  3472  165F  087C               	movf	(1+(?___awtoft)),w
  3473  1660  00A9               	movwf	(?_ftoa+1)^080h
  3474  1661  087D               	movf	(2+(?___awtoft)),w
  3475  1662  00AA               	movwf	(?_ftoa+2)^080h
  3476  1663  30D3               	movlw	(_buffer)&0ffh
  3477  1664  1283               	bcf	status, 5	;RP0=0, select bank0
  3478  1665  1303               	bcf	status, 6	;RP1=0, select bank0
  3479  1666  00ED               	movwf	(??_absent+0)+0
  3480  1667  086D               	movf	(??_absent+0)+0,w
  3481  1668  1683               	bsf	status, 5	;RP0=1, select bank1
  3482  1669  1303               	bcf	status, 6	;RP1=0, select bank1
  3483  166A  00AB               	movwf	(0+?_ftoa+03h)^080h
  3484  166B  3000               	movlw	low(0)
  3485  166C  00AC               	movwf	0+(?_ftoa)^080h+04h
  3486  166D  3000               	movlw	high(0)
  3487  166E  00AD               	movwf	(0+(?_ftoa)^080h+04h)+1
  3488  166F  120A  118A  21EA   	fcall	_ftoa
              160A  118A         
  3489                           	line	79
  3490                           	
  3491  1674                     l5297:	
  3492                           ;code.c: 79: Lcd8_Set_Cursor(1,1);
  3493  1674  01F4               	clrf	(?_Lcd8_Set_Cursor)
  3494  1675  1403               	bsf	status,0
  3495  1676  0DF4               	rlf	(?_Lcd8_Set_Cursor),f
  3496  1677  3001               	movlw	(01h)
  3497  1678  160A  118A  22D3   	fcall	_Lcd8_Set_Cursor
              160A  118A         
  3498                           	line	80
  3499                           	
  3500  167D                     l5299:	
  3501                           ;code.c: 80: Lcd8_Write_String("Student_");
  3502  167D  30CF               	movlw	low((STR_5-__stringbase))
  3503  167E  00F4               	movwf	(?_Lcd8_Write_String)
  3504  167F  3080               	movlw	80h
  3505  1680  00F5               	movwf	(?_Lcd8_Write_String+1)
  3506  1681  160A  118A  23CC   	fcall	_Lcd8_Write_String
              160A  118A         
  3507                           	line	81
  3508                           	
  3509  1686                     l5301:	
  3510                           ;code.c: 81: Lcd8_Write_String(buffer);
  3511  1686  30D3               	movlw	(_buffer&0ffh)
  3512  1687  00F4               	movwf	(?_Lcd8_Write_String)
  3513  1688  3000               	movlw	(0x1/2)
  3514  1689  00F5               	movwf	(?_Lcd8_Write_String+1)
  3515  168A  160A  118A  23CC   	fcall	_Lcd8_Write_String
              160A  118A         
  3516                           	line	82
  3517                           	
  3518  168F                     l5303:	
  3519                           ;code.c: 82: Lcd8_Set_Cursor(2,1);
  3520  168F  01F4               	clrf	(?_Lcd8_Set_Cursor)
  3521  1690  1403               	bsf	status,0
  3522  1691  0DF4               	rlf	(?_Lcd8_Set_Cursor),f
  3523  1692  3002               	movlw	(02h)
  3524  1693  160A  118A  22D3   	fcall	_Lcd8_Set_Cursor
              160A  118A         
  3525                           	line	83
  3526                           ;code.c: 83: Lcd8_Write_String(" absent");
  3527  1698  30E1               	movlw	low((STR_6-__stringbase))
  3528  1699  00F4               	movwf	(?_Lcd8_Write_String)
  3529  169A  3080               	movlw	80h
  3530  169B  00F5               	movwf	(?_Lcd8_Write_String+1)
  3531  169C  160A  118A  23CC   	fcall	_Lcd8_Write_String
              160A  118A         
  3532                           	line	84
  3533                           	
  3534  16A1                     l5305:	
  3535                           ;code.c: 84: delay(100);
  3536  16A1  3064               	movlw	low(064h)
  3537  16A2  00F0               	movwf	(?_delay)
  3538  16A3  3000               	movlw	high(064h)
  3539  16A4  00F1               	movwf	((?_delay))+1
  3540  16A5  160A  118A  23FE   	fcall	_delay
              160A  118A         
  3541                           	line	86
  3542                           	
  3543  16AA                     l867:	
  3544  16AA  0008               	return
  3545                           	opt stack 0
  3546                           GLOBAL	__end_of_absent
  3547  16AB                     	__end_of_absent:
  3548 ;; =============== function _absent ends ============
  3549                           
  3550                           	signat	_absent,88
  3551                           	global	_present
  3552                           psect	text890,local,class=CODE,delta=2
  3553                           global __ptext890
  3554  15ED                     __ptext890:
  3555                           
  3556 ;; *************** function _present *****************
  3557 ;; Defined at:
  3558 ;;		line 67 in file "code.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;		None
  3561 ;; Auto vars:     Size  Location     Type
  3562 ;;		None
  3563 ;; Return value:  Size  Location     Type
  3564 ;;		None               void
  3565 ;; Registers used:
  3566 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3567 ;; Tracked objects:
  3568 ;;		On entry : 0/0
  3569 ;;		On exit  : 0/0
  3570 ;;		Unchanged: 0/0
  3571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3572 ;;      Params:         0       0       0       0       0
  3573 ;;      Locals:         0       0       0       0       0
  3574 ;;      Temps:          0       1       0       0       0
  3575 ;;      Totals:         0       1       0       0       0
  3576 ;;Total ram usage:        1 bytes
  3577 ;; Hardware stack levels used:    1
  3578 ;; Hardware stack levels required when called:    6
  3579 ;; This function calls:
  3580 ;;		___awtoft
  3581 ;;		_ftoa
  3582 ;;		_Lcd8_Set_Cursor
  3583 ;;		_Lcd8_Write_String
  3584 ;;		_delay
  3585 ;; This function is called by:
  3586 ;;		_checkRFID
  3587 ;; This function uses a non-reentrant model
  3588 ;;
  3589                           psect	text890
  3590                           	file	"code.c"
  3591                           	line	67
  3592                           	global	__size_of_present
  3593  005F                     	__size_of_present	equ	__end_of_present-_present
  3594                           	
  3595  15ED                     _present:	
  3596                           	opt	stack 0
  3597                           ; Regs used in _present: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3598                           	line	68
  3599                           	
  3600  15ED                     l5283:	
  3601                           ;code.c: 68: ftoa(counter+1,buffer,0);
  3602  15ED  1683               	bsf	status, 5	;RP0=1, select bank1
  3603  15EE  1303               	bcf	status, 6	;RP1=0, select bank1
  3604  15EF  0845               	movf	(_counter)^080h,w
  3605  15F0  3E01               	addlw	low(01h)
  3606  15F1  00FB               	movwf	(?___awtoft)
  3607  15F2  0846               	movf	(_counter+1)^080h,w
  3608  15F3  1803               	skipnc
  3609  15F4  3E01               	addlw	1
  3610  15F5  3E00               	addlw	high(01h)
  3611  15F6  00FC               	movwf	1+(?___awtoft)
  3612  15F7  160A  118A  2311   	fcall	___awtoft
              160A  118A         
  3613  15FC  087B               	movf	(0+(?___awtoft)),w
  3614  15FD  1683               	bsf	status, 5	;RP0=1, select bank1
  3615  15FE  1303               	bcf	status, 6	;RP1=0, select bank1
  3616  15FF  00A8               	movwf	(?_ftoa)^080h
  3617  1600  087C               	movf	(1+(?___awtoft)),w
  3618  1601  00A9               	movwf	(?_ftoa+1)^080h
  3619  1602  087D               	movf	(2+(?___awtoft)),w
  3620  1603  00AA               	movwf	(?_ftoa+2)^080h
  3621  1604  30D3               	movlw	(_buffer)&0ffh
  3622  1605  1283               	bcf	status, 5	;RP0=0, select bank0
  3623  1606  1303               	bcf	status, 6	;RP1=0, select bank0
  3624  1607  00ED               	movwf	(??_present+0)+0
  3625  1608  086D               	movf	(??_present+0)+0,w
  3626  1609  1683               	bsf	status, 5	;RP0=1, select bank1
  3627  160A  1303               	bcf	status, 6	;RP1=0, select bank1
  3628  160B  00AB               	movwf	(0+?_ftoa+03h)^080h
  3629  160C  3000               	movlw	low(0)
  3630  160D  00AC               	movwf	0+(?_ftoa)^080h+04h
  3631  160E  3000               	movlw	high(0)
  3632  160F  00AD               	movwf	(0+(?_ftoa)^080h+04h)+1
  3633  1610  120A  118A  21EA   	fcall	_ftoa
              160A  118A         
  3634                           	line	69
  3635                           	
  3636  1615                     l5285:	
  3637                           ;code.c: 69: Lcd8_Set_Cursor(1,1);
  3638  1615  01F4               	clrf	(?_Lcd8_Set_Cursor)
  3639  1616  1403               	bsf	status,0
  3640  1617  0DF4               	rlf	(?_Lcd8_Set_Cursor),f
  3641  1618  3001               	movlw	(01h)
  3642  1619  160A  118A  22D3   	fcall	_Lcd8_Set_Cursor
              160A  118A         
  3643                           	line	70
  3644                           	
  3645  161E                     l5287:	
  3646                           ;code.c: 70: Lcd8_Write_String("Student_");
  3647  161E  30CF               	movlw	low((STR_3-__stringbase))
  3648  161F  00F4               	movwf	(?_Lcd8_Write_String)
  3649  1620  3080               	movlw	80h
  3650  1621  00F5               	movwf	(?_Lcd8_Write_String+1)
  3651  1622  160A  118A  23CC   	fcall	_Lcd8_Write_String
              160A  118A         
  3652                           	line	71
  3653                           	
  3654  1627                     l5289:	
  3655                           ;code.c: 71: Lcd8_Write_String(buffer);
  3656  1627  30D3               	movlw	(_buffer&0ffh)
  3657  1628  00F4               	movwf	(?_Lcd8_Write_String)
  3658  1629  3000               	movlw	(0x1/2)
  3659  162A  00F5               	movwf	(?_Lcd8_Write_String+1)
  3660  162B  160A  118A  23CC   	fcall	_Lcd8_Write_String
              160A  118A         
  3661                           	line	72
  3662                           	
  3663  1630                     l5291:	
  3664                           ;code.c: 72: Lcd8_Set_Cursor(2,1);
  3665  1630  01F4               	clrf	(?_Lcd8_Set_Cursor)
  3666  1631  1403               	bsf	status,0
  3667  1632  0DF4               	rlf	(?_Lcd8_Set_Cursor),f
  3668  1633  3002               	movlw	(02h)
  3669  1634  160A  118A  22D3   	fcall	_Lcd8_Set_Cursor
              160A  118A         
  3670                           	line	73
  3671                           ;code.c: 73: Lcd8_Write_String(" present");
  3672  1639  30D8               	movlw	low((STR_4-__stringbase))
  3673  163A  00F4               	movwf	(?_Lcd8_Write_String)
  3674  163B  3080               	movlw	80h
  3675  163C  00F5               	movwf	(?_Lcd8_Write_String+1)
  3676  163D  160A  118A  23CC   	fcall	_Lcd8_Write_String
              160A  118A         
  3677                           	line	74
  3678                           	
  3679  1642                     l5293:	
  3680                           ;code.c: 74: delay(100);
  3681  1642  3064               	movlw	low(064h)
  3682  1643  00F0               	movwf	(?_delay)
  3683  1644  3000               	movlw	high(064h)
  3684  1645  00F1               	movwf	((?_delay))+1
  3685  1646  160A  118A  23FE   	fcall	_delay
              160A  118A         
  3686                           	line	75
  3687                           	
  3688  164B                     l864:	
  3689  164B  0008               	return
  3690                           	opt stack 0
  3691                           GLOBAL	__end_of_present
  3692  164C                     	__end_of_present:
  3693 ;; =============== function _present ends ============
  3694                           
  3695                           	signat	_present,88
  3696                           	global	_ftoa
  3697                           psect	text891,local,class=CODE,delta=2
  3698                           global __ptext891
  3699  01EA                     __ptext891:
  3700                           
  3701 ;; *************** function _ftoa *****************
  3702 ;; Defined at:
  3703 ;;		line 31 in file "IntToStr.h"
  3704 ;; Parameters:    Size  Location     Type
  3705 ;;  n               3    8[BANK1 ] float 
  3706 ;;  res             1   11[BANK1 ] PTR unsigned char 
  3707 ;;		 -> buffer(2), 
  3708 ;;  afterpoint      2   12[BANK1 ] int 
  3709 ;; Auto vars:     Size  Location     Type
  3710 ;;  fpart           3   21[BANK1 ] float 
  3711 ;;  i               2   19[BANK1 ] int 
  3712 ;;  ipart           2   17[BANK1 ] int 
  3713 ;; Return value:  Size  Location     Type
  3714 ;;		None               void
  3715 ;; Registers used:
  3716 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3717 ;; Tracked objects:
  3718 ;;		On entry : 0/0
  3719 ;;		On exit  : 0/0
  3720 ;;		Unchanged: 0/0
  3721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3722 ;;      Params:         0       0       6       0       0
  3723 ;;      Locals:         0       0      10       0       0
  3724 ;;      Temps:          0       2       0       0       0
  3725 ;;      Totals:         0       2      16       0       0
  3726 ;;Total ram usage:       18 bytes
  3727 ;; Hardware stack levels used:    1
  3728 ;; Hardware stack levels required when called:    5
  3729 ;; This function calls:
  3730 ;;		___fttol
  3731 ;;		___awtoft
  3732 ;;		___ftneg
  3733 ;;		___ftadd
  3734 ;;		_intToStr
  3735 ;;		_pow
  3736 ;;		___ftmul
  3737 ;; This function is called by:
  3738 ;;		_present
  3739 ;;		_absent
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           psect	text891
  3743                           	file	"IntToStr.h"
  3744                           	line	31
  3745                           	global	__size_of_ftoa
  3746  013A                     	__size_of_ftoa	equ	__end_of_ftoa-_ftoa
  3747                           	
  3748  01EA                     _ftoa:	
  3749                           	opt	stack 0
  3750                           ; Regs used in _ftoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3751                           	line	33
  3752                           	
  3753  01EA                     l5269:	
  3754                           ;IntToStr.h: 33: int ipart = (int)n;
  3755  01EA  1683               	bsf	status, 5	;RP0=1, select bank1
  3756  01EB  1303               	bcf	status, 6	;RP1=0, select bank1
  3757  01EC  0828               	movf	(ftoa@n)^080h,w
  3758  01ED  00F0               	movwf	(?___fttol)
  3759  01EE  0829               	movf	(ftoa@n+1)^080h,w
  3760  01EF  00F1               	movwf	(?___fttol+1)
  3761  01F0  082A               	movf	(ftoa@n+2)^080h,w
  3762  01F1  00F2               	movwf	(?___fttol+2)
  3763  01F2  120A  158A  2276   	fcall	___fttol
              120A  118A         
  3764  01F7  0871               	movf	1+(((0+(?___fttol)))),w
  3765  01F8  1683               	bsf	status, 5	;RP0=1, select bank1
  3766  01F9  1303               	bcf	status, 6	;RP1=0, select bank1
  3767  01FA  01B2               	clrf	(ftoa@ipart+1)^080h
  3768  01FB  07B2               	addwf	(ftoa@ipart+1)^080h
  3769  01FC  0870               	movf	0+(((0+(?___fttol)))),w
  3770  01FD  01B1               	clrf	(ftoa@ipart)^080h
  3771  01FE  07B1               	addwf	(ftoa@ipart)^080h
  3772                           
  3773                           	line	36
  3774                           ;IntToStr.h: 36: float fpart = n - (float)ipart;
  3775  01FF  0828               	movf	(ftoa@n)^080h,w
  3776  0200  1283               	bcf	status, 5	;RP0=0, select bank0
  3777  0201  1303               	bcf	status, 6	;RP1=0, select bank0
  3778  0202  00B3               	movwf	(?___ftadd)
  3779  0203  1683               	bsf	status, 5	;RP0=1, select bank1
  3780  0204  1303               	bcf	status, 6	;RP1=0, select bank1
  3781  0205  0829               	movf	(ftoa@n+1)^080h,w
  3782  0206  1283               	bcf	status, 5	;RP0=0, select bank0
  3783  0207  1303               	bcf	status, 6	;RP1=0, select bank0
  3784  0208  00B4               	movwf	(?___ftadd+1)
  3785  0209  1683               	bsf	status, 5	;RP0=1, select bank1
  3786  020A  1303               	bcf	status, 6	;RP1=0, select bank1
  3787  020B  082A               	movf	(ftoa@n+2)^080h,w
  3788  020C  1283               	bcf	status, 5	;RP0=0, select bank0
  3789  020D  1303               	bcf	status, 6	;RP1=0, select bank0
  3790  020E  00B5               	movwf	(?___ftadd+2)
  3791  020F  1683               	bsf	status, 5	;RP0=1, select bank1
  3792  0210  1303               	bcf	status, 6	;RP1=0, select bank1
  3793  0211  0832               	movf	(ftoa@ipart+1)^080h,w
  3794  0212  01FC               	clrf	(?___awtoft+1)
  3795  0213  07FC               	addwf	(?___awtoft+1)
  3796  0214  0831               	movf	(ftoa@ipart)^080h,w
  3797  0215  01FB               	clrf	(?___awtoft)
  3798  0216  07FB               	addwf	(?___awtoft)
  3799                           
  3800  0217  160A  118A  2311   	fcall	___awtoft
              120A  118A         
  3801  021C  087B               	movf	(0+(?___awtoft)),w
  3802  021D  00F8               	movwf	(?___ftneg)
  3803  021E  087C               	movf	(1+(?___awtoft)),w
  3804  021F  00F9               	movwf	(?___ftneg+1)
  3805  0220  087D               	movf	(2+(?___awtoft)),w
  3806  0221  00FA               	movwf	(?___ftneg+2)
  3807  0222  160A  118A  224B   	fcall	___ftneg
              120A  118A         
  3808  0227  0878               	movf	(0+(?___ftneg)),w
  3809  0228  1283               	bcf	status, 5	;RP0=0, select bank0
  3810  0229  1303               	bcf	status, 6	;RP1=0, select bank0
  3811  022A  00B6               	movwf	0+(?___ftadd)+03h
  3812  022B  0879               	movf	(1+(?___ftneg)),w
  3813  022C  00B7               	movwf	1+(?___ftadd)+03h
  3814  022D  087A               	movf	(2+(?___ftneg)),w
  3815  022E  00B8               	movwf	2+(?___ftadd)+03h
  3816  022F  120A  118A  2324   	fcall	___ftadd
              120A  118A         
  3817  0234  1283               	bcf	status, 5	;RP0=0, select bank0
  3818  0235  1303               	bcf	status, 6	;RP1=0, select bank0
  3819  0236  0833               	movf	(0+(?___ftadd)),w
  3820  0237  1683               	bsf	status, 5	;RP0=1, select bank1
  3821  0238  1303               	bcf	status, 6	;RP1=0, select bank1
  3822  0239  00B5               	movwf	(ftoa@fpart)^080h
  3823  023A  1283               	bcf	status, 5	;RP0=0, select bank0
  3824  023B  1303               	bcf	status, 6	;RP1=0, select bank0
  3825  023C  0834               	movf	(1+(?___ftadd)),w
  3826  023D  1683               	bsf	status, 5	;RP0=1, select bank1
  3827  023E  1303               	bcf	status, 6	;RP1=0, select bank1
  3828  023F  00B6               	movwf	(ftoa@fpart+1)^080h
  3829  0240  1283               	bcf	status, 5	;RP0=0, select bank0
  3830  0241  1303               	bcf	status, 6	;RP1=0, select bank0
  3831  0242  0835               	movf	(2+(?___ftadd)),w
  3832  0243  1683               	bsf	status, 5	;RP0=1, select bank1
  3833  0244  1303               	bcf	status, 6	;RP1=0, select bank1
  3834  0245  00B7               	movwf	(ftoa@fpart+2)^080h
  3835                           	line	39
  3836                           	
  3837  0246                     l5271:	
  3838                           ;IntToStr.h: 39: int i = intToStr(ipart, res, 0);
  3839  0246  0832               	movf	(ftoa@ipart+1)^080h,w
  3840  0247  1283               	bcf	status, 5	;RP0=0, select bank0
  3841  0248  1303               	bcf	status, 6	;RP1=0, select bank0
  3842  0249  01A1               	clrf	(?_intToStr+1)
  3843  024A  07A1               	addwf	(?_intToStr+1)
  3844  024B  1683               	bsf	status, 5	;RP0=1, select bank1
  3845  024C  1303               	bcf	status, 6	;RP1=0, select bank1
  3846  024D  0831               	movf	(ftoa@ipart)^080h,w
  3847  024E  1283               	bcf	status, 5	;RP0=0, select bank0
  3848  024F  1303               	bcf	status, 6	;RP1=0, select bank0
  3849  0250  01A0               	clrf	(?_intToStr)
  3850  0251  07A0               	addwf	(?_intToStr)
  3851                           
  3852  0252  1683               	bsf	status, 5	;RP0=1, select bank1
  3853  0253  1303               	bcf	status, 6	;RP1=0, select bank1
  3854  0254  082B               	movf	(ftoa@res)^080h,w
  3855  0255  1283               	bcf	status, 5	;RP0=0, select bank0
  3856  0256  1303               	bcf	status, 6	;RP1=0, select bank0
  3857  0257  00EB               	movwf	(??_ftoa+0)+0
  3858  0258  086B               	movf	(??_ftoa+0)+0,w
  3859  0259  00A2               	movwf	(0+?_intToStr+02h)
  3860  025A  3000               	movlw	low(0)
  3861  025B  00A3               	movwf	0+(?_intToStr)+03h
  3862  025C  3000               	movlw	high(0)
  3863  025D  00A4               	movwf	(0+(?_intToStr)+03h)+1
  3864  025E  120A  158A  21EE   	fcall	_intToStr
              120A  118A         
  3865  0263  1283               	bcf	status, 5	;RP0=0, select bank0
  3866  0264  1303               	bcf	status, 6	;RP1=0, select bank0
  3867  0265  0821               	movf	(1+(?_intToStr)),w
  3868  0266  1683               	bsf	status, 5	;RP0=1, select bank1
  3869  0267  1303               	bcf	status, 6	;RP1=0, select bank1
  3870  0268  01B4               	clrf	(ftoa@i+1)^080h
  3871  0269  07B4               	addwf	(ftoa@i+1)^080h
  3872  026A  1283               	bcf	status, 5	;RP0=0, select bank0
  3873  026B  1303               	bcf	status, 6	;RP1=0, select bank0
  3874  026C  0820               	movf	(0+(?_intToStr)),w
  3875  026D  1683               	bsf	status, 5	;RP0=1, select bank1
  3876  026E  1303               	bcf	status, 6	;RP1=0, select bank1
  3877  026F  01B3               	clrf	(ftoa@i)^080h
  3878  0270  07B3               	addwf	(ftoa@i)^080h
  3879                           
  3880                           	line	42
  3881                           	
  3882  0271                     l5273:	
  3883                           ;IntToStr.h: 42: if (afterpoint != 0)
  3884  0271  082D               	movf	(ftoa@afterpoint+1)^080h,w
  3885  0272  042C               	iorwf	(ftoa@afterpoint)^080h,w
  3886  0273  1903               	skipnz
  3887  0274  2A76               	goto	u4801
  3888  0275  2A77               	goto	u4800
  3889  0276                     u4801:
  3890  0276  2B23               	goto	l844
  3891  0277                     u4800:
  3892                           	line	44
  3893                           	
  3894  0277                     l5275:	
  3895                           ;IntToStr.h: 43: {
  3896                           ;IntToStr.h: 44: res[i] = '.';
  3897  0277  302E               	movlw	(02Eh)
  3898  0278  1283               	bcf	status, 5	;RP0=0, select bank0
  3899  0279  1303               	bcf	status, 6	;RP1=0, select bank0
  3900  027A  00EB               	movwf	(??_ftoa+0)+0
  3901  027B  1683               	bsf	status, 5	;RP0=1, select bank1
  3902  027C  1303               	bcf	status, 6	;RP1=0, select bank1
  3903  027D  0833               	movf	(ftoa@i)^080h,w
  3904  027E  072B               	addwf	(ftoa@res)^080h,w
  3905  027F  1283               	bcf	status, 5	;RP0=0, select bank0
  3906  0280  1303               	bcf	status, 6	;RP1=0, select bank0
  3907  0281  00EC               	movwf	(??_ftoa+1)+0
  3908  0282  086C               	movf	0+(??_ftoa+1)+0,w
  3909  0283  0084               	movwf	fsr0
  3910  0284  086B               	movf	(??_ftoa+0)+0,w
  3911  0285  1383               	bcf	status, 7	;select IRP bank0
  3912  0286  0080               	movwf	indf
  3913                           	line	49
  3914                           	
  3915  0287                     l5277:	
  3916                           ;IntToStr.h: 49: fpart = fpart * pow(10, afterpoint);
  3917  0287  1683               	bsf	status, 5	;RP0=1, select bank1
  3918  0288  1303               	bcf	status, 6	;RP1=0, select bank1
  3919  0289  082D               	movf	(ftoa@afterpoint+1)^080h,w
  3920  028A  01FC               	clrf	(?___awtoft+1)
  3921  028B  07FC               	addwf	(?___awtoft+1)
  3922  028C  082C               	movf	(ftoa@afterpoint)^080h,w
  3923  028D  01FB               	clrf	(?___awtoft)
  3924  028E  07FB               	addwf	(?___awtoft)
  3925                           
  3926  028F  160A  118A  2311   	fcall	___awtoft
              120A  118A         
  3927  0294  087B               	movf	(0+(?___awtoft)),w
  3928  0295  1283               	bcf	status, 5	;RP0=0, select bank0
  3929  0296  1303               	bcf	status, 6	;RP1=0, select bank0
  3930  0297  00E7               	movwf	0+(?_pow)+03h
  3931  0298  087C               	movf	(1+(?___awtoft)),w
  3932  0299  00E8               	movwf	1+(?_pow)+03h
  3933  029A  087D               	movf	(2+(?___awtoft)),w
  3934  029B  00E9               	movwf	2+(?_pow)+03h
  3935  029C  3000               	movlw	0x0
  3936  029D  00E4               	movwf	(?_pow)
  3937  029E  3020               	movlw	0x20
  3938  029F  00E5               	movwf	(?_pow+1)
  3939  02A0  3041               	movlw	0x41
  3940  02A1  00E6               	movwf	(?_pow+2)
  3941  02A2  120A  118A  20C3   	fcall	_pow
              120A  118A         
  3942  02A7  1283               	bcf	status, 5	;RP0=0, select bank0
  3943  02A8  1303               	bcf	status, 6	;RP1=0, select bank0
  3944  02A9  0864               	movf	(0+(?_pow)),w
  3945  02AA  1683               	bsf	status, 5	;RP0=1, select bank1
  3946  02AB  1303               	bcf	status, 6	;RP1=0, select bank1
  3947  02AC  00AE               	movwf	(_ftoa$2281)^080h
  3948  02AD  1283               	bcf	status, 5	;RP0=0, select bank0
  3949  02AE  1303               	bcf	status, 6	;RP1=0, select bank0
  3950  02AF  0865               	movf	(1+(?_pow)),w
  3951  02B0  1683               	bsf	status, 5	;RP0=1, select bank1
  3952  02B1  1303               	bcf	status, 6	;RP1=0, select bank1
  3953  02B2  00AF               	movwf	(_ftoa$2281+1)^080h
  3954  02B3  1283               	bcf	status, 5	;RP0=0, select bank0
  3955  02B4  1303               	bcf	status, 6	;RP1=0, select bank0
  3956  02B5  0866               	movf	(2+(?_pow)),w
  3957  02B6  1683               	bsf	status, 5	;RP0=1, select bank1
  3958  02B7  1303               	bcf	status, 6	;RP1=0, select bank1
  3959  02B8  00B0               	movwf	(_ftoa$2281+2)^080h
  3960                           	
  3961  02B9                     l5279:	
  3962                           ;IntToStr.h: 49: fpart = fpart * pow(10, afterpoint);
  3963  02B9  0835               	movf	(ftoa@fpart)^080h,w
  3964  02BA  1283               	bcf	status, 5	;RP0=0, select bank0
  3965  02BB  1303               	bcf	status, 6	;RP1=0, select bank0
  3966  02BC  00A3               	movwf	(?___ftmul)
  3967  02BD  1683               	bsf	status, 5	;RP0=1, select bank1
  3968  02BE  1303               	bcf	status, 6	;RP1=0, select bank1
  3969  02BF  0836               	movf	(ftoa@fpart+1)^080h,w
  3970  02C0  1283               	bcf	status, 5	;RP0=0, select bank0
  3971  02C1  1303               	bcf	status, 6	;RP1=0, select bank0
  3972  02C2  00A4               	movwf	(?___ftmul+1)
  3973  02C3  1683               	bsf	status, 5	;RP0=1, select bank1
  3974  02C4  1303               	bcf	status, 6	;RP1=0, select bank1
  3975  02C5  0837               	movf	(ftoa@fpart+2)^080h,w
  3976  02C6  1283               	bcf	status, 5	;RP0=0, select bank0
  3977  02C7  1303               	bcf	status, 6	;RP1=0, select bank0
  3978  02C8  00A5               	movwf	(?___ftmul+2)
  3979  02C9  1683               	bsf	status, 5	;RP0=1, select bank1
  3980  02CA  1303               	bcf	status, 6	;RP1=0, select bank1
  3981  02CB  082E               	movf	(_ftoa$2281)^080h,w
  3982  02CC  1283               	bcf	status, 5	;RP0=0, select bank0
  3983  02CD  1303               	bcf	status, 6	;RP1=0, select bank0
  3984  02CE  00A6               	movwf	0+(?___ftmul)+03h
  3985  02CF  1683               	bsf	status, 5	;RP0=1, select bank1
  3986  02D0  1303               	bcf	status, 6	;RP1=0, select bank1
  3987  02D1  082F               	movf	(_ftoa$2281+1)^080h,w
  3988  02D2  1283               	bcf	status, 5	;RP0=0, select bank0
  3989  02D3  1303               	bcf	status, 6	;RP1=0, select bank0
  3990  02D4  00A7               	movwf	1+(?___ftmul)+03h
  3991  02D5  1683               	bsf	status, 5	;RP0=1, select bank1
  3992  02D6  1303               	bcf	status, 6	;RP1=0, select bank1
  3993  02D7  0830               	movf	(_ftoa$2281+2)^080h,w
  3994  02D8  1283               	bcf	status, 5	;RP0=0, select bank0
  3995  02D9  1303               	bcf	status, 6	;RP1=0, select bank0
  3996  02DA  00A8               	movwf	2+(?___ftmul)+03h
  3997  02DB  120A  158A  261F   	fcall	___ftmul
              120A  118A         
  3998  02E0  1283               	bcf	status, 5	;RP0=0, select bank0
  3999  02E1  1303               	bcf	status, 6	;RP1=0, select bank0
  4000  02E2  0823               	movf	(0+(?___ftmul)),w
  4001  02E3  1683               	bsf	status, 5	;RP0=1, select bank1
  4002  02E4  1303               	bcf	status, 6	;RP1=0, select bank1
  4003  02E5  00B5               	movwf	(ftoa@fpart)^080h
  4004  02E6  1283               	bcf	status, 5	;RP0=0, select bank0
  4005  02E7  1303               	bcf	status, 6	;RP1=0, select bank0
  4006  02E8  0824               	movf	(1+(?___ftmul)),w
  4007  02E9  1683               	bsf	status, 5	;RP0=1, select bank1
  4008  02EA  1303               	bcf	status, 6	;RP1=0, select bank1
  4009  02EB  00B6               	movwf	(ftoa@fpart+1)^080h
  4010  02EC  1283               	bcf	status, 5	;RP0=0, select bank0
  4011  02ED  1303               	bcf	status, 6	;RP1=0, select bank0
  4012  02EE  0825               	movf	(2+(?___ftmul)),w
  4013  02EF  1683               	bsf	status, 5	;RP0=1, select bank1
  4014  02F0  1303               	bcf	status, 6	;RP1=0, select bank1
  4015  02F1  00B7               	movwf	(ftoa@fpart+2)^080h
  4016                           	line	51
  4017                           	
  4018  02F2                     l5281:	
  4019                           ;IntToStr.h: 51: intToStr((int)fpart, res + i + 1, afterpoint);
  4020  02F2  0835               	movf	(ftoa@fpart)^080h,w
  4021  02F3  00F0               	movwf	(?___fttol)
  4022  02F4  0836               	movf	(ftoa@fpart+1)^080h,w
  4023  02F5  00F1               	movwf	(?___fttol+1)
  4024  02F6  0837               	movf	(ftoa@fpart+2)^080h,w
  4025  02F7  00F2               	movwf	(?___fttol+2)
  4026  02F8  120A  158A  2276   	fcall	___fttol
              120A  118A         
  4027  02FD  0871               	movf	1+(((0+(?___fttol)))),w
  4028  02FE  1283               	bcf	status, 5	;RP0=0, select bank0
  4029  02FF  1303               	bcf	status, 6	;RP1=0, select bank0
  4030  0300  01A1               	clrf	(?_intToStr+1)
  4031  0301  07A1               	addwf	(?_intToStr+1)
  4032  0302  0870               	movf	0+(((0+(?___fttol)))),w
  4033  0303  01A0               	clrf	(?_intToStr)
  4034  0304  07A0               	addwf	(?_intToStr)
  4035                           
  4036  0305  1683               	bsf	status, 5	;RP0=1, select bank1
  4037  0306  1303               	bcf	status, 6	;RP1=0, select bank1
  4038  0307  0833               	movf	(ftoa@i)^080h,w
  4039  0308  072B               	addwf	(ftoa@res)^080h,w
  4040  0309  3E01               	addlw	01h
  4041  030A  1283               	bcf	status, 5	;RP0=0, select bank0
  4042  030B  1303               	bcf	status, 6	;RP1=0, select bank0
  4043  030C  00EB               	movwf	(??_ftoa+0)+0
  4044  030D  086B               	movf	(??_ftoa+0)+0,w
  4045  030E  00A2               	movwf	(0+?_intToStr+02h)
  4046  030F  1683               	bsf	status, 5	;RP0=1, select bank1
  4047  0310  1303               	bcf	status, 6	;RP1=0, select bank1
  4048  0311  082D               	movf	(ftoa@afterpoint+1)^080h,w
  4049  0312  1283               	bcf	status, 5	;RP0=0, select bank0
  4050  0313  1303               	bcf	status, 6	;RP1=0, select bank0
  4051  0314  01A4               	clrf	1+(?_intToStr)+03h
  4052  0315  07A4               	addwf	1+(?_intToStr)+03h
  4053  0316  1683               	bsf	status, 5	;RP0=1, select bank1
  4054  0317  1303               	bcf	status, 6	;RP1=0, select bank1
  4055  0318  082C               	movf	(ftoa@afterpoint)^080h,w
  4056  0319  1283               	bcf	status, 5	;RP0=0, select bank0
  4057  031A  1303               	bcf	status, 6	;RP1=0, select bank0
  4058  031B  01A3               	clrf	0+(?_intToStr)+03h
  4059  031C  07A3               	addwf	0+(?_intToStr)+03h
  4060                           
  4061  031D  120A  158A  21EE   	fcall	_intToStr
              120A  118A         
  4062  0322  2B23               	goto	l844
  4063                           	line	52
  4064                           	
  4065  0323                     l843:	
  4066                           	line	53
  4067                           	
  4068  0323                     l844:	
  4069  0323  0008               	return
  4070                           	opt stack 0
  4071                           GLOBAL	__end_of_ftoa
  4072  0324                     	__end_of_ftoa:
  4073 ;; =============== function _ftoa ends ============
  4074                           
  4075                           	signat	_ftoa,12408
  4076                           	global	_pow
  4077                           psect	text892,local,class=CODE,delta=2
  4078                           global __ptext892
  4079  00C3                     __ptext892:
  4080                           
  4081 ;; *************** function _pow *****************
  4082 ;; Defined at:
  4083 ;;		line 6 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\pow.c"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;  x               3   68[BANK0 ] int 
  4086 ;;  y               3   71[BANK0 ] int 
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;  yi              4    4[BANK1 ] unsigned long 
  4089 ;;  sign            1    3[BANK1 ] unsigned char 
  4090 ;; Return value:  Size  Location     Type
  4091 ;;                  3   68[BANK0 ] unsigned char 
  4092 ;; Registers used:
  4093 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4094 ;; Tracked objects:
  4095 ;;		On entry : 0/0
  4096 ;;		On exit  : 0/0
  4097 ;;		Unchanged: 0/0
  4098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4099 ;;      Params:         0       6       0       0       0
  4100 ;;      Locals:         0       0       8       0       0
  4101 ;;      Temps:          0       1       0       0       0
  4102 ;;      Totals:         0       7       8       0       0
  4103 ;;Total ram usage:       15 bytes
  4104 ;; Hardware stack levels used:    1
  4105 ;; Hardware stack levels required when called:    4
  4106 ;; This function calls:
  4107 ;;		___ftge
  4108 ;;		___fttol
  4109 ;;		___lltoft
  4110 ;;		___ftneg
  4111 ;;		_log
  4112 ;;		___ftmul
  4113 ;;		_exp
  4114 ;; This function is called by:
  4115 ;;		_ftoa
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           psect	text892
  4119                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\pow.c"
  4120                           	line	6
  4121                           	global	__size_of_pow
  4122  0127                     	__size_of_pow	equ	__end_of_pow-_pow
  4123                           	
  4124  00C3                     _pow:	
  4125                           	opt	stack 0
  4126                           ; Regs used in _pow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4127                           	line	7
  4128                           	
  4129  00C3                     l5231:	
  4130  00C3  1683               	bsf	status, 5	;RP0=1, select bank1
  4131  00C4  1303               	bcf	status, 6	;RP1=0, select bank1
  4132  00C5  01A3               	clrf	(pow@sign)^080h
  4133                           	line	10
  4134                           	
  4135  00C6                     l5233:	
  4136  00C6  1283               	bcf	status, 5	;RP0=0, select bank0
  4137  00C7  1303               	bcf	status, 6	;RP1=0, select bank0
  4138  00C8  0866               	movf	(pow@x+2),w
  4139  00C9  0465               	iorwf	(pow@x+1),w
  4140  00CA  0464               	iorwf	(pow@x),w
  4141  00CB  1D03               	skipz
  4142  00CC  28CE               	goto	u4741
  4143  00CD  28CF               	goto	u4740
  4144  00CE                     u4741:
  4145  00CE  28F4               	goto	l5241
  4146  00CF                     u4740:
  4147                           	line	11
  4148                           	
  4149  00CF                     l5235:	
  4150  00CF  3000               	movlw	0x0
  4151  00D0  00F0               	movwf	(?___ftge)
  4152  00D1  3000               	movlw	0x0
  4153  00D2  00F1               	movwf	(?___ftge+1)
  4154  00D3  3000               	movlw	0x0
  4155  00D4  00F2               	movwf	(?___ftge+2)
  4156  00D5  0867               	movf	(pow@y),w
  4157  00D6  00F3               	movwf	0+(?___ftge)+03h
  4158  00D7  0868               	movf	(pow@y+1),w
  4159  00D8  00F4               	movwf	1+(?___ftge)+03h
  4160  00D9  0869               	movf	(pow@y+2),w
  4161  00DA  00F5               	movwf	2+(?___ftge)+03h
  4162  00DB  120A  158A  2103   	fcall	___ftge
              120A  118A         
  4163  00E0  1C03               	btfss	status,0
  4164  00E1  28E3               	goto	u4751
  4165  00E2  28E4               	goto	u4750
  4166  00E3                     u4751:
  4167  00E3  28EA               	goto	l1577
  4168  00E4                     u4750:
  4169                           	line	12
  4170                           	
  4171  00E4                     l5237:	
  4172  00E4  3021               	movlw	low(021h)
  4173  00E5  1283               	bcf	status, 5	;RP0=0, select bank0
  4174  00E6  1303               	bcf	status, 6	;RP1=0, select bank0
  4175  00E7  00EE               	movwf	(_errno)
  4176  00E8  3000               	movlw	high(021h)
  4177  00E9  00EF               	movwf	((_errno))+1
  4178                           	line	13
  4179                           	
  4180  00EA                     l1577:	
  4181                           	line	14
  4182  00EA  3000               	movlw	0x0
  4183  00EB  1283               	bcf	status, 5	;RP0=0, select bank0
  4184  00EC  1303               	bcf	status, 6	;RP1=0, select bank0
  4185  00ED  00E4               	movwf	(?_pow)
  4186  00EE  3000               	movlw	0x0
  4187  00EF  00E5               	movwf	(?_pow+1)
  4188  00F0  3000               	movlw	0x0
  4189  00F1  00E6               	movwf	(?_pow+2)
  4190  00F2  29E9               	goto	l1578
  4191                           	
  4192  00F3                     l5239:	
  4193  00F3  29E9               	goto	l1578
  4194                           	line	15
  4195                           	
  4196  00F4                     l1576:	
  4197                           	line	16
  4198                           	
  4199  00F4                     l5241:	
  4200  00F4  0869               	movf	(pow@y+2),w
  4201  00F5  0468               	iorwf	(pow@y+1),w
  4202  00F6  0467               	iorwf	(pow@y),w
  4203  00F7  1D03               	skipz
  4204  00F8  28FA               	goto	u4761
  4205  00F9  28FB               	goto	u4760
  4206  00FA                     u4761:
  4207  00FA  2903               	goto	l5247
  4208  00FB                     u4760:
  4209                           	line	17
  4210                           	
  4211  00FB                     l5243:	
  4212  00FB  3000               	movlw	0x0
  4213  00FC  00E4               	movwf	(?_pow)
  4214  00FD  3080               	movlw	0x80
  4215  00FE  00E5               	movwf	(?_pow+1)
  4216  00FF  303F               	movlw	0x3f
  4217  0100  00E6               	movwf	(?_pow+2)
  4218  0101  29E9               	goto	l1578
  4219                           	
  4220  0102                     l5245:	
  4221  0102  29E9               	goto	l1578
  4222                           	
  4223  0103                     l1579:	
  4224                           	line	18
  4225                           	
  4226  0103                     l5247:	
  4227  0103  0864               	movf	(pow@x),w
  4228  0104  00F0               	movwf	(?___ftge)
  4229  0105  0865               	movf	(pow@x+1),w
  4230  0106  00F1               	movwf	(?___ftge+1)
  4231  0107  0866               	movf	(pow@x+2),w
  4232  0108  00F2               	movwf	(?___ftge+2)
  4233  0109  3000               	movlw	0x0
  4234  010A  00F3               	movwf	0+(?___ftge)+03h
  4235  010B  3000               	movlw	0x0
  4236  010C  00F4               	movwf	1+(?___ftge)+03h
  4237  010D  3000               	movlw	0x0
  4238  010E  00F5               	movwf	2+(?___ftge)+03h
  4239  010F  120A  158A  2103   	fcall	___ftge
              120A  118A         
  4240  0114  1803               	btfsc	status,0
  4241  0115  2917               	goto	u4771
  4242  0116  2918               	goto	u4770
  4243  0117                     u4771:
  4244  0117  2979               	goto	l5259
  4245  0118                     u4770:
  4246                           	line	19
  4247                           	
  4248  0118                     l5249:	
  4249  0118  1283               	bcf	status, 5	;RP0=0, select bank0
  4250  0119  1303               	bcf	status, 6	;RP1=0, select bank0
  4251  011A  0867               	movf	(pow@y),w
  4252  011B  00F0               	movwf	(?___fttol)
  4253  011C  0868               	movf	(pow@y+1),w
  4254  011D  00F1               	movwf	(?___fttol+1)
  4255  011E  0869               	movf	(pow@y+2),w
  4256  011F  00F2               	movwf	(?___fttol+2)
  4257  0120  120A  158A  2276   	fcall	___fttol
              120A  118A         
  4258  0125  0873               	movf	(3+(?___fttol)),w
  4259  0126  1683               	bsf	status, 5	;RP0=1, select bank1
  4260  0127  1303               	bcf	status, 6	;RP1=0, select bank1
  4261  0128  00A7               	movwf	(pow@yi+3)^080h
  4262  0129  0872               	movf	(2+(?___fttol)),w
  4263  012A  00A6               	movwf	(pow@yi+2)^080h
  4264  012B  0871               	movf	(1+(?___fttol)),w
  4265  012C  00A5               	movwf	(pow@yi+1)^080h
  4266  012D  0870               	movf	(0+(?___fttol)),w
  4267  012E  00A4               	movwf	(pow@yi)^080h
  4268                           
  4269                           	line	20
  4270  012F  0827               	movf	(pow@yi+3)^080h,w
  4271  0130  00FB               	movwf	(?___lltoft+3)
  4272  0131  0826               	movf	(pow@yi+2)^080h,w
  4273  0132  00FA               	movwf	(?___lltoft+2)
  4274  0133  0825               	movf	(pow@yi+1)^080h,w
  4275  0134  00F9               	movwf	(?___lltoft+1)
  4276  0135  0824               	movf	(pow@yi)^080h,w
  4277  0136  00F8               	movwf	(?___lltoft)
  4278                           
  4279  0137  160A  118A  239A   	fcall	___lltoft
              120A  118A         
  4280  013C  1283               	bcf	status, 5	;RP0=0, select bank0
  4281  013D  1303               	bcf	status, 6	;RP1=0, select bank0
  4282  013E  0869               	movf	(pow@y+2),w
  4283  013F  067A               	xorwf	(2+(?___lltoft)),w
  4284  0140  1D03               	skipz
  4285  0141  2948               	goto	u4785
  4286  0142  0868               	movf	(pow@y+1),w
  4287  0143  0679               	xorwf	(1+(?___lltoft)),w
  4288  0144  1D03               	skipz
  4289  0145  2948               	goto	u4785
  4290  0146  0867               	movf	(pow@y),w
  4291  0147  0678               	xorwf	(0+(?___lltoft)),w
  4292  0148                     u4785:
  4293  0148  1903               	skipnz
  4294  0149  294B               	goto	u4781
  4295  014A  294C               	goto	u4780
  4296  014B                     u4781:
  4297  014B  2958               	goto	l5255
  4298  014C                     u4780:
  4299                           	line	21
  4300                           	
  4301  014C                     l5251:	
  4302  014C  3021               	movlw	low(021h)
  4303  014D  00EE               	movwf	(_errno)
  4304  014E  3000               	movlw	high(021h)
  4305  014F  00EF               	movwf	((_errno))+1
  4306                           	line	22
  4307  0150  3000               	movlw	0x0
  4308  0151  00E4               	movwf	(?_pow)
  4309  0152  3000               	movlw	0x0
  4310  0153  00E5               	movwf	(?_pow+1)
  4311  0154  3000               	movlw	0x0
  4312  0155  00E6               	movwf	(?_pow+2)
  4313  0156  29E9               	goto	l1578
  4314                           	
  4315  0157                     l5253:	
  4316  0157  29E9               	goto	l1578
  4317                           	line	23
  4318                           	
  4319  0158                     l1581:	
  4320                           	line	24
  4321                           	
  4322  0158                     l5255:	
  4323  0158  1683               	bsf	status, 5	;RP0=1, select bank1
  4324  0159  1303               	bcf	status, 6	;RP1=0, select bank1
  4325  015A  0824               	movf	(pow@yi)^080h,w
  4326  015B  3901               	andlw	01h
  4327  015C  1283               	bcf	status, 5	;RP0=0, select bank0
  4328  015D  1303               	bcf	status, 6	;RP1=0, select bank0
  4329  015E  00EA               	movwf	(??_pow+0)+0
  4330  015F  086A               	movf	(??_pow+0)+0,w
  4331  0160  1683               	bsf	status, 5	;RP0=1, select bank1
  4332  0161  1303               	bcf	status, 6	;RP1=0, select bank1
  4333  0162  00A3               	movwf	(pow@sign)^080h
  4334                           	line	25
  4335                           	
  4336  0163                     l5257:	
  4337  0163  1283               	bcf	status, 5	;RP0=0, select bank0
  4338  0164  1303               	bcf	status, 6	;RP1=0, select bank0
  4339  0165  0864               	movf	(pow@x),w
  4340  0166  00F8               	movwf	(?___ftneg)
  4341  0167  0865               	movf	(pow@x+1),w
  4342  0168  00F9               	movwf	(?___ftneg+1)
  4343  0169  0866               	movf	(pow@x+2),w
  4344  016A  00FA               	movwf	(?___ftneg+2)
  4345  016B  160A  118A  224B   	fcall	___ftneg
              120A  118A         
  4346  0170  0878               	movf	(0+(?___ftneg)),w
  4347  0171  1283               	bcf	status, 5	;RP0=0, select bank0
  4348  0172  1303               	bcf	status, 6	;RP1=0, select bank0
  4349  0173  00E4               	movwf	(pow@x)
  4350  0174  0879               	movf	(1+(?___ftneg)),w
  4351  0175  00E5               	movwf	(pow@x+1)
  4352  0176  087A               	movf	(2+(?___ftneg)),w
  4353  0177  00E6               	movwf	(pow@x+2)
  4354  0178  2979               	goto	l5259
  4355                           	line	26
  4356                           	
  4357  0179                     l1580:	
  4358                           	line	27
  4359                           	
  4360  0179                     l5259:	
  4361  0179  1283               	bcf	status, 5	;RP0=0, select bank0
  4362  017A  1303               	bcf	status, 6	;RP1=0, select bank0
  4363  017B  0864               	movf	(pow@x),w
  4364  017C  00D4               	movwf	(?_log)
  4365  017D  0865               	movf	(pow@x+1),w
  4366  017E  00D5               	movwf	(?_log+1)
  4367  017F  0866               	movf	(pow@x+2),w
  4368  0180  00D6               	movwf	(?_log+2)
  4369  0181  120A  158A  254C   	fcall	_log
              120A  118A         
  4370  0186  1283               	bcf	status, 5	;RP0=0, select bank0
  4371  0187  1303               	bcf	status, 6	;RP1=0, select bank0
  4372  0188  0854               	movf	(0+(?_log)),w
  4373  0189  1683               	bsf	status, 5	;RP0=1, select bank1
  4374  018A  1303               	bcf	status, 6	;RP1=0, select bank1
  4375  018B  00A0               	movwf	(_pow$2282)^080h
  4376  018C  1283               	bcf	status, 5	;RP0=0, select bank0
  4377  018D  1303               	bcf	status, 6	;RP1=0, select bank0
  4378  018E  0855               	movf	(1+(?_log)),w
  4379  018F  1683               	bsf	status, 5	;RP0=1, select bank1
  4380  0190  1303               	bcf	status, 6	;RP1=0, select bank1
  4381  0191  00A1               	movwf	(_pow$2282+1)^080h
  4382  0192  1283               	bcf	status, 5	;RP0=0, select bank0
  4383  0193  1303               	bcf	status, 6	;RP1=0, select bank0
  4384  0194  0856               	movf	(2+(?_log)),w
  4385  0195  1683               	bsf	status, 5	;RP0=1, select bank1
  4386  0196  1303               	bcf	status, 6	;RP1=0, select bank1
  4387  0197  00A2               	movwf	(_pow$2282+2)^080h
  4388                           	
  4389  0198                     l5261:	
  4390  0198  1283               	bcf	status, 5	;RP0=0, select bank0
  4391  0199  1303               	bcf	status, 6	;RP1=0, select bank0
  4392  019A  0867               	movf	(pow@y),w
  4393  019B  00A3               	movwf	(?___ftmul)
  4394  019C  0868               	movf	(pow@y+1),w
  4395  019D  00A4               	movwf	(?___ftmul+1)
  4396  019E  0869               	movf	(pow@y+2),w
  4397  019F  00A5               	movwf	(?___ftmul+2)
  4398  01A0  1683               	bsf	status, 5	;RP0=1, select bank1
  4399  01A1  1303               	bcf	status, 6	;RP1=0, select bank1
  4400  01A2  0820               	movf	(_pow$2282)^080h,w
  4401  01A3  1283               	bcf	status, 5	;RP0=0, select bank0
  4402  01A4  1303               	bcf	status, 6	;RP1=0, select bank0
  4403  01A5  00A6               	movwf	0+(?___ftmul)+03h
  4404  01A6  1683               	bsf	status, 5	;RP0=1, select bank1
  4405  01A7  1303               	bcf	status, 6	;RP1=0, select bank1
  4406  01A8  0821               	movf	(_pow$2282+1)^080h,w
  4407  01A9  1283               	bcf	status, 5	;RP0=0, select bank0
  4408  01AA  1303               	bcf	status, 6	;RP1=0, select bank0
  4409  01AB  00A7               	movwf	1+(?___ftmul)+03h
  4410  01AC  1683               	bsf	status, 5	;RP0=1, select bank1
  4411  01AD  1303               	bcf	status, 6	;RP1=0, select bank1
  4412  01AE  0822               	movf	(_pow$2282+2)^080h,w
  4413  01AF  1283               	bcf	status, 5	;RP0=0, select bank0
  4414  01B0  1303               	bcf	status, 6	;RP1=0, select bank0
  4415  01B1  00A8               	movwf	2+(?___ftmul)+03h
  4416  01B2  120A  158A  261F   	fcall	___ftmul
              120A  118A         
  4417  01B7  1283               	bcf	status, 5	;RP0=0, select bank0
  4418  01B8  1303               	bcf	status, 6	;RP1=0, select bank0
  4419  01B9  0823               	movf	(0+(?___ftmul)),w
  4420  01BA  00DA               	movwf	(?_exp)
  4421  01BB  0824               	movf	(1+(?___ftmul)),w
  4422  01BC  00DB               	movwf	(?_exp+1)
  4423  01BD  0825               	movf	(2+(?___ftmul)),w
  4424  01BE  00DC               	movwf	(?_exp+2)
  4425  01BF  120A  118A  246A   	fcall	_exp
              120A  118A         
  4426  01C4  1283               	bcf	status, 5	;RP0=0, select bank0
  4427  01C5  1303               	bcf	status, 6	;RP1=0, select bank0
  4428  01C6  085A               	movf	(0+(?_exp)),w
  4429  01C7  00E4               	movwf	(pow@x)
  4430  01C8  085B               	movf	(1+(?_exp)),w
  4431  01C9  00E5               	movwf	(pow@x+1)
  4432  01CA  085C               	movf	(2+(?_exp)),w
  4433  01CB  00E6               	movwf	(pow@x+2)
  4434                           	line	28
  4435                           	
  4436  01CC                     l5263:	
  4437  01CC  1683               	bsf	status, 5	;RP0=1, select bank1
  4438  01CD  1303               	bcf	status, 6	;RP1=0, select bank1
  4439  01CE  0823               	movf	(pow@sign)^080h,w
  4440  01CF  1D03               	skipz
  4441  01D0  29D2               	goto	u4790
  4442  01D1  29E9               	goto	l1582
  4443  01D2                     u4790:
  4444                           	line	29
  4445                           	
  4446  01D2                     l5265:	
  4447  01D2  1283               	bcf	status, 5	;RP0=0, select bank0
  4448  01D3  1303               	bcf	status, 6	;RP1=0, select bank0
  4449  01D4  0864               	movf	(pow@x),w
  4450  01D5  00F8               	movwf	(?___ftneg)
  4451  01D6  0865               	movf	(pow@x+1),w
  4452  01D7  00F9               	movwf	(?___ftneg+1)
  4453  01D8  0866               	movf	(pow@x+2),w
  4454  01D9  00FA               	movwf	(?___ftneg+2)
  4455  01DA  160A  118A  224B   	fcall	___ftneg
              120A  118A         
  4456  01DF  0878               	movf	(0+(?___ftneg)),w
  4457  01E0  1283               	bcf	status, 5	;RP0=0, select bank0
  4458  01E1  1303               	bcf	status, 6	;RP1=0, select bank0
  4459  01E2  00E4               	movwf	(?_pow)
  4460  01E3  0879               	movf	(1+(?___ftneg)),w
  4461  01E4  00E5               	movwf	(?_pow+1)
  4462  01E5  087A               	movf	(2+(?___ftneg)),w
  4463  01E6  00E6               	movwf	(?_pow+2)
  4464  01E7  29E9               	goto	l1578
  4465                           	
  4466  01E8                     l5267:	
  4467  01E8  29E9               	goto	l1578
  4468                           	
  4469  01E9                     l1582:	
  4470                           	line	30
  4471                           	line	31
  4472                           	
  4473  01E9                     l1578:	
  4474  01E9  0008               	return
  4475                           	opt stack 0
  4476                           GLOBAL	__end_of_pow
  4477  01EA                     	__end_of_pow:
  4478 ;; =============== function _pow ends ============
  4479                           
  4480                           	signat	_pow,8315
  4481                           	global	_exp
  4482                           psect	text893,local,class=CODE,delta=2
  4483                           global __ptext893
  4484  046A                     __ptext893:
  4485                           
  4486 ;; *************** function _exp *****************
  4487 ;; Defined at:
  4488 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\exp.c"
  4489 ;; Parameters:    Size  Location     Type
  4490 ;;  x               3   58[BANK0 ] unsigned char 
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;  exp             2   65[BANK0 ] int 
  4493 ;;  sign            1   67[BANK0 ] unsigned char 
  4494 ;; Return value:  Size  Location     Type
  4495 ;;                  3   58[BANK0 ] unsigned char 
  4496 ;; Registers used:
  4497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4498 ;; Tracked objects:
  4499 ;;		On entry : 0/0
  4500 ;;		On exit  : 0/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4503 ;;      Params:         0       3       0       0       0
  4504 ;;      Locals:         0       6       0       0       0
  4505 ;;      Temps:          0       1       0       0       0
  4506 ;;      Totals:         0      10       0       0       0
  4507 ;;Total ram usage:       10 bytes
  4508 ;; Hardware stack levels used:    1
  4509 ;; Hardware stack levels required when called:    3
  4510 ;; This function calls:
  4511 ;;		___ftge
  4512 ;;		___ftneg
  4513 ;;		___ftmul
  4514 ;;		_floor
  4515 ;;		___fttol
  4516 ;;		___awtoft
  4517 ;;		___ftsub
  4518 ;;		_eval_poly
  4519 ;;		_ldexp
  4520 ;;		___ftdiv
  4521 ;; This function is called by:
  4522 ;;		_pow
  4523 ;; This function uses a non-reentrant model
  4524 ;;
  4525                           psect	text893
  4526                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\exp.c"
  4527                           	line	13
  4528                           	global	__size_of_exp
  4529  0167                     	__size_of_exp	equ	__end_of_exp-_exp
  4530                           	
  4531  046A                     _exp:	
  4532                           	opt	stack 0
  4533                           ; Regs used in _exp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4534                           	line	31
  4535                           	
  4536  046A                     l5179:	
  4537  046A  1283               	bcf	status, 5	;RP0=0, select bank0
  4538  046B  1303               	bcf	status, 6	;RP1=0, select bank0
  4539  046C  085C               	movf	(exp@x+2),w
  4540  046D  045B               	iorwf	(exp@x+1),w
  4541  046E  045A               	iorwf	(exp@x),w
  4542  046F  1D03               	skipz
  4543  0470  2C72               	goto	u4681
  4544  0471  2C73               	goto	u4680
  4545  0472                     u4681:
  4546  0472  2C7B               	goto	l5185
  4547  0473                     u4680:
  4548                           	line	32
  4549                           	
  4550  0473                     l5181:	
  4551  0473  3000               	movlw	0x0
  4552  0474  00DA               	movwf	(?_exp)
  4553  0475  3080               	movlw	0x80
  4554  0476  00DB               	movwf	(?_exp+1)
  4555  0477  303F               	movlw	0x3f
  4556  0478  00DC               	movwf	(?_exp+2)
  4557  0479  2DD0               	goto	l1944
  4558                           	
  4559  047A                     l5183:	
  4560  047A  2DD0               	goto	l1944
  4561                           	
  4562  047B                     l1943:	
  4563                           	line	34
  4564                           	
  4565  047B                     l5185:	
  4566  047B  3072               	movlw	0x72
  4567  047C  00F0               	movwf	(?___ftge)
  4568  047D  3031               	movlw	0x31
  4569  047E  00F1               	movwf	(?___ftge+1)
  4570  047F  3044               	movlw	0x44
  4571  0480  00F2               	movwf	(?___ftge+2)
  4572  0481  085A               	movf	(exp@x),w
  4573  0482  00F3               	movwf	0+(?___ftge)+03h
  4574  0483  085B               	movf	(exp@x+1),w
  4575  0484  00F4               	movwf	1+(?___ftge)+03h
  4576  0485  085C               	movf	(exp@x+2),w
  4577  0486  00F5               	movwf	2+(?___ftge)+03h
  4578  0487  120A  158A  2103   	fcall	___ftge
              120A  118A         
  4579  048C  1803               	btfsc	status,0
  4580  048D  2C8F               	goto	u4691
  4581  048E  2C90               	goto	u4690
  4582  048F                     u4691:
  4583  048F  2CA7               	goto	l5195
  4584  0490                     u4690:
  4585                           	line	35
  4586                           	
  4587  0490                     l5187:	
  4588  0490  3022               	movlw	low(022h)
  4589  0491  1283               	bcf	status, 5	;RP0=0, select bank0
  4590  0492  1303               	bcf	status, 6	;RP1=0, select bank0
  4591  0493  00EE               	movwf	(_errno)
  4592  0494  3000               	movlw	high(022h)
  4593  0495  00EF               	movwf	((_errno))+1
  4594                           	line	36
  4595  0496  2C9E               	goto	l5191
  4596                           	
  4597  0497                     l5189:	
  4598  0497  3000               	movlw	0x0
  4599  0498  00DA               	movwf	(?_exp)
  4600  0499  3080               	movlw	0x80
  4601  049A  00DB               	movwf	(?_exp+1)
  4602  049B  307F               	movlw	0x7f
  4603  049C  00DC               	movwf	(?_exp+2)
  4604  049D  2DD0               	goto	l1944
  4605                           	
  4606  049E                     l1947:	
  4607                           	
  4608  049E                     l5191:	
  4609  049E  30FF               	movlw	0xff
  4610  049F  00DA               	movwf	(?_exp)
  4611  04A0  307F               	movlw	0x7f
  4612  04A1  00DB               	movwf	(?_exp+1)
  4613  04A2  307F               	movlw	0x7f
  4614  04A3  00DC               	movwf	(?_exp+2)
  4615  04A4  2DD0               	goto	l1944
  4616                           	
  4617  04A5                     l1949:	
  4618  04A5  2DD0               	goto	l1944
  4619                           	
  4620  04A6                     l5193:	
  4621  04A6  2DD0               	goto	l1944
  4622                           	line	37
  4623                           	
  4624  04A7                     l1945:	
  4625                           	line	38
  4626                           	
  4627  04A7                     l5195:	
  4628  04A7  1283               	bcf	status, 5	;RP0=0, select bank0
  4629  04A8  1303               	bcf	status, 6	;RP1=0, select bank0
  4630  04A9  085A               	movf	(exp@x),w
  4631  04AA  00F0               	movwf	(?___ftge)
  4632  04AB  085B               	movf	(exp@x+1),w
  4633  04AC  00F1               	movwf	(?___ftge+1)
  4634  04AD  085C               	movf	(exp@x+2),w
  4635  04AE  00F2               	movwf	(?___ftge+2)
  4636  04AF  3049               	movlw	0x49
  4637  04B0  00F3               	movwf	0+(?___ftge)+03h
  4638  04B1  303A               	movlw	0x3a
  4639  04B2  00F4               	movwf	1+(?___ftge)+03h
  4640  04B3  30C4               	movlw	0xc4
  4641  04B4  00F5               	movwf	2+(?___ftge)+03h
  4642  04B5  120A  158A  2103   	fcall	___ftge
              120A  118A         
  4643  04BA  1803               	btfsc	status,0
  4644  04BB  2CBD               	goto	u4701
  4645  04BC  2CBE               	goto	u4700
  4646  04BD                     u4701:
  4647  04BD  2CCC               	goto	l5201
  4648  04BE                     u4700:
  4649                           	line	39
  4650                           	
  4651  04BE                     l5197:	
  4652  04BE  3022               	movlw	low(022h)
  4653  04BF  1283               	bcf	status, 5	;RP0=0, select bank0
  4654  04C0  1303               	bcf	status, 6	;RP1=0, select bank0
  4655  04C1  00EE               	movwf	(_errno)
  4656  04C2  3000               	movlw	high(022h)
  4657  04C3  00EF               	movwf	((_errno))+1
  4658                           	line	40
  4659  04C4  3000               	movlw	0x0
  4660  04C5  00DA               	movwf	(?_exp)
  4661  04C6  3000               	movlw	0x0
  4662  04C7  00DB               	movwf	(?_exp+1)
  4663  04C8  3000               	movlw	0x0
  4664  04C9  00DC               	movwf	(?_exp+2)
  4665  04CA  2DD0               	goto	l1944
  4666                           	
  4667  04CB                     l5199:	
  4668  04CB  2DD0               	goto	l1944
  4669                           	line	41
  4670                           	
  4671  04CC                     l1950:	
  4672                           	line	43
  4673                           	
  4674  04CC                     l5201:	
  4675  04CC  1283               	bcf	status, 5	;RP0=0, select bank0
  4676  04CD  1303               	bcf	status, 6	;RP1=0, select bank0
  4677  04CE  085A               	movf	(exp@x),w
  4678  04CF  00F0               	movwf	(?___ftge)
  4679  04D0  085B               	movf	(exp@x+1),w
  4680  04D1  00F1               	movwf	(?___ftge+1)
  4681  04D2  085C               	movf	(exp@x+2),w
  4682  04D3  00F2               	movwf	(?___ftge+2)
  4683  04D4  3000               	movlw	0x0
  4684  04D5  00F3               	movwf	0+(?___ftge)+03h
  4685  04D6  3000               	movlw	0x0
  4686  04D7  00F4               	movwf	1+(?___ftge)+03h
  4687  04D8  3000               	movlw	0x0
  4688  04D9  00F5               	movwf	2+(?___ftge)+03h
  4689  04DA  120A  158A  2103   	fcall	___ftge
              120A  118A         
  4690  04DF  3000               	movlw	0
  4691  04E0  1C03               	btfss	status,0
  4692  04E1  3001               	movlw	1
  4693  04E2  1283               	bcf	status, 5	;RP0=0, select bank0
  4694  04E3  1303               	bcf	status, 6	;RP1=0, select bank0
  4695  04E4  00DD               	movwf	(??_exp+0)+0
  4696  04E5  085D               	movf	(??_exp+0)+0,w
  4697  04E6  00E3               	movwf	(exp@sign)
  4698                           	line	44
  4699                           	
  4700  04E7                     l5203:	
  4701  04E7  0863               	movf	(exp@sign),w
  4702  04E8  1D03               	skipz
  4703  04E9  2CEB               	goto	u4710
  4704  04EA  2CFF               	goto	l5207
  4705  04EB                     u4710:
  4706                           	line	45
  4707                           	
  4708  04EB                     l5205:	
  4709  04EB  085A               	movf	(exp@x),w
  4710  04EC  00F8               	movwf	(?___ftneg)
  4711  04ED  085B               	movf	(exp@x+1),w
  4712  04EE  00F9               	movwf	(?___ftneg+1)
  4713  04EF  085C               	movf	(exp@x+2),w
  4714  04F0  00FA               	movwf	(?___ftneg+2)
  4715  04F1  160A  118A  224B   	fcall	___ftneg
              120A  118A         
  4716  04F6  0878               	movf	(0+(?___ftneg)),w
  4717  04F7  1283               	bcf	status, 5	;RP0=0, select bank0
  4718  04F8  1303               	bcf	status, 6	;RP1=0, select bank0
  4719  04F9  00DA               	movwf	(exp@x)
  4720  04FA  0879               	movf	(1+(?___ftneg)),w
  4721  04FB  00DB               	movwf	(exp@x+1)
  4722  04FC  087A               	movf	(2+(?___ftneg)),w
  4723  04FD  00DC               	movwf	(exp@x+2)
  4724  04FE  2CFF               	goto	l5207
  4725                           	
  4726  04FF                     l1951:	
  4727                           	line	46
  4728                           	
  4729  04FF                     l5207:	
  4730  04FF  30AA               	movlw	0xaa
  4731  0500  00A3               	movwf	(?___ftmul)
  4732  0501  30B8               	movlw	0xb8
  4733  0502  00A4               	movwf	(?___ftmul+1)
  4734  0503  303F               	movlw	0x3f
  4735  0504  00A5               	movwf	(?___ftmul+2)
  4736  0505  085A               	movf	(exp@x),w
  4737  0506  00A6               	movwf	0+(?___ftmul)+03h
  4738  0507  085B               	movf	(exp@x+1),w
  4739  0508  00A7               	movwf	1+(?___ftmul)+03h
  4740  0509  085C               	movf	(exp@x+2),w
  4741  050A  00A8               	movwf	2+(?___ftmul)+03h
  4742  050B  120A  158A  261F   	fcall	___ftmul
              120A  118A         
  4743  0510  1283               	bcf	status, 5	;RP0=0, select bank0
  4744  0511  1303               	bcf	status, 6	;RP1=0, select bank0
  4745  0512  0823               	movf	(0+(?___ftmul)),w
  4746  0513  00DA               	movwf	(exp@x)
  4747  0514  0824               	movf	(1+(?___ftmul)),w
  4748  0515  00DB               	movwf	(exp@x+1)
  4749  0516  0825               	movf	(2+(?___ftmul)),w
  4750  0517  00DC               	movwf	(exp@x+2)
  4751                           	line	47
  4752                           	
  4753  0518                     l5209:	
  4754  0518  085A               	movf	(exp@x),w
  4755  0519  00C0               	movwf	(?_floor)
  4756  051A  085B               	movf	(exp@x+1),w
  4757  051B  00C1               	movwf	(?_floor+1)
  4758  051C  085C               	movf	(exp@x+2),w
  4759  051D  00C2               	movwf	(?_floor+2)
  4760  051E  120A  118A  201B   	fcall	_floor
              120A  118A         
  4761  0523  1283               	bcf	status, 5	;RP0=0, select bank0
  4762  0524  1303               	bcf	status, 6	;RP1=0, select bank0
  4763  0525  0840               	movf	(0+(?_floor)),w
  4764  0526  00F0               	movwf	(?___fttol)
  4765  0527  0841               	movf	(1+(?_floor)),w
  4766  0528  00F1               	movwf	(?___fttol+1)
  4767  0529  0842               	movf	(2+(?_floor)),w
  4768  052A  00F2               	movwf	(?___fttol+2)
  4769  052B  120A  158A  2276   	fcall	___fttol
              120A  118A         
  4770  0530  0871               	movf	1+(((0+(?___fttol)))),w
  4771  0531  1283               	bcf	status, 5	;RP0=0, select bank0
  4772  0532  1303               	bcf	status, 6	;RP1=0, select bank0
  4773  0533  01E2               	clrf	(exp@exp+1)
  4774  0534  07E2               	addwf	(exp@exp+1)
  4775  0535  0870               	movf	0+(((0+(?___fttol)))),w
  4776  0536  01E1               	clrf	(exp@exp)
  4777  0537  07E1               	addwf	(exp@exp)
  4778                           
  4779                           	line	48
  4780                           	
  4781  0538                     l5211:	
  4782  0538  0862               	movf	(exp@exp+1),w
  4783  0539  01FC               	clrf	(?___awtoft+1)
  4784  053A  07FC               	addwf	(?___awtoft+1)
  4785  053B  0861               	movf	(exp@exp),w
  4786  053C  01FB               	clrf	(?___awtoft)
  4787  053D  07FB               	addwf	(?___awtoft)
  4788                           
  4789  053E  160A  118A  2311   	fcall	___awtoft
              120A  118A         
  4790  0543  087B               	movf	(0+(?___awtoft)),w
  4791  0544  1283               	bcf	status, 5	;RP0=0, select bank0
  4792  0545  1303               	bcf	status, 6	;RP1=0, select bank0
  4793  0546  00C0               	movwf	(?___ftsub)
  4794  0547  087C               	movf	(1+(?___awtoft)),w
  4795  0548  00C1               	movwf	(?___ftsub+1)
  4796  0549  087D               	movf	(2+(?___awtoft)),w
  4797  054A  00C2               	movwf	(?___ftsub+2)
  4798  054B  085A               	movf	(exp@x),w
  4799  054C  00C3               	movwf	0+(?___ftsub)+03h
  4800  054D  085B               	movf	(exp@x+1),w
  4801  054E  00C4               	movwf	1+(?___ftsub)+03h
  4802  054F  085C               	movf	(exp@x+2),w
  4803  0550  00C5               	movwf	2+(?___ftsub)+03h
  4804  0551  160A  118A  22F2   	fcall	___ftsub
              120A  118A         
  4805  0556  1283               	bcf	status, 5	;RP0=0, select bank0
  4806  0557  1303               	bcf	status, 6	;RP1=0, select bank0
  4807  0558  0840               	movf	(0+(?___ftsub)),w
  4808  0559  00DA               	movwf	(exp@x)
  4809  055A  0841               	movf	(1+(?___ftsub)),w
  4810  055B  00DB               	movwf	(exp@x+1)
  4811  055C  0842               	movf	(2+(?___ftsub)),w
  4812  055D  00DC               	movwf	(exp@x+2)
  4813                           	line	49
  4814                           	
  4815  055E                     l5213:	
  4816  055E  085A               	movf	(exp@x),w
  4817  055F  00CA               	movwf	(?_eval_poly)
  4818  0560  085B               	movf	(exp@x+1),w
  4819  0561  00CB               	movwf	(?_eval_poly+1)
  4820  0562  085C               	movf	(exp@x+2),w
  4821  0563  00CC               	movwf	(?_eval_poly+2)
  4822  0564  3001               	movlw	((exp@coeff-__stringbase))&0ffh
  4823  0565  00DD               	movwf	(??_exp+0)+0
  4824  0566  085D               	movf	(??_exp+0)+0,w
  4825  0567  00CD               	movwf	(0+?_eval_poly+03h)
  4826  0568  3009               	movlw	low(09h)
  4827  0569  00CE               	movwf	0+(?_eval_poly)+04h
  4828  056A  3000               	movlw	high(09h)
  4829  056B  00CF               	movwf	(0+(?_eval_poly)+04h)+1
  4830  056C  120A  158A  216F   	fcall	_eval_poly
              120A  118A         
  4831  0571  1283               	bcf	status, 5	;RP0=0, select bank0
  4832  0572  1303               	bcf	status, 6	;RP1=0, select bank0
  4833  0573  084A               	movf	(0+(?_eval_poly)),w
  4834  0574  00C0               	movwf	(?_ldexp)
  4835  0575  084B               	movf	(1+(?_eval_poly)),w
  4836  0576  00C1               	movwf	(?_ldexp+1)
  4837  0577  084C               	movf	(2+(?_eval_poly)),w
  4838  0578  00C2               	movwf	(?_ldexp+2)
  4839  0579  0862               	movf	(exp@exp+1),w
  4840  057A  01C4               	clrf	1+(?_ldexp)+03h
  4841  057B  07C4               	addwf	1+(?_ldexp)+03h
  4842  057C  0861               	movf	(exp@exp),w
  4843  057D  01C3               	clrf	0+(?_ldexp)+03h
  4844  057E  07C3               	addwf	0+(?_ldexp)+03h
  4845                           
  4846  057F  120A  158A  23C2   	fcall	_ldexp
              120A  118A         
  4847  0584  1283               	bcf	status, 5	;RP0=0, select bank0
  4848  0585  1303               	bcf	status, 6	;RP1=0, select bank0
  4849  0586  0840               	movf	(0+(?_ldexp)),w
  4850  0587  00DA               	movwf	(exp@x)
  4851  0588  0841               	movf	(1+(?_ldexp)),w
  4852  0589  00DB               	movwf	(exp@x+1)
  4853  058A  0842               	movf	(2+(?_ldexp)),w
  4854  058B  00DC               	movwf	(exp@x+2)
  4855                           	line	50
  4856                           	
  4857  058C                     l5215:	
  4858  058C  0863               	movf	(exp@sign),w
  4859  058D  1D03               	skipz
  4860  058E  2D90               	goto	u4720
  4861  058F  2DD0               	goto	l1952
  4862  0590                     u4720:
  4863  0590  2D99               	goto	l5221
  4864                           	line	52
  4865                           	
  4866  0591                     l5217:	
  4867  0591  2D99               	goto	l5221
  4868                           	
  4869  0592                     l5219:	
  4870  0592  3000               	movlw	0x0
  4871  0593  00DE               	movwf	(_exp$1929)
  4872  0594  3080               	movlw	0x80
  4873  0595  00DF               	movwf	(_exp$1929+1)
  4874  0596  307F               	movlw	0x7f
  4875  0597  00E0               	movwf	(_exp$1929+2)
  4876  0598  2D9F               	goto	l1957
  4877                           	
  4878  0599                     l1955:	
  4879                           	
  4880  0599                     l5221:	
  4881  0599  30FF               	movlw	0xff
  4882  059A  00DE               	movwf	(_exp$1929)
  4883  059B  307F               	movlw	0x7f
  4884  059C  00DF               	movwf	(_exp$1929+1)
  4885  059D  307F               	movlw	0x7f
  4886  059E  00E0               	movwf	(_exp$1929+2)
  4887                           	
  4888  059F                     l1957:	
  4889  059F  085C               	movf	(exp@x+2),w
  4890  05A0  0660               	xorwf	(_exp$1929+2),w
  4891  05A1  1D03               	skipz
  4892  05A2  2DA9               	goto	u4735
  4893  05A3  085B               	movf	(exp@x+1),w
  4894  05A4  065F               	xorwf	(_exp$1929+1),w
  4895  05A5  1D03               	skipz
  4896  05A6  2DA9               	goto	u4735
  4897  05A7  085A               	movf	(exp@x),w
  4898  05A8  065E               	xorwf	(_exp$1929),w
  4899  05A9                     u4735:
  4900  05A9  1D03               	skipz
  4901  05AA  2DAC               	goto	u4731
  4902  05AB  2DAD               	goto	u4730
  4903  05AC                     u4731:
  4904  05AC  2DB5               	goto	l5227
  4905  05AD                     u4730:
  4906                           	line	53
  4907                           	
  4908  05AD                     l5223:	
  4909  05AD  3000               	movlw	0x0
  4910  05AE  00DA               	movwf	(?_exp)
  4911  05AF  3000               	movlw	0x0
  4912  05B0  00DB               	movwf	(?_exp+1)
  4913  05B1  3000               	movlw	0x0
  4914  05B2  00DC               	movwf	(?_exp+2)
  4915  05B3  2DD0               	goto	l1944
  4916                           	
  4917  05B4                     l5225:	
  4918  05B4  2DD0               	goto	l1944
  4919                           	
  4920  05B5                     l1953:	
  4921                           	line	54
  4922                           	
  4923  05B5                     l5227:	
  4924  05B5  085A               	movf	(exp@x),w
  4925  05B6  00F8               	movwf	(?___ftdiv)
  4926  05B7  085B               	movf	(exp@x+1),w
  4927  05B8  00F9               	movwf	(?___ftdiv+1)
  4928  05B9  085C               	movf	(exp@x+2),w
  4929  05BA  00FA               	movwf	(?___ftdiv+2)
  4930  05BB  3000               	movlw	0x0
  4931  05BC  00FB               	movwf	0+(?___ftdiv)+03h
  4932  05BD  3080               	movlw	0x80
  4933  05BE  00FC               	movwf	1+(?___ftdiv)+03h
  4934  05BF  303F               	movlw	0x3f
  4935  05C0  00FD               	movwf	2+(?___ftdiv)+03h
  4936  05C1  120A  158A  2486   	fcall	___ftdiv
              120A  118A         
  4937  05C6  0878               	movf	(0+(?___ftdiv)),w
  4938  05C7  1283               	bcf	status, 5	;RP0=0, select bank0
  4939  05C8  1303               	bcf	status, 6	;RP1=0, select bank0
  4940  05C9  00DA               	movwf	(?_exp)
  4941  05CA  0879               	movf	(1+(?___ftdiv)),w
  4942  05CB  00DB               	movwf	(?_exp+1)
  4943  05CC  087A               	movf	(2+(?___ftdiv)),w
  4944  05CD  00DC               	movwf	(?_exp+2)
  4945  05CE  2DD0               	goto	l1944
  4946                           	
  4947  05CF                     l5229:	
  4948  05CF  2DD0               	goto	l1944
  4949                           	line	55
  4950                           	
  4951  05D0                     l1952:	
  4952                           	line	56
  4953                           	line	57
  4954                           	
  4955  05D0                     l1944:	
  4956  05D0  0008               	return
  4957                           	opt stack 0
  4958                           GLOBAL	__end_of_exp
  4959  05D1                     	__end_of_exp:
  4960 ;; =============== function _exp ends ============
  4961                           
  4962                           	signat	_exp,4219
  4963                           	global	_log
  4964                           psect	text894,local,class=CODE,delta=2
  4965                           global __ptext894
  4966  0D4C                     __ptext894:
  4967                           
  4968 ;; *************** function _log *****************
  4969 ;; Defined at:
  4970 ;;		line 6 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\log.c"
  4971 ;; Parameters:    Size  Location     Type
  4972 ;;  x               3   52[BANK0 ] unsigned char 
  4973 ;; Auto vars:     Size  Location     Type
  4974 ;;  exp             2   56[BANK0 ] int 
  4975 ;; Return value:  Size  Location     Type
  4976 ;;                  3   52[BANK0 ] int 
  4977 ;; Registers used:
  4978 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4979 ;; Tracked objects:
  4980 ;;		On entry : 0/0
  4981 ;;		On exit  : 0/0
  4982 ;;		Unchanged: 0/0
  4983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4984 ;;      Params:         0       3       0       0       0
  4985 ;;      Locals:         0       2       0       0       0
  4986 ;;      Temps:          0       1       0       0       0
  4987 ;;      Totals:         0       6       0       0       0
  4988 ;;Total ram usage:        6 bytes
  4989 ;; Hardware stack levels used:    1
  4990 ;; Hardware stack levels required when called:    3
  4991 ;; This function calls:
  4992 ;;		___ftge
  4993 ;;		_frexp
  4994 ;;		___ftmul
  4995 ;;		___ftadd
  4996 ;;		_eval_poly
  4997 ;;		___awtoft
  4998 ;; This function is called by:
  4999 ;;		_pow
  5000 ;;		_log10
  5001 ;; This function uses a non-reentrant model
  5002 ;;
  5003                           psect	text894
  5004                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\log.c"
  5005                           	line	6
  5006                           	global	__size_of_log
  5007  00D3                     	__size_of_log	equ	__end_of_log-_log
  5008                           	
  5009  0D4C                     _log:	
  5010                           	opt	stack 0
  5011                           ; Regs used in _log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5012                           	line	24
  5013                           	
  5014  0D4C                     l5157:	
  5015  0D4C  1283               	bcf	status, 5	;RP0=0, select bank0
  5016  0D4D  1303               	bcf	status, 6	;RP1=0, select bank0
  5017  0D4E  0854               	movf	(log@x),w
  5018  0D4F  00F0               	movwf	(?___ftge)
  5019  0D50  0855               	movf	(log@x+1),w
  5020  0D51  00F1               	movwf	(?___ftge+1)
  5021  0D52  0856               	movf	(log@x+2),w
  5022  0D53  00F2               	movwf	(?___ftge+2)
  5023  0D54  3000               	movlw	0x0
  5024  0D55  00F3               	movwf	0+(?___ftge)+03h
  5025  0D56  3000               	movlw	0x0
  5026  0D57  00F4               	movwf	1+(?___ftge)+03h
  5027  0D58  3000               	movlw	0x0
  5028  0D59  00F5               	movwf	2+(?___ftge)+03h
  5029  0D5A  120A  158A  2103   	fcall	___ftge
              120A  158A         
  5030  0D5F  1803               	btfsc	status,0
  5031  0D60  2D62               	goto	u4661
  5032  0D61  2D63               	goto	u4660
  5033  0D62                     u4661:
  5034  0D62  2D71               	goto	l5163
  5035  0D63                     u4660:
  5036                           	line	25
  5037                           	
  5038  0D63                     l5159:	
  5039  0D63  3021               	movlw	low(021h)
  5040  0D64  1283               	bcf	status, 5	;RP0=0, select bank0
  5041  0D65  1303               	bcf	status, 6	;RP1=0, select bank0
  5042  0D66  00EE               	movwf	(_errno)
  5043  0D67  3000               	movlw	high(021h)
  5044  0D68  00EF               	movwf	((_errno))+1
  5045                           	line	26
  5046  0D69  3000               	movlw	0x0
  5047  0D6A  00D4               	movwf	(?_log)
  5048  0D6B  3000               	movlw	0x0
  5049  0D6C  00D5               	movwf	(?_log+1)
  5050  0D6D  3000               	movlw	0x0
  5051  0D6E  00D6               	movwf	(?_log+2)
  5052  0D6F  2E1E               	goto	l1978
  5053                           	
  5054  0D70                     l5161:	
  5055  0D70  2E1E               	goto	l1978
  5056                           	line	27
  5057                           	
  5058  0D71                     l1977:	
  5059                           	line	28
  5060                           	
  5061  0D71                     l5163:	
  5062  0D71  1283               	bcf	status, 5	;RP0=0, select bank0
  5063  0D72  1303               	bcf	status, 6	;RP1=0, select bank0
  5064  0D73  0856               	movf	(log@x+2),w
  5065  0D74  0455               	iorwf	(log@x+1),w
  5066  0D75  0454               	iorwf	(log@x),w
  5067  0D76  1D03               	skipz
  5068  0D77  2D79               	goto	u4671
  5069  0D78  2D7A               	goto	u4670
  5070  0D79                     u4671:
  5071  0D79  2D86               	goto	l5169
  5072  0D7A                     u4670:
  5073                           	line	29
  5074                           	
  5075  0D7A                     l5165:	
  5076  0D7A  3022               	movlw	low(022h)
  5077  0D7B  00EE               	movwf	(_errno)
  5078  0D7C  3000               	movlw	high(022h)
  5079  0D7D  00EF               	movwf	((_errno))+1
  5080                           	line	30
  5081  0D7E  3000               	movlw	0x0
  5082  0D7F  00D4               	movwf	(?_log)
  5083  0D80  3000               	movlw	0x0
  5084  0D81  00D5               	movwf	(?_log+1)
  5085  0D82  3000               	movlw	0x0
  5086  0D83  00D6               	movwf	(?_log+2)
  5087  0D84  2E1E               	goto	l1978
  5088                           	
  5089  0D85                     l5167:	
  5090  0D85  2E1E               	goto	l1978
  5091                           	line	31
  5092                           	
  5093  0D86                     l1979:	
  5094                           	line	32
  5095                           	
  5096  0D86                     l5169:	
  5097  0D86  3000               	movlw	0x0
  5098  0D87  00B3               	movwf	(?___ftadd)
  5099  0D88  3080               	movlw	0x80
  5100  0D89  00B4               	movwf	(?___ftadd+1)
  5101  0D8A  30BF               	movlw	0xbf
  5102  0D8B  00B5               	movwf	(?___ftadd+2)
  5103  0D8C  3000               	movlw	0x0
  5104  0D8D  00A3               	movwf	(?___ftmul)
  5105  0D8E  3000               	movlw	0x0
  5106  0D8F  00A4               	movwf	(?___ftmul+1)
  5107  0D90  3040               	movlw	0x40
  5108  0D91  00A5               	movwf	(?___ftmul+2)
  5109  0D92  3058               	movlw	(log@exp)&0ffh
  5110  0D93  00D7               	movwf	(??_log+0)+0
  5111  0D94  0857               	movf	(??_log+0)+0,w
  5112  0D95  00F3               	movwf	0+(?_frexp)+03h
  5113  0D96  0854               	movf	(log@x),w
  5114  0D97  00F0               	movwf	(?_frexp)
  5115  0D98  0855               	movf	(log@x+1),w
  5116  0D99  00F1               	movwf	(?_frexp+1)
  5117  0D9A  0856               	movf	(log@x+2),w
  5118  0D9B  00F2               	movwf	(?_frexp+2)
  5119  0D9C  160A  118A  24BB   	fcall	_frexp
              120A  158A         
  5120  0DA1  0870               	movf	(0+(?_frexp)),w
  5121  0DA2  1283               	bcf	status, 5	;RP0=0, select bank0
  5122  0DA3  1303               	bcf	status, 6	;RP1=0, select bank0
  5123  0DA4  00A6               	movwf	0+(?___ftmul)+03h
  5124  0DA5  0871               	movf	(1+(?_frexp)),w
  5125  0DA6  00A7               	movwf	1+(?___ftmul)+03h
  5126  0DA7  0872               	movf	(2+(?_frexp)),w
  5127  0DA8  00A8               	movwf	2+(?___ftmul)+03h
  5128  0DA9  120A  158A  261F   	fcall	___ftmul
              120A  158A         
  5129  0DAE  1283               	bcf	status, 5	;RP0=0, select bank0
  5130  0DAF  1303               	bcf	status, 6	;RP1=0, select bank0
  5131  0DB0  0823               	movf	(0+(?___ftmul)),w
  5132  0DB1  00B6               	movwf	0+(?___ftadd)+03h
  5133  0DB2  0824               	movf	(1+(?___ftmul)),w
  5134  0DB3  00B7               	movwf	1+(?___ftadd)+03h
  5135  0DB4  0825               	movf	(2+(?___ftmul)),w
  5136  0DB5  00B8               	movwf	2+(?___ftadd)+03h
  5137  0DB6  120A  118A  2324   	fcall	___ftadd
              120A  158A         
  5138  0DBB  1283               	bcf	status, 5	;RP0=0, select bank0
  5139  0DBC  1303               	bcf	status, 6	;RP1=0, select bank0
  5140  0DBD  0833               	movf	(0+(?___ftadd)),w
  5141  0DBE  00D4               	movwf	(log@x)
  5142  0DBF  0834               	movf	(1+(?___ftadd)),w
  5143  0DC0  00D5               	movwf	(log@x+1)
  5144  0DC1  0835               	movf	(2+(?___ftadd)),w
  5145  0DC2  00D6               	movwf	(log@x+2)
  5146                           	line	33
  5147                           	
  5148  0DC3                     l5171:	
  5149  0DC3  30FF               	movlw	low(-1)
  5150  0DC4  07D8               	addwf	(log@exp),f
  5151  0DC5  1803               	skipnc
  5152  0DC6  0AD9               	incf	(log@exp+1),f
  5153  0DC7  30FF               	movlw	high(-1)
  5154  0DC8  07D9               	addwf	(log@exp+1),f
  5155                           	line	34
  5156                           	
  5157  0DC9                     l5173:	
  5158  0DC9  0854               	movf	(log@x),w
  5159  0DCA  00CA               	movwf	(?_eval_poly)
  5160  0DCB  0855               	movf	(log@x+1),w
  5161  0DCC  00CB               	movwf	(?_eval_poly+1)
  5162  0DCD  0856               	movf	(log@x+2),w
  5163  0DCE  00CC               	movwf	(?_eval_poly+2)
  5164  0DCF  301F               	movlw	((log@coeff-__stringbase))&0ffh
  5165  0DD0  00D7               	movwf	(??_log+0)+0
  5166  0DD1  0857               	movf	(??_log+0)+0,w
  5167  0DD2  00CD               	movwf	(0+?_eval_poly+03h)
  5168  0DD3  3008               	movlw	low(08h)
  5169  0DD4  00CE               	movwf	0+(?_eval_poly)+04h
  5170  0DD5  3000               	movlw	high(08h)
  5171  0DD6  00CF               	movwf	(0+(?_eval_poly)+04h)+1
  5172  0DD7  120A  158A  216F   	fcall	_eval_poly
              120A  158A         
  5173  0DDC  1283               	bcf	status, 5	;RP0=0, select bank0
  5174  0DDD  1303               	bcf	status, 6	;RP1=0, select bank0
  5175  0DDE  084A               	movf	(0+(?_eval_poly)),w
  5176  0DDF  00D4               	movwf	(log@x)
  5177  0DE0  084B               	movf	(1+(?_eval_poly)),w
  5178  0DE1  00D5               	movwf	(log@x+1)
  5179  0DE2  084C               	movf	(2+(?_eval_poly)),w
  5180  0DE3  00D6               	movwf	(log@x+2)
  5181                           	line	35
  5182                           	
  5183  0DE4                     l5175:	
  5184  0DE4  0854               	movf	(log@x),w
  5185  0DE5  00B3               	movwf	(?___ftadd)
  5186  0DE6  0855               	movf	(log@x+1),w
  5187  0DE7  00B4               	movwf	(?___ftadd+1)
  5188  0DE8  0856               	movf	(log@x+2),w
  5189  0DE9  00B5               	movwf	(?___ftadd+2)
  5190  0DEA  3072               	movlw	0x72
  5191  0DEB  00A3               	movwf	(?___ftmul)
  5192  0DEC  3031               	movlw	0x31
  5193  0DED  00A4               	movwf	(?___ftmul+1)
  5194  0DEE  303F               	movlw	0x3f
  5195  0DEF  00A5               	movwf	(?___ftmul+2)
  5196  0DF0  0859               	movf	(log@exp+1),w
  5197  0DF1  01FC               	clrf	(?___awtoft+1)
  5198  0DF2  07FC               	addwf	(?___awtoft+1)
  5199  0DF3  0858               	movf	(log@exp),w
  5200  0DF4  01FB               	clrf	(?___awtoft)
  5201  0DF5  07FB               	addwf	(?___awtoft)
  5202                           
  5203  0DF6  160A  118A  2311   	fcall	___awtoft
              120A  158A         
  5204  0DFB  087B               	movf	(0+(?___awtoft)),w
  5205  0DFC  1283               	bcf	status, 5	;RP0=0, select bank0
  5206  0DFD  1303               	bcf	status, 6	;RP1=0, select bank0
  5207  0DFE  00A6               	movwf	0+(?___ftmul)+03h
  5208  0DFF  087C               	movf	(1+(?___awtoft)),w
  5209  0E00  00A7               	movwf	1+(?___ftmul)+03h
  5210  0E01  087D               	movf	(2+(?___awtoft)),w
  5211  0E02  00A8               	movwf	2+(?___ftmul)+03h
  5212  0E03  120A  158A  261F   	fcall	___ftmul
              120A  158A         
  5213  0E08  1283               	bcf	status, 5	;RP0=0, select bank0
  5214  0E09  1303               	bcf	status, 6	;RP1=0, select bank0
  5215  0E0A  0823               	movf	(0+(?___ftmul)),w
  5216  0E0B  00B6               	movwf	0+(?___ftadd)+03h
  5217  0E0C  0824               	movf	(1+(?___ftmul)),w
  5218  0E0D  00B7               	movwf	1+(?___ftadd)+03h
  5219  0E0E  0825               	movf	(2+(?___ftmul)),w
  5220  0E0F  00B8               	movwf	2+(?___ftadd)+03h
  5221  0E10  120A  118A  2324   	fcall	___ftadd
              120A  158A         
  5222  0E15  1283               	bcf	status, 5	;RP0=0, select bank0
  5223  0E16  1303               	bcf	status, 6	;RP1=0, select bank0
  5224  0E17  0833               	movf	(0+(?___ftadd)),w
  5225  0E18  00D4               	movwf	(?_log)
  5226  0E19  0834               	movf	(1+(?___ftadd)),w
  5227  0E1A  00D5               	movwf	(?_log+1)
  5228  0E1B  0835               	movf	(2+(?___ftadd)),w
  5229  0E1C  00D6               	movwf	(?_log+2)
  5230  0E1D  2E1E               	goto	l1978
  5231                           	
  5232  0E1E                     l5177:	
  5233                           	line	36
  5234                           	
  5235  0E1E                     l1978:	
  5236  0E1E  0008               	return
  5237                           	opt stack 0
  5238                           GLOBAL	__end_of_log
  5239  0E1F                     	__end_of_log:
  5240 ;; =============== function _log ends ============
  5241                           
  5242                           	signat	_log,4219
  5243                           	global	_initial_State
  5244                           psect	text895,local,class=CODE,delta=2
  5245                           global __ptext895
  5246  0003                     __ptext895:
  5247                           
  5248 ;; *************** function _initial_State *****************
  5249 ;; Defined at:
  5250 ;;		line 54 in file "code.c"
  5251 ;; Parameters:    Size  Location     Type
  5252 ;;		None
  5253 ;; Auto vars:     Size  Location     Type
  5254 ;;		None
  5255 ;; Return value:  Size  Location     Type
  5256 ;;		None               void
  5257 ;; Registers used:
  5258 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5259 ;; Tracked objects:
  5260 ;;		On entry : 0/0
  5261 ;;		On exit  : 0/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5264 ;;      Params:         0       0       0       0       0
  5265 ;;      Locals:         0       0       0       0       0
  5266 ;;      Temps:          0       0       0       0       0
  5267 ;;      Totals:         0       0       0       0       0
  5268 ;;Total ram usage:        0 bytes
  5269 ;; Hardware stack levels used:    1
  5270 ;; Hardware stack levels required when called:    3
  5271 ;; This function calls:
  5272 ;;		_Lcd8_Clear
  5273 ;;		_Lcd8_Set_Cursor
  5274 ;;		_Lcd8_Write_String
  5275 ;; This function is called by:
  5276 ;;		_checkRFID
  5277 ;; This function uses a non-reentrant model
  5278 ;;
  5279                           psect	text895
  5280                           	file	"code.c"
  5281                           	line	54
  5282                           	global	__size_of_initial_State
  5283  0018                     	__size_of_initial_State	equ	__end_of_initial_State-_initial_State
  5284                           	
  5285  0003                     _initial_State:	
  5286                           	opt	stack 3
  5287                           ; Regs used in _initial_State: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5288                           	line	55
  5289                           	
  5290  0003                     l5153:	
  5291                           ;code.c: 55: Lcd8_Clear();
  5292  0003  120A  158A  20FC   	fcall	_Lcd8_Clear
              120A  118A         
  5293                           	line	56
  5294                           ;code.c: 56: Lcd8_Set_Cursor(1,1);
  5295  0008  01F4               	clrf	(?_Lcd8_Set_Cursor)
  5296  0009  1403               	bsf	status,0
  5297  000A  0DF4               	rlf	(?_Lcd8_Set_Cursor),f
  5298  000B  3001               	movlw	(01h)
  5299  000C  160A  118A  22D3   	fcall	_Lcd8_Set_Cursor
              120A  118A         
  5300                           	line	57
  5301                           	
  5302  0011                     l5155:	
  5303                           ;code.c: 57: Lcd8_Write_String("Place your card");
  5304  0011  307E               	movlw	low((STR_2-__stringbase))
  5305  0012  00F4               	movwf	(?_Lcd8_Write_String)
  5306  0013  3080               	movlw	80h
  5307  0014  00F5               	movwf	(?_Lcd8_Write_String+1)
  5308  0015  160A  118A  23CC   	fcall	_Lcd8_Write_String
              120A  118A         
  5309                           	line	59
  5310                           	
  5311  001A                     l853:	
  5312  001A  0008               	return
  5313                           	opt stack 0
  5314                           GLOBAL	__end_of_initial_State
  5315  001B                     	__end_of_initial_State:
  5316 ;; =============== function _initial_State ends ============
  5317                           
  5318                           	signat	_initial_State,88
  5319                           	global	_eval_poly
  5320                           psect	text896,local,class=CODE,delta=2
  5321                           global __ptext896
  5322  096F                     __ptext896:
  5323                           
  5324 ;; *************** function _eval_poly *****************
  5325 ;; Defined at:
  5326 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\evalpoly.c"
  5327 ;; Parameters:    Size  Location     Type
  5328 ;;  x               3   42[BANK0 ] int 
  5329 ;;  d               1   45[BANK0 ] PTR const 
  5330 ;;		 -> log@coeff(27), exp@coeff(30), 
  5331 ;;  n               2   46[BANK0 ] int 
  5332 ;; Auto vars:     Size  Location     Type
  5333 ;;  res             3   49[BANK0 ] int 
  5334 ;; Return value:  Size  Location     Type
  5335 ;;                  3   42[BANK0 ] int 
  5336 ;; Registers used:
  5337 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5338 ;; Tracked objects:
  5339 ;;		On entry : 0/0
  5340 ;;		On exit  : 0/0
  5341 ;;		Unchanged: 0/0
  5342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5343 ;;      Params:         0       6       0       0       0
  5344 ;;      Locals:         0       3       0       0       0
  5345 ;;      Temps:          0       1       0       0       0
  5346 ;;      Totals:         0      10       0       0       0
  5347 ;;Total ram usage:       10 bytes
  5348 ;; Hardware stack levels used:    1
  5349 ;; Hardware stack levels required when called:    2
  5350 ;; This function calls:
  5351 ;;		___bmul
  5352 ;;		___ftmul
  5353 ;;		___ftadd
  5354 ;; This function is called by:
  5355 ;;		_exp
  5356 ;;		_log
  5357 ;; This function uses a non-reentrant model
  5358 ;;
  5359                           psect	text896
  5360                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\evalpoly.c"
  5361                           	line	5
  5362                           	global	__size_of_eval_poly
  5363  007F                     	__size_of_eval_poly	equ	__end_of_eval_poly-_eval_poly
  5364                           	
  5365  096F                     _eval_poly:	
  5366 ;; using string table level
  5367                           	opt	stack 1
  5368                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5369                           	line	8
  5370                           	
  5371  096F                     l5143:	
  5372  096F  3003               	movlw	(03h)
  5373  0970  1283               	bcf	status, 5	;RP0=0, select bank0
  5374  0971  1303               	bcf	status, 6	;RP1=0, select bank0
  5375  0972  00D0               	movwf	(??_eval_poly+0)+0
  5376  0973  0850               	movf	(??_eval_poly+0)+0,w
  5377  0974  00F0               	movwf	(?___bmul)
  5378  0975  084E               	movf	(eval_poly@n),w
  5379  0976  160A  118A  226A   	fcall	___bmul
              120A  158A         
  5380  097B  1283               	bcf	status, 5	;RP0=0, select bank0
  5381  097C  1303               	bcf	status, 6	;RP1=0, select bank0
  5382  097D  074D               	addwf	(eval_poly@d),w
  5383  097E  0084               	movwf	fsr0
  5384  097F  120A  158A  200A   	fcall	stringdir
              120A  158A         
  5385  0984  00D1               	movwf	(eval_poly@res)
  5386  0985  120A  158A  200A   	fcall	stringdir
              120A  158A         
  5387  098A  00D2               	movwf	(eval_poly@res+1)
  5388  098B  120A  158A  200A   	fcall	stringdir
              120A  158A         
  5389  0990  00D3               	movwf	(eval_poly@res+2)
  5390                           	line	9
  5391  0991  29DF               	goto	l5147
  5392                           	
  5393  0992                     l2027:	
  5394                           	line	10
  5395                           	
  5396  0992                     l5145:	
  5397  0992  3003               	movlw	(03h)
  5398  0993  00D0               	movwf	(??_eval_poly+0)+0
  5399  0994  0850               	movf	(??_eval_poly+0)+0,w
  5400  0995  00F0               	movwf	(?___bmul)
  5401  0996  30FF               	movlw	low(-1)
  5402  0997  07CE               	addwf	(eval_poly@n),f
  5403  0998  1803               	skipnc
  5404  0999  0ACF               	incf	(eval_poly@n+1),f
  5405  099A  30FF               	movlw	high(-1)
  5406  099B  07CF               	addwf	(eval_poly@n+1),f
  5407  099C  084E               	movf	((eval_poly@n)),w
  5408  099D  160A  118A  226A   	fcall	___bmul
              120A  158A         
  5409  09A2  1283               	bcf	status, 5	;RP0=0, select bank0
  5410  09A3  1303               	bcf	status, 6	;RP1=0, select bank0
  5411  09A4  074D               	addwf	(eval_poly@d),w
  5412  09A5  0084               	movwf	fsr0
  5413  09A6  120A  158A  200A   	fcall	stringdir
              120A  158A         
  5414  09AB  00B3               	movwf	(?___ftadd)
  5415  09AC  120A  158A  200A   	fcall	stringdir
              120A  158A         
  5416  09B1  00B4               	movwf	(?___ftadd+1)
  5417  09B2  120A  158A  200A   	fcall	stringdir
              120A  158A         
  5418  09B7  00B5               	movwf	(?___ftadd+2)
  5419  09B8  0851               	movf	(eval_poly@res),w
  5420  09B9  00A3               	movwf	(?___ftmul)
  5421  09BA  0852               	movf	(eval_poly@res+1),w
  5422  09BB  00A4               	movwf	(?___ftmul+1)
  5423  09BC  0853               	movf	(eval_poly@res+2),w
  5424  09BD  00A5               	movwf	(?___ftmul+2)
  5425  09BE  084A               	movf	(eval_poly@x),w
  5426  09BF  00A6               	movwf	0+(?___ftmul)+03h
  5427  09C0  084B               	movf	(eval_poly@x+1),w
  5428  09C1  00A7               	movwf	1+(?___ftmul)+03h
  5429  09C2  084C               	movf	(eval_poly@x+2),w
  5430  09C3  00A8               	movwf	2+(?___ftmul)+03h
  5431  09C4  120A  158A  261F   	fcall	___ftmul
              120A  158A         
  5432  09C9  1283               	bcf	status, 5	;RP0=0, select bank0
  5433  09CA  1303               	bcf	status, 6	;RP1=0, select bank0
  5434  09CB  0823               	movf	(0+(?___ftmul)),w
  5435  09CC  00B6               	movwf	0+(?___ftadd)+03h
  5436  09CD  0824               	movf	(1+(?___ftmul)),w
  5437  09CE  00B7               	movwf	1+(?___ftadd)+03h
  5438  09CF  0825               	movf	(2+(?___ftmul)),w
  5439  09D0  00B8               	movwf	2+(?___ftadd)+03h
  5440  09D1  120A  118A  2324   	fcall	___ftadd
              120A  158A         
  5441  09D6  1283               	bcf	status, 5	;RP0=0, select bank0
  5442  09D7  1303               	bcf	status, 6	;RP1=0, select bank0
  5443  09D8  0833               	movf	(0+(?___ftadd)),w
  5444  09D9  00D1               	movwf	(eval_poly@res)
  5445  09DA  0834               	movf	(1+(?___ftadd)),w
  5446  09DB  00D2               	movwf	(eval_poly@res+1)
  5447  09DC  0835               	movf	(2+(?___ftadd)),w
  5448  09DD  00D3               	movwf	(eval_poly@res+2)
  5449  09DE  29DF               	goto	l5147
  5450                           	
  5451  09DF                     l2026:	
  5452                           	line	9
  5453                           	
  5454  09DF                     l5147:	
  5455  09DF  084F               	movf	((eval_poly@n+1)),w
  5456  09E0  044E               	iorwf	((eval_poly@n)),w
  5457  09E1  1D03               	skipz
  5458  09E2  29E4               	goto	u4651
  5459  09E3  29E5               	goto	u4650
  5460  09E4                     u4651:
  5461  09E4  2992               	goto	l5145
  5462  09E5                     u4650:
  5463  09E5  29E6               	goto	l5149
  5464                           	
  5465  09E6                     l2028:	
  5466                           	line	11
  5467                           	
  5468  09E6                     l5149:	
  5469  09E6  0851               	movf	(eval_poly@res),w
  5470  09E7  00CA               	movwf	(?_eval_poly)
  5471  09E8  0852               	movf	(eval_poly@res+1),w
  5472  09E9  00CB               	movwf	(?_eval_poly+1)
  5473  09EA  0853               	movf	(eval_poly@res+2),w
  5474  09EB  00CC               	movwf	(?_eval_poly+2)
  5475  09EC  29ED               	goto	l2029
  5476                           	
  5477  09ED                     l5151:	
  5478                           	line	12
  5479                           	
  5480  09ED                     l2029:	
  5481  09ED  0008               	return
  5482                           	opt stack 0
  5483                           GLOBAL	__end_of_eval_poly
  5484  09EE                     	__end_of_eval_poly:
  5485 ;; =============== function _eval_poly ends ============
  5486                           
  5487                           	signat	_eval_poly,12411
  5488                           	global	_floor
  5489                           psect	text897,local,class=CODE,delta=2
  5490                           global __ptext897
  5491  001B                     __ptext897:
  5492                           
  5493 ;; *************** function _floor *****************
  5494 ;; Defined at:
  5495 ;;		line 14 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\floor.c"
  5496 ;; Parameters:    Size  Location     Type
  5497 ;;  x               3   32[BANK0 ] int 
  5498 ;; Auto vars:     Size  Location     Type
  5499 ;;  i               3   36[BANK0 ] int 
  5500 ;;  expon           2   39[BANK0 ] int 
  5501 ;; Return value:  Size  Location     Type
  5502 ;;                  3   32[BANK0 ] int 
  5503 ;; Registers used:
  5504 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5505 ;; Tracked objects:
  5506 ;;		On entry : 0/0
  5507 ;;		On exit  : 0/0
  5508 ;;		Unchanged: 0/0
  5509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5510 ;;      Params:         0       3       0       0       0
  5511 ;;      Locals:         0       5       0       0       0
  5512 ;;      Temps:          0       1       0       0       0
  5513 ;;      Totals:         0       9       0       0       0
  5514 ;;Total ram usage:        9 bytes
  5515 ;; Hardware stack levels used:    1
  5516 ;; Hardware stack levels required when called:    2
  5517 ;; This function calls:
  5518 ;;		_frexp
  5519 ;;		___ftge
  5520 ;;		___fttol
  5521 ;;		___altoft
  5522 ;;		___ftadd
  5523 ;; This function is called by:
  5524 ;;		_exp
  5525 ;; This function uses a non-reentrant model
  5526 ;;
  5527                           psect	text897
  5528                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\floor.c"
  5529                           	line	14
  5530                           	global	__size_of_floor
  5531  00A8                     	__size_of_floor	equ	__end_of_floor-_floor
  5532                           	
  5533  001B                     _floor:	
  5534                           	opt	stack 0
  5535                           ; Regs used in _floor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5536                           	line	18
  5537                           	
  5538  001B                     l5115:	
  5539  001B  1283               	bcf	status, 5	;RP0=0, select bank0
  5540  001C  1303               	bcf	status, 6	;RP1=0, select bank0
  5541  001D  0840               	movf	(floor@x),w
  5542  001E  00F0               	movwf	(?_frexp)
  5543  001F  0841               	movf	(floor@x+1),w
  5544  0020  00F1               	movwf	(?_frexp+1)
  5545  0021  0842               	movf	(floor@x+2),w
  5546  0022  00F2               	movwf	(?_frexp+2)
  5547  0023  3047               	movlw	(floor@expon)&0ffh
  5548  0024  00C3               	movwf	(??_floor+0)+0
  5549  0025  0843               	movf	(??_floor+0)+0,w
  5550  0026  00F3               	movwf	0+(?_frexp)+03h
  5551  0027  160A  118A  24BB   	fcall	_frexp
              120A  118A         
  5552                           	line	19
  5553                           	
  5554  002C                     l5117:	
  5555  002C  1283               	bcf	status, 5	;RP0=0, select bank0
  5556  002D  1303               	bcf	status, 6	;RP1=0, select bank0
  5557  002E  1FC8               	btfss	(floor@expon+1),7
  5558  002F  2831               	goto	u4611
  5559  0030  2832               	goto	u4610
  5560  0031                     u4611:
  5561  0031  285B               	goto	l5129
  5562  0032                     u4610:
  5563                           	line	20
  5564                           	
  5565  0032                     l5119:	
  5566  0032  0840               	movf	(floor@x),w
  5567  0033  00F0               	movwf	(?___ftge)
  5568  0034  0841               	movf	(floor@x+1),w
  5569  0035  00F1               	movwf	(?___ftge+1)
  5570  0036  0842               	movf	(floor@x+2),w
  5571  0037  00F2               	movwf	(?___ftge+2)
  5572  0038  3000               	movlw	0x0
  5573  0039  00F3               	movwf	0+(?___ftge)+03h
  5574  003A  3000               	movlw	0x0
  5575  003B  00F4               	movwf	1+(?___ftge)+03h
  5576  003C  3000               	movlw	0x0
  5577  003D  00F5               	movwf	2+(?___ftge)+03h
  5578  003E  120A  158A  2103   	fcall	___ftge
              120A  118A         
  5579  0043  1803               	btfsc	status,0
  5580  0044  2846               	goto	u4621
  5581  0045  2847               	goto	u4620
  5582  0046                     u4621:
  5583  0046  2851               	goto	l5125
  5584  0047                     u4620:
  5585                           	line	21
  5586                           	
  5587  0047                     l5121:	
  5588  0047  3000               	movlw	0x0
  5589  0048  1283               	bcf	status, 5	;RP0=0, select bank0
  5590  0049  1303               	bcf	status, 6	;RP1=0, select bank0
  5591  004A  00C0               	movwf	(?_floor)
  5592  004B  3080               	movlw	0x80
  5593  004C  00C1               	movwf	(?_floor+1)
  5594  004D  30BF               	movlw	0xbf
  5595  004E  00C2               	movwf	(?_floor+2)
  5596  004F  28C2               	goto	l1964
  5597                           	
  5598  0050                     l5123:	
  5599  0050  28C2               	goto	l1964
  5600                           	
  5601  0051                     l1963:	
  5602                           	line	22
  5603                           	
  5604  0051                     l5125:	
  5605  0051  3000               	movlw	0x0
  5606  0052  1283               	bcf	status, 5	;RP0=0, select bank0
  5607  0053  1303               	bcf	status, 6	;RP1=0, select bank0
  5608  0054  00C0               	movwf	(?_floor)
  5609  0055  3000               	movlw	0x0
  5610  0056  00C1               	movwf	(?_floor+1)
  5611  0057  3000               	movlw	0x0
  5612  0058  00C2               	movwf	(?_floor+2)
  5613  0059  28C2               	goto	l1964
  5614                           	
  5615  005A                     l5127:	
  5616  005A  28C2               	goto	l1964
  5617                           	line	23
  5618                           	
  5619  005B                     l1962:	
  5620                           	line	24
  5621                           	
  5622  005B                     l5129:	
  5623  005B  3000               	movlw	high(015h)
  5624  005C  0248               	subwf	(floor@expon+1),w
  5625  005D  3015               	movlw	low(015h)
  5626  005E  1903               	skipnz
  5627  005F  0247               	subwf	(floor@expon),w
  5628  0060  1C03               	skipc
  5629  0061  2863               	goto	u4631
  5630  0062  2864               	goto	u4630
  5631  0063                     u4631:
  5632  0063  2865               	goto	l5133
  5633  0064                     u4630:
  5634                           	line	25
  5635                           	
  5636  0064                     l5131:	
  5637  0064  28C2               	goto	l1964
  5638                           	
  5639  0065                     l1965:	
  5640                           	line	26
  5641                           	
  5642  0065                     l5133:	
  5643  0065  0840               	movf	(floor@x),w
  5644  0066  00F0               	movwf	(?___fttol)
  5645  0067  0841               	movf	(floor@x+1),w
  5646  0068  00F1               	movwf	(?___fttol+1)
  5647  0069  0842               	movf	(floor@x+2),w
  5648  006A  00F2               	movwf	(?___fttol+2)
  5649  006B  120A  158A  2276   	fcall	___fttol
              120A  118A         
  5650  0070  0873               	movf	(3+(?___fttol)),w
  5651  0071  1283               	bcf	status, 5	;RP0=0, select bank0
  5652  0072  1303               	bcf	status, 6	;RP1=0, select bank0
  5653  0073  00A3               	movwf	(?___altoft+3)
  5654  0074  0872               	movf	(2+(?___fttol)),w
  5655  0075  00A2               	movwf	(?___altoft+2)
  5656  0076  0871               	movf	(1+(?___fttol)),w
  5657  0077  00A1               	movwf	(?___altoft+1)
  5658  0078  0870               	movf	(0+(?___fttol)),w
  5659  0079  00A0               	movwf	(?___altoft)
  5660                           
  5661  007A  160A  118A  2552   	fcall	___altoft
              120A  118A         
  5662  007F  1283               	bcf	status, 5	;RP0=0, select bank0
  5663  0080  1303               	bcf	status, 6	;RP1=0, select bank0
  5664  0081  0820               	movf	(0+(?___altoft)),w
  5665  0082  00C4               	movwf	(floor@i)
  5666  0083  0821               	movf	(1+(?___altoft)),w
  5667  0084  00C5               	movwf	(floor@i+1)
  5668  0085  0822               	movf	(2+(?___altoft)),w
  5669  0086  00C6               	movwf	(floor@i+2)
  5670                           	line	27
  5671  0087  0840               	movf	(floor@x),w
  5672  0088  00F0               	movwf	(?___ftge)
  5673  0089  0841               	movf	(floor@x+1),w
  5674  008A  00F1               	movwf	(?___ftge+1)
  5675  008B  0842               	movf	(floor@x+2),w
  5676  008C  00F2               	movwf	(?___ftge+2)
  5677  008D  0844               	movf	(floor@i),w
  5678  008E  00F3               	movwf	0+(?___ftge)+03h
  5679  008F  0845               	movf	(floor@i+1),w
  5680  0090  00F4               	movwf	1+(?___ftge)+03h
  5681  0091  0846               	movf	(floor@i+2),w
  5682  0092  00F5               	movwf	2+(?___ftge)+03h
  5683  0093  120A  158A  2103   	fcall	___ftge
              120A  118A         
  5684  0098  1803               	btfsc	status,0
  5685  0099  289B               	goto	u4641
  5686  009A  289C               	goto	u4640
  5687  009B                     u4641:
  5688  009B  28B9               	goto	l5139
  5689  009C                     u4640:
  5690                           	line	28
  5691                           	
  5692  009C                     l5135:	
  5693  009C  3000               	movlw	0x0
  5694  009D  1283               	bcf	status, 5	;RP0=0, select bank0
  5695  009E  1303               	bcf	status, 6	;RP1=0, select bank0
  5696  009F  00B3               	movwf	(?___ftadd)
  5697  00A0  3080               	movlw	0x80
  5698  00A1  00B4               	movwf	(?___ftadd+1)
  5699  00A2  30BF               	movlw	0xbf
  5700  00A3  00B5               	movwf	(?___ftadd+2)
  5701  00A4  0844               	movf	(floor@i),w
  5702  00A5  00B6               	movwf	0+(?___ftadd)+03h
  5703  00A6  0845               	movf	(floor@i+1),w
  5704  00A7  00B7               	movwf	1+(?___ftadd)+03h
  5705  00A8  0846               	movf	(floor@i+2),w
  5706  00A9  00B8               	movwf	2+(?___ftadd)+03h
  5707  00AA  120A  118A  2324   	fcall	___ftadd
              120A  118A         
  5708  00AF  1283               	bcf	status, 5	;RP0=0, select bank0
  5709  00B0  1303               	bcf	status, 6	;RP1=0, select bank0
  5710  00B1  0833               	movf	(0+(?___ftadd)),w
  5711  00B2  00C0               	movwf	(?_floor)
  5712  00B3  0834               	movf	(1+(?___ftadd)),w
  5713  00B4  00C1               	movwf	(?_floor+1)
  5714  00B5  0835               	movf	(2+(?___ftadd)),w
  5715  00B6  00C2               	movwf	(?_floor+2)
  5716  00B7  28C2               	goto	l1964
  5717                           	
  5718  00B8                     l5137:	
  5719  00B8  28C2               	goto	l1964
  5720                           	
  5721  00B9                     l1966:	
  5722                           	line	29
  5723                           	
  5724  00B9                     l5139:	
  5725  00B9  1283               	bcf	status, 5	;RP0=0, select bank0
  5726  00BA  1303               	bcf	status, 6	;RP1=0, select bank0
  5727  00BB  0844               	movf	(floor@i),w
  5728  00BC  00C0               	movwf	(?_floor)
  5729  00BD  0845               	movf	(floor@i+1),w
  5730  00BE  00C1               	movwf	(?_floor+1)
  5731  00BF  0846               	movf	(floor@i+2),w
  5732  00C0  00C2               	movwf	(?_floor+2)
  5733  00C1  28C2               	goto	l1964
  5734                           	
  5735  00C2                     l5141:	
  5736                           	line	30
  5737                           	
  5738  00C2                     l1964:	
  5739  00C2  0008               	return
  5740                           	opt stack 0
  5741                           GLOBAL	__end_of_floor
  5742  00C3                     	__end_of_floor:
  5743 ;; =============== function _floor ends ============
  5744                           
  5745                           	signat	_floor,4219
  5746                           	global	___ftsub
  5747                           psect	text898,local,class=CODE,delta=2
  5748                           global __ptext898
  5749  12F2                     __ptext898:
  5750                           
  5751 ;; *************** function ___ftsub *****************
  5752 ;; Defined at:
  5753 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftsub.c"
  5754 ;; Parameters:    Size  Location     Type
  5755 ;;  f2              3   32[BANK0 ] float 
  5756 ;;  f1              3   35[BANK0 ] float 
  5757 ;; Auto vars:     Size  Location     Type
  5758 ;;		None
  5759 ;; Return value:  Size  Location     Type
  5760 ;;                  3   32[BANK0 ] float 
  5761 ;; Registers used:
  5762 ;;		wreg, status,2, status,0, pclath, cstack
  5763 ;; Tracked objects:
  5764 ;;		On entry : 0/0
  5765 ;;		On exit  : 0/0
  5766 ;;		Unchanged: 0/0
  5767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5768 ;;      Params:         0       6       0       0       0
  5769 ;;      Locals:         0       0       0       0       0
  5770 ;;      Temps:          0       0       0       0       0
  5771 ;;      Totals:         0       6       0       0       0
  5772 ;;Total ram usage:        6 bytes
  5773 ;; Hardware stack levels used:    1
  5774 ;; Hardware stack levels required when called:    2
  5775 ;; This function calls:
  5776 ;;		___ftadd
  5777 ;; This function is called by:
  5778 ;;		_exp
  5779 ;; This function uses a non-reentrant model
  5780 ;;
  5781                           psect	text898
  5782                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftsub.c"
  5783                           	line	17
  5784                           	global	__size_of___ftsub
  5785  001F                     	__size_of___ftsub	equ	__end_of___ftsub-___ftsub
  5786                           	
  5787  12F2                     ___ftsub:	
  5788                           	opt	stack 0
  5789                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  5790                           	line	18
  5791                           	
  5792  12F2                     l5109:	
  5793  12F2  3080               	movlw	080h
  5794  12F3  1283               	bcf	status, 5	;RP0=0, select bank0
  5795  12F4  1303               	bcf	status, 6	;RP1=0, select bank0
  5796  12F5  06C2               	xorwf	(___ftsub@f2+2),f
  5797                           	line	19
  5798                           	
  5799  12F6                     l5111:	
  5800  12F6  0843               	movf	(___ftsub@f1),w
  5801  12F7  00B3               	movwf	(?___ftadd)
  5802  12F8  0844               	movf	(___ftsub@f1+1),w
  5803  12F9  00B4               	movwf	(?___ftadd+1)
  5804  12FA  0845               	movf	(___ftsub@f1+2),w
  5805  12FB  00B5               	movwf	(?___ftadd+2)
  5806  12FC  0840               	movf	(___ftsub@f2),w
  5807  12FD  00B6               	movwf	0+(?___ftadd)+03h
  5808  12FE  0841               	movf	(___ftsub@f2+1),w
  5809  12FF  00B7               	movwf	1+(?___ftadd)+03h
  5810  1300  0842               	movf	(___ftsub@f2+2),w
  5811  1301  00B8               	movwf	2+(?___ftadd)+03h
  5812  1302  120A  118A  2324   	fcall	___ftadd
              160A  118A         
  5813  1307  1283               	bcf	status, 5	;RP0=0, select bank0
  5814  1308  1303               	bcf	status, 6	;RP1=0, select bank0
  5815  1309  0833               	movf	(0+(?___ftadd)),w
  5816  130A  00C0               	movwf	(?___ftsub)
  5817  130B  0834               	movf	(1+(?___ftadd)),w
  5818  130C  00C1               	movwf	(?___ftsub+1)
  5819  130D  0835               	movf	(2+(?___ftadd)),w
  5820  130E  00C2               	movwf	(?___ftsub+2)
  5821  130F  2B10               	goto	l1684
  5822                           	
  5823  1310                     l5113:	
  5824                           	line	20
  5825                           	
  5826  1310                     l1684:	
  5827  1310  0008               	return
  5828                           	opt stack 0
  5829                           GLOBAL	__end_of___ftsub
  5830  1311                     	__end_of___ftsub:
  5831 ;; =============== function ___ftsub ends ============
  5832                           
  5833                           	signat	___ftsub,8315
  5834                           	global	_Lcd8_Write_String
  5835                           psect	text899,local,class=CODE,delta=2
  5836                           global __ptext899
  5837  13CC                     __ptext899:
  5838                           
  5839 ;; *************** function _Lcd8_Write_String *****************
  5840 ;; Defined at:
  5841 ;;		line 114 in file "lcd.h"
  5842 ;; Parameters:    Size  Location     Type
  5843 ;;  a               2    4[COMMON] PTR unsigned char 
  5844 ;;		 -> STR_18(17), STR_16(17), STR_15(13), STR_13(17), 
  5845 ;;		 -> STR_12(13), STR_10(17), STR_9(13), STR_7(4), 
  5846 ;;		 -> rfid(12), STR_6(8), STR_5(9), STR_4(9), 
  5847 ;;		 -> STR_3(9), buffer(2), STR_2(16), STR_1(16), 
  5848 ;; Auto vars:     Size  Location     Type
  5849 ;;  i               2    6[COMMON] int 
  5850 ;; Return value:  Size  Location     Type
  5851 ;;		None               void
  5852 ;; Registers used:
  5853 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5854 ;; Tracked objects:
  5855 ;;		On entry : 0/0
  5856 ;;		On exit  : 0/0
  5857 ;;		Unchanged: 0/0
  5858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5859 ;;      Params:         2       0       0       0       0
  5860 ;;      Locals:         2       0       0       0       0
  5861 ;;      Temps:          0       0       0       0       0
  5862 ;;      Totals:         4       0       0       0       0
  5863 ;;Total ram usage:        4 bytes
  5864 ;; Hardware stack levels used:    1
  5865 ;; Hardware stack levels required when called:    2
  5866 ;; This function calls:
  5867 ;;		_Lcd8_Write_Char
  5868 ;; This function is called by:
  5869 ;;		_main
  5870 ;;		_initial_State
  5871 ;;		_present
  5872 ;;		_absent
  5873 ;;		_checkRFID
  5874 ;; This function uses a non-reentrant model
  5875 ;;
  5876                           psect	text899
  5877                           	file	"lcd.h"
  5878                           	line	114
  5879                           	global	__size_of_Lcd8_Write_String
  5880  0032                     	__size_of_Lcd8_Write_String	equ	__end_of_Lcd8_Write_String-_Lcd8_Write_String
  5881                           	
  5882  13CC                     _Lcd8_Write_String:	
  5883                           	opt	stack 3
  5884                           ; Regs used in _Lcd8_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5885                           	line	116
  5886                           	
  5887  13CC                     l5101:	
  5888                           ;lcd.h: 115: int i;
  5889                           ;lcd.h: 116: for(i=0;a[i]!='\0';i++)
  5890  13CC  01F6               	clrf	(Lcd8_Write_String@i)
  5891  13CD  01F7               	clrf	(Lcd8_Write_String@i+1)
  5892  13CE  2BE9               	goto	l5107
  5893                           	line	117
  5894                           	
  5895  13CF                     l741:	
  5896                           	
  5897  13CF                     l5103:	
  5898                           ;lcd.h: 117: Lcd8_Write_Char(a[i]);
  5899  13CF  0876               	movf	(Lcd8_Write_String@i),w
  5900  13D0  0774               	addwf	(Lcd8_Write_String@a),w
  5901  13D1  0084               	movwf	fsr0
  5902  13D2  0875               	movf	(Lcd8_Write_String@a+1),w
  5903  13D3  1803               	skipnc
  5904  13D4  0A75               	incf	(Lcd8_Write_String@a+1),w
  5905  13D5  1283               	bcf	status, 5	;RP0=0, select bank0
  5906  13D6  1303               	bcf	status, 6	;RP1=0, select bank0
  5907  13D7  00FF               	movwf	btemp+1
  5908  13D8  120A  158A  2000   	fcall	stringtab
              160A  118A         
  5909  13DD  160A  118A  229C   	fcall	_Lcd8_Write_Char
              160A  118A         
  5910                           	line	116
  5911                           	
  5912  13E2                     l5105:	
  5913  13E2  3001               	movlw	low(01h)
  5914  13E3  07F6               	addwf	(Lcd8_Write_String@i),f
  5915  13E4  1803               	skipnc
  5916  13E5  0AF7               	incf	(Lcd8_Write_String@i+1),f
  5917  13E6  3000               	movlw	high(01h)
  5918  13E7  07F7               	addwf	(Lcd8_Write_String@i+1),f
  5919  13E8  2BE9               	goto	l5107
  5920                           	
  5921  13E9                     l740:	
  5922                           	
  5923  13E9                     l5107:	
  5924  13E9  0876               	movf	(Lcd8_Write_String@i),w
  5925  13EA  0774               	addwf	(Lcd8_Write_String@a),w
  5926  13EB  0084               	movwf	fsr0
  5927  13EC  0875               	movf	(Lcd8_Write_String@a+1),w
  5928  13ED  1803               	skipnc
  5929  13EE  0A75               	incf	(Lcd8_Write_String@a+1),w
  5930  13EF  1283               	bcf	status, 5	;RP0=0, select bank0
  5931  13F0  1303               	bcf	status, 6	;RP1=0, select bank0
  5932  13F1  00FF               	movwf	btemp+1
  5933  13F2  120A  158A  2000   	fcall	stringtab
              160A  118A         
  5934  13F7  3800               	iorlw	0
  5935  13F8  1D03               	skipz
  5936  13F9  2BFB               	goto	u4601
  5937  13FA  2BFC               	goto	u4600
  5938  13FB                     u4601:
  5939  13FB  2BCF               	goto	l5103
  5940  13FC                     u4600:
  5941  13FC  2BFD               	goto	l743
  5942                           	
  5943  13FD                     l742:	
  5944                           	line	118
  5945                           	
  5946  13FD                     l743:	
  5947  13FD  0008               	return
  5948                           	opt stack 0
  5949                           GLOBAL	__end_of_Lcd8_Write_String
  5950  13FE                     	__end_of_Lcd8_Write_String:
  5951 ;; =============== function _Lcd8_Write_String ends ============
  5952                           
  5953                           	signat	_Lcd8_Write_String,4216
  5954                           	global	_Lcd8_Init
  5955                           psect	text900,local,class=CODE,delta=2
  5956                           global __ptext900
  5957  159F                     __ptext900:
  5958                           
  5959 ;; *************** function _Lcd8_Init *****************
  5960 ;; Defined at:
  5961 ;;		line 87 in file "lcd.h"
  5962 ;; Parameters:    Size  Location     Type
  5963 ;;		None
  5964 ;; Auto vars:     Size  Location     Type
  5965 ;;		None
  5966 ;; Return value:  Size  Location     Type
  5967 ;;		None               void
  5968 ;; Registers used:
  5969 ;;		wreg, status,2, status,0, pclath, cstack
  5970 ;; Tracked objects:
  5971 ;;		On entry : 0/0
  5972 ;;		On exit  : 0/0
  5973 ;;		Unchanged: 0/0
  5974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5975 ;;      Params:         0       0       0       0       0
  5976 ;;      Locals:         0       0       0       0       0
  5977 ;;      Temps:          2       0       0       0       0
  5978 ;;      Totals:         2       0       0       0       0
  5979 ;;Total ram usage:        2 bytes
  5980 ;; Hardware stack levels used:    1
  5981 ;; Hardware stack levels required when called:    2
  5982 ;; This function calls:
  5983 ;;		_Lcd8_Port
  5984 ;;		_Lcd8_Cmd
  5985 ;; This function is called by:
  5986 ;;		_main
  5987 ;; This function uses a non-reentrant model
  5988 ;;
  5989                           psect	text900
  5990                           	file	"lcd.h"
  5991                           	line	87
  5992                           	global	__size_of_Lcd8_Init
  5993  004E                     	__size_of_Lcd8_Init	equ	__end_of_Lcd8_Init-_Lcd8_Init
  5994                           	
  5995  159F                     _Lcd8_Init:	
  5996                           	opt	stack 5
  5997                           ; Regs used in _Lcd8_Init: [wreg+status,2+status,0+pclath+cstack]
  5998                           	line	88
  5999                           	
  6000  159F                     l5089:	
  6001                           ;lcd.h: 88: Lcd8_Port(0x00);
  6002  159F  3000               	movlw	(0)
  6003  15A0  160A  118A  243C   	fcall	_Lcd8_Port
              160A  118A         
  6004                           	line	89
  6005                           	
  6006  15A5                     l5091:	
  6007                           ;lcd.h: 89: RD5 = 0;
  6008  15A5  1283               	bcf	status, 5	;RP0=0, select bank0
  6009  15A6  1303               	bcf	status, 6	;RP1=0, select bank0
  6010  15A7  1288               	bcf	(69/8),(69)&7
  6011                           	line	90
  6012                           	
  6013  15A8                     l5093:	
  6014                           ;lcd.h: 90: _delay((unsigned long)((25)*(20000000/4000.0)));
  6015                           	opt asmopt_off
  6016  15A8  30A3               movlw	163
  6017  15A9  00F5               movwf	((??_Lcd8_Init+0)+0+1),f
  6018  15AA  3055               	movlw	85
  6019  15AB  00F4               movwf	((??_Lcd8_Init+0)+0),f
  6020  15AC                     u5017:
  6021  15AC  0BF4               	decfsz	((??_Lcd8_Init+0)+0),f
  6022  15AD  2DAC               	goto	u5017
  6023  15AE  0BF5               	decfsz	((??_Lcd8_Init+0)+0+1),f
  6024  15AF  2DAC               	goto	u5017
  6025                           opt asmopt_on
  6026                           
  6027                           	line	92
  6028                           	
  6029  15B0                     l5095:	
  6030                           ;lcd.h: 92: Lcd8_Cmd(0x30);
  6031  15B0  3030               	movlw	(030h)
  6032  15B1  160A  118A  2282   	fcall	_Lcd8_Cmd
              160A  118A         
  6033                           	line	93
  6034                           ;lcd.h: 93: _delay((unsigned long)((5)*(20000000/4000.0)));
  6035                           	opt asmopt_off
  6036  15B6  3021               movlw	33
  6037  15B7  00F5               movwf	((??_Lcd8_Init+0)+0+1),f
  6038  15B8  3076               	movlw	118
  6039  15B9  00F4               movwf	((??_Lcd8_Init+0)+0),f
  6040  15BA                     u5027:
  6041  15BA  0BF4               	decfsz	((??_Lcd8_Init+0)+0),f
  6042  15BB  2DBA               	goto	u5027
  6043  15BC  0BF5               	decfsz	((??_Lcd8_Init+0)+0+1),f
  6044  15BD  2DBA               	goto	u5027
  6045  15BE  0064               	clrwdt
  6046                           opt asmopt_on
  6047                           
  6048                           	line	94
  6049                           	
  6050  15BF                     l5097:	
  6051                           ;lcd.h: 94: Lcd8_Cmd(0x30);
  6052  15BF  3030               	movlw	(030h)
  6053  15C0  160A  118A  2282   	fcall	_Lcd8_Cmd
              160A  118A         
  6054                           	line	95
  6055                           	
  6056  15C5                     l5099:	
  6057                           ;lcd.h: 95: _delay((unsigned long)((15)*(20000000/4000.0)));
  6058                           	opt asmopt_off
  6059  15C5  3062               movlw	98
  6060  15C6  00F5               movwf	((??_Lcd8_Init+0)+0+1),f
  6061  15C7  3065               	movlw	101
  6062  15C8  00F4               movwf	((??_Lcd8_Init+0)+0),f
  6063  15C9                     u5037:
  6064  15C9  0BF4               	decfsz	((??_Lcd8_Init+0)+0),f
  6065  15CA  2DC9               	goto	u5037
  6066  15CB  0BF5               	decfsz	((??_Lcd8_Init+0)+0+1),f
  6067  15CC  2DC9               	goto	u5037
  6068  15CD  2DCE               	nop2
  6069                           opt asmopt_on
  6070                           
  6071                           	line	96
  6072                           ;lcd.h: 96: Lcd8_Cmd(0x30);
  6073  15CE  3030               	movlw	(030h)
  6074  15CF  160A  118A  2282   	fcall	_Lcd8_Cmd
              160A  118A         
  6075                           	line	98
  6076                           ;lcd.h: 98: Lcd8_Cmd(0x38);
  6077  15D4  3038               	movlw	(038h)
  6078  15D5  160A  118A  2282   	fcall	_Lcd8_Cmd
              160A  118A         
  6079                           	line	99
  6080                           ;lcd.h: 99: Lcd8_Cmd(0x0C);
  6081  15DA  300C               	movlw	(0Ch)
  6082  15DB  160A  118A  2282   	fcall	_Lcd8_Cmd
              160A  118A         
  6083                           	line	100
  6084                           ;lcd.h: 100: Lcd8_Cmd(0x01);
  6085  15E0  3001               	movlw	(01h)
  6086  15E1  160A  118A  2282   	fcall	_Lcd8_Cmd
              160A  118A         
  6087                           	line	101
  6088                           ;lcd.h: 101: Lcd8_Cmd(0x06);
  6089  15E6  3006               	movlw	(06h)
  6090  15E7  160A  118A  2282   	fcall	_Lcd8_Cmd
              160A  118A         
  6091                           	line	102
  6092                           	
  6093  15EC                     l734:	
  6094  15EC  0008               	return
  6095                           	opt stack 0
  6096                           GLOBAL	__end_of_Lcd8_Init
  6097  15ED                     	__end_of_Lcd8_Init:
  6098 ;; =============== function _Lcd8_Init ends ============
  6099                           
  6100                           	signat	_Lcd8_Init,88
  6101                           	global	_Lcd8_Set_Cursor
  6102                           psect	text901,local,class=CODE,delta=2
  6103                           global __ptext901
  6104  12D3                     __ptext901:
  6105                           
  6106 ;; *************** function _Lcd8_Set_Cursor *****************
  6107 ;; Defined at:
  6108 ;;		line 79 in file "lcd.h"
  6109 ;; Parameters:    Size  Location     Type
  6110 ;;  a               1    wreg     unsigned char 
  6111 ;;  b               1    4[COMMON] unsigned char 
  6112 ;; Auto vars:     Size  Location     Type
  6113 ;;  a               1    5[COMMON] unsigned char 
  6114 ;; Return value:  Size  Location     Type
  6115 ;;		None               void
  6116 ;; Registers used:
  6117 ;;		wreg, status,2, status,0, pclath, cstack
  6118 ;; Tracked objects:
  6119 ;;		On entry : 0/0
  6120 ;;		On exit  : 0/0
  6121 ;;		Unchanged: 0/0
  6122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6123 ;;      Params:         1       0       0       0       0
  6124 ;;      Locals:         1       0       0       0       0
  6125 ;;      Temps:          0       0       0       0       0
  6126 ;;      Totals:         2       0       0       0       0
  6127 ;;Total ram usage:        2 bytes
  6128 ;; Hardware stack levels used:    1
  6129 ;; Hardware stack levels required when called:    2
  6130 ;; This function calls:
  6131 ;;		_Lcd8_Cmd
  6132 ;; This function is called by:
  6133 ;;		_main
  6134 ;;		_initial_State
  6135 ;;		_present
  6136 ;;		_absent
  6137 ;;		_checkRFID
  6138 ;; This function uses a non-reentrant model
  6139 ;;
  6140                           psect	text901
  6141                           	file	"lcd.h"
  6142                           	line	79
  6143                           	global	__size_of_Lcd8_Set_Cursor
  6144  001F                     	__size_of_Lcd8_Set_Cursor	equ	__end_of_Lcd8_Set_Cursor-_Lcd8_Set_Cursor
  6145                           	
  6146  12D3                     _Lcd8_Set_Cursor:	
  6147                           	opt	stack 3
  6148                           ; Regs used in _Lcd8_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  6149                           ;Lcd8_Set_Cursor@a stored from wreg
  6150  12D3  00F5               	movwf	(Lcd8_Set_Cursor@a)
  6151                           	line	80
  6152                           	
  6153  12D4                     l5081:	
  6154                           ;lcd.h: 80: if(a == 1)
  6155  12D4  0875               	movf	(Lcd8_Set_Cursor@a),w
  6156  12D5  3A01               	xorlw	01h
  6157  12D6  1D03               	skipz
  6158  12D7  2AD9               	goto	u4581
  6159  12D8  2ADA               	goto	u4580
  6160  12D9                     u4581:
  6161  12D9  2AE2               	goto	l5085
  6162  12DA                     u4580:
  6163                           	line	81
  6164                           	
  6165  12DA                     l5083:	
  6166                           ;lcd.h: 81: Lcd8_Cmd(0x80 + b);
  6167  12DA  0874               	movf	(Lcd8_Set_Cursor@b),w
  6168  12DB  3E80               	addlw	080h
  6169  12DC  160A  118A  2282   	fcall	_Lcd8_Cmd
              160A  118A         
  6170  12E1  2AF1               	goto	l731
  6171                           	line	82
  6172                           	
  6173  12E2                     l728:	
  6174                           	
  6175  12E2                     l5085:	
  6176                           ;lcd.h: 82: else if(a == 2)
  6177  12E2  0875               	movf	(Lcd8_Set_Cursor@a),w
  6178  12E3  3A02               	xorlw	02h
  6179  12E4  1D03               	skipz
  6180  12E5  2AE7               	goto	u4591
  6181  12E6  2AE8               	goto	u4590
  6182  12E7                     u4591:
  6183  12E7  2AF1               	goto	l731
  6184  12E8                     u4590:
  6185                           	line	83
  6186                           	
  6187  12E8                     l5087:	
  6188                           ;lcd.h: 83: Lcd8_Cmd(0xC0 + b);
  6189  12E8  0874               	movf	(Lcd8_Set_Cursor@b),w
  6190  12E9  3EC0               	addlw	0C0h
  6191  12EA  160A  118A  2282   	fcall	_Lcd8_Cmd
              160A  118A         
  6192  12EF  2AF1               	goto	l731
  6193                           	
  6194  12F0                     l730:	
  6195  12F0  2AF1               	goto	l731
  6196                           	line	84
  6197                           	
  6198  12F1                     l729:	
  6199                           	
  6200  12F1                     l731:	
  6201  12F1  0008               	return
  6202                           	opt stack 0
  6203                           GLOBAL	__end_of_Lcd8_Set_Cursor
  6204  12F2                     	__end_of_Lcd8_Set_Cursor:
  6205 ;; =============== function _Lcd8_Set_Cursor ends ============
  6206                           
  6207                           	signat	_Lcd8_Set_Cursor,8312
  6208                           	global	_Lcd8_Clear
  6209                           psect	text902,local,class=CODE,delta=2
  6210                           global __ptext902
  6211  08FC                     __ptext902:
  6212                           
  6213 ;; *************** function _Lcd8_Clear *****************
  6214 ;; Defined at:
  6215 ;;		line 74 in file "lcd.h"
  6216 ;; Parameters:    Size  Location     Type
  6217 ;;		None
  6218 ;; Auto vars:     Size  Location     Type
  6219 ;;		None
  6220 ;; Return value:  Size  Location     Type
  6221 ;;                  2  724[COMMON] int 
  6222 ;; Registers used:
  6223 ;;		wreg, status,2, status,0, pclath, cstack
  6224 ;; Tracked objects:
  6225 ;;		On entry : 0/0
  6226 ;;		On exit  : 0/0
  6227 ;;		Unchanged: 0/0
  6228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6229 ;;      Params:         0       0       0       0       0
  6230 ;;      Locals:         0       0       0       0       0
  6231 ;;      Temps:          0       0       0       0       0
  6232 ;;      Totals:         0       0       0       0       0
  6233 ;;Total ram usage:        0 bytes
  6234 ;; Hardware stack levels used:    1
  6235 ;; Hardware stack levels required when called:    2
  6236 ;; This function calls:
  6237 ;;		_Lcd8_Cmd
  6238 ;; This function is called by:
  6239 ;;		_main
  6240 ;;		_initial_State
  6241 ;;		_checkRFID
  6242 ;; This function uses a non-reentrant model
  6243 ;;
  6244                           psect	text902
  6245                           	file	"lcd.h"
  6246                           	line	74
  6247                           	global	__size_of_Lcd8_Clear
  6248  0007                     	__size_of_Lcd8_Clear	equ	__end_of_Lcd8_Clear-_Lcd8_Clear
  6249                           	
  6250  08FC                     _Lcd8_Clear:	
  6251                           	opt	stack 3
  6252                           ; Regs used in _Lcd8_Clear: [wreg+status,2+status,0+pclath+cstack]
  6253                           	line	75
  6254                           	
  6255  08FC                     l5079:	
  6256                           ;lcd.h: 75: Lcd8_Cmd(1);
  6257  08FC  3001               	movlw	(01h)
  6258  08FD  160A  118A  2282   	fcall	_Lcd8_Cmd
              120A  158A         
  6259                           	line	76
  6260                           	
  6261  0902                     l725:	
  6262  0902  0008               	return
  6263                           	opt stack 0
  6264                           GLOBAL	__end_of_Lcd8_Clear
  6265  0903                     	__end_of_Lcd8_Clear:
  6266 ;; =============== function _Lcd8_Clear ends ============
  6267                           
  6268                           	signat	_Lcd8_Clear,90
  6269                           	global	_ldexp
  6270                           psect	text903,local,class=CODE,delta=2
  6271                           global __ptext903
  6272  0BC2                     __ptext903:
  6273                           
  6274 ;; *************** function _ldexp *****************
  6275 ;; Defined at:
  6276 ;;		line 278 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\frexp.c"
  6277 ;; Parameters:    Size  Location     Type
  6278 ;;  value           3   32[BANK0 ] int 
  6279 ;;  newexp          2   35[BANK0 ] int 
  6280 ;; Auto vars:     Size  Location     Type
  6281 ;;		None
  6282 ;; Return value:  Size  Location     Type
  6283 ;;                  3   32[BANK0 ] int 
  6284 ;; Registers used:
  6285 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6286 ;; Tracked objects:
  6287 ;;		On entry : 0/0
  6288 ;;		On exit  : 0/0
  6289 ;;		Unchanged: 0/0
  6290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6291 ;;      Params:         0       5       0       0       0
  6292 ;;      Locals:         0       3       0       0       0
  6293 ;;      Temps:          0       2       0       0       0
  6294 ;;      Totals:         0      10       0       0       0
  6295 ;;Total ram usage:       10 bytes
  6296 ;; Hardware stack levels used:    1
  6297 ;; Hardware stack levels required when called:    1
  6298 ;; This function calls:
  6299 ;;		___ftge
  6300 ;;		___ftneg
  6301 ;; This function is called by:
  6302 ;;		_exp
  6303 ;; This function uses a non-reentrant model
  6304 ;;
  6305                           psect	text903
  6306                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\frexp.c"
  6307                           	line	278
  6308                           	global	__size_of_ldexp
  6309  00C4                     	__size_of_ldexp	equ	__end_of_ldexp-_ldexp
  6310                           	
  6311  0BC2                     _ldexp:	
  6312                           	opt	stack 1
  6313                           ; Regs used in _ldexp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6314                           	line	279
  6315                           	
  6316  0BC2                     l5029:	
  6317  0BC2  1283               	bcf	status, 5	;RP0=0, select bank0
  6318  0BC3  1303               	bcf	status, 6	;RP1=0, select bank0
  6319  0BC4  0842               	movf	(ldexp@value+2),w
  6320  0BC5  0441               	iorwf	(ldexp@value+1),w
  6321  0BC6  0440               	iorwf	(ldexp@value),w
  6322  0BC7  1D03               	skipz
  6323  0BC8  2BCA               	goto	u4521
  6324  0BC9  2BCB               	goto	u4520
  6325  0BCA                     u4521:
  6326  0BCA  2BD3               	goto	l5035
  6327  0BCB                     u4520:
  6328                           	line	280
  6329                           	
  6330  0BCB                     l5031:	
  6331  0BCB  3000               	movlw	0x0
  6332  0BCC  00C0               	movwf	(?_ldexp)
  6333  0BCD  3000               	movlw	0x0
  6334  0BCE  00C1               	movwf	(?_ldexp+1)
  6335  0BCF  3000               	movlw	0x0
  6336  0BD0  00C2               	movwf	(?_ldexp+2)
  6337  0BD1  2C85               	goto	l1992
  6338                           	
  6339  0BD2                     l5033:	
  6340  0BD2  2C85               	goto	l1992
  6341                           	
  6342  0BD3                     l1991:	
  6343                           	line	282
  6344                           	
  6345  0BD3                     l5035:	
  6346  0BD3  0842               	movf	0+(ldexp@value)+02h,w
  6347  0BD4  397F               	andlw	(1<<7)-1
  6348  0BD5  00C5               	movwf	(??_ldexp+0)+0
  6349  0BD6  01C6               	clrf	(??_ldexp+0)+0+1
  6350  0BD7  3001               	movlw	01h
  6351  0BD8  00FF               	movwf	btemp+1
  6352  0BD9                     u4535:
  6353  0BD9  1003               	clrc
  6354  0BDA  0DC5               	rlf	(??_ldexp+0)+0,f
  6355  0BDB  0DC6               	rlf	(??_ldexp+0)+1,f
  6356  0BDC  0BFF               	decfsz	btemp+1,f
  6357  0BDD  2BD9               	goto	u4535
  6358  0BDE  0845               	movf	0+(??_ldexp+0)+0,w
  6359  0BDF  07C3               	addwf	(ldexp@newexp),f
  6360  0BE0  1803               	skipnc
  6361  0BE1  0AC4               	incf	(ldexp@newexp+1),f
  6362  0BE2  0846               	movf	1+(??_ldexp+0)+0,w
  6363  0BE3  07C4               	addwf	(ldexp@newexp+1),f
  6364                           	line	283
  6365                           	
  6366  0BE4                     l5037:	
  6367  0BE4  0D41               	rlf	0+(ldexp@value)+01h,w
  6368  0BE5  0D41               	rlf	0+(ldexp@value)+01h,w
  6369  0BE6  3901               	andlw	1
  6370  0BE7  00C5               	movwf	(??_ldexp+0)+0
  6371  0BE8  01C6               	clrf	(??_ldexp+0)+0+1
  6372  0BE9  0845               	movf	0+(??_ldexp+0)+0,w
  6373  0BEA  07C3               	addwf	(ldexp@newexp),f
  6374  0BEB  1803               	skipnc
  6375  0BEC  0AC4               	incf	(ldexp@newexp+1),f
  6376  0BED  0846               	movf	1+(??_ldexp+0)+0,w
  6377  0BEE  07C4               	addwf	(ldexp@newexp+1),f
  6378                           	line	287
  6379                           	
  6380  0BEF                     l5039:	
  6381  0BEF  1FC4               	btfss	(ldexp@newexp+1),7
  6382  0BF0  2BF2               	goto	u4541
  6383  0BF1  2BF3               	goto	u4540
  6384  0BF2                     u4541:
  6385  0BF2  2C00               	goto	l5047
  6386  0BF3                     u4540:
  6387                           	line	288
  6388                           	
  6389  0BF3                     l5041:	
  6390  0BF3  3022               	movlw	low(022h)
  6391  0BF4  00EE               	movwf	(_errno)
  6392  0BF5  3000               	movlw	high(022h)
  6393  0BF6  00EF               	movwf	((_errno))+1
  6394                           	line	289
  6395  0BF7  3000               	movlw	0x0
  6396  0BF8  00C0               	movwf	(?_ldexp)
  6397  0BF9  3000               	movlw	0x0
  6398  0BFA  00C1               	movwf	(?_ldexp+1)
  6399  0BFB  3000               	movlw	0x0
  6400  0BFC  00C2               	movwf	(?_ldexp+2)
  6401  0BFD  2C85               	goto	l1992
  6402                           	
  6403  0BFE                     l5043:	
  6404  0BFE  2C85               	goto	l1992
  6405                           	line	290
  6406                           	
  6407  0BFF                     l5045:	
  6408  0BFF  2C84               	goto	l5075
  6409                           	line	291
  6410                           	
  6411  0C00                     l1993:	
  6412                           	
  6413  0C00                     l5047:	
  6414  0C00  0844               	movf	(ldexp@newexp+1),w
  6415  0C01  3A80               	xorlw	80h
  6416  0C02  00FF               	movwf	btemp+1
  6417  0C03  3081               	movlw	(high(0100h))^80h
  6418  0C04  027F               	subwf	btemp+1,w
  6419  0C05  1D03               	skipz
  6420  0C06  2C09               	goto	u4555
  6421  0C07  3000               	movlw	low(0100h)
  6422  0C08  0243               	subwf	(ldexp@newexp),w
  6423  0C09                     u4555:
  6424                           
  6425  0C09  1C03               	skipc
  6426  0C0A  2C0C               	goto	u4551
  6427  0C0B  2C0D               	goto	u4550
  6428  0C0C                     u4551:
  6429  0C0C  2C66               	goto	l5071
  6430  0C0D                     u4550:
  6431                           	line	292
  6432                           	
  6433  0C0D                     l5049:	
  6434  0C0D  3022               	movlw	low(022h)
  6435  0C0E  1283               	bcf	status, 5	;RP0=0, select bank0
  6436  0C0F  1303               	bcf	status, 6	;RP1=0, select bank0
  6437  0C10  00EE               	movwf	(_errno)
  6438  0C11  3000               	movlw	high(022h)
  6439  0C12  00EF               	movwf	((_errno))+1
  6440                           	line	293
  6441                           	
  6442  0C13                     l5051:	
  6443  0C13  0840               	movf	(ldexp@value),w
  6444  0C14  00F0               	movwf	(?___ftge)
  6445  0C15  0841               	movf	(ldexp@value+1),w
  6446  0C16  00F1               	movwf	(?___ftge+1)
  6447  0C17  0842               	movf	(ldexp@value+2),w
  6448  0C18  00F2               	movwf	(?___ftge+2)
  6449  0C19  3000               	movlw	0x0
  6450  0C1A  00F3               	movwf	0+(?___ftge)+03h
  6451  0C1B  3000               	movlw	0x0
  6452  0C1C  00F4               	movwf	1+(?___ftge)+03h
  6453  0C1D  3000               	movlw	0x0
  6454  0C1E  00F5               	movwf	2+(?___ftge)+03h
  6455  0C1F  120A  158A  2103   	fcall	___ftge
              120A  158A         
  6456  0C24  1803               	btfsc	status,0
  6457  0C25  2C27               	goto	u4561
  6458  0C26  2C28               	goto	u4560
  6459  0C27                     u4561:
  6460  0C27  2C5A               	goto	l5067
  6461  0C28                     u4560:
  6462  0C28  2C33               	goto	l5057
  6463                           	line	294
  6464                           	
  6465  0C29                     l5053:	
  6466  0C29  2C33               	goto	l5057
  6467                           	
  6468  0C2A                     l5055:	
  6469  0C2A  3000               	movlw	0x0
  6470  0C2B  1283               	bcf	status, 5	;RP0=0, select bank0
  6471  0C2C  1303               	bcf	status, 6	;RP1=0, select bank0
  6472  0C2D  00C7               	movwf	(_ldexp$1975)
  6473  0C2E  3080               	movlw	0x80
  6474  0C2F  00C8               	movwf	(_ldexp$1975+1)
  6475  0C30  307F               	movlw	0x7f
  6476  0C31  00C9               	movwf	(_ldexp$1975+2)
  6477  0C32  2C3C               	goto	l5059
  6478                           	
  6479  0C33                     l1998:	
  6480                           	
  6481  0C33                     l5057:	
  6482  0C33  30FF               	movlw	0xff
  6483  0C34  1283               	bcf	status, 5	;RP0=0, select bank0
  6484  0C35  1303               	bcf	status, 6	;RP1=0, select bank0
  6485  0C36  00C7               	movwf	(_ldexp$1975)
  6486  0C37  307F               	movlw	0x7f
  6487  0C38  00C8               	movwf	(_ldexp$1975+1)
  6488  0C39  307F               	movlw	0x7f
  6489  0C3A  00C9               	movwf	(_ldexp$1975+2)
  6490  0C3B  2C3C               	goto	l5059
  6491                           	
  6492  0C3C                     l2000:	
  6493                           	
  6494  0C3C                     l5059:	
  6495  0C3C  0847               	movf	(_ldexp$1975),w
  6496  0C3D  00F8               	movwf	(?___ftneg)
  6497  0C3E  0848               	movf	(_ldexp$1975+1),w
  6498  0C3F  00F9               	movwf	(?___ftneg+1)
  6499  0C40  0849               	movf	(_ldexp$1975+2),w
  6500  0C41  00FA               	movwf	(?___ftneg+2)
  6501  0C42  160A  118A  224B   	fcall	___ftneg
              120A  158A         
  6502  0C47  0878               	movf	(0+(?___ftneg)),w
  6503  0C48  1283               	bcf	status, 5	;RP0=0, select bank0
  6504  0C49  1303               	bcf	status, 6	;RP1=0, select bank0
  6505  0C4A  00C0               	movwf	(?_ldexp)
  6506  0C4B  0879               	movf	(1+(?___ftneg)),w
  6507  0C4C  00C1               	movwf	(?_ldexp+1)
  6508  0C4D  087A               	movf	(2+(?___ftneg)),w
  6509  0C4E  00C2               	movwf	(?_ldexp+2)
  6510  0C4F  2C85               	goto	l1992
  6511                           	
  6512  0C50                     l5061:	
  6513  0C50  2C85               	goto	l1992
  6514                           	
  6515  0C51                     l5063:	
  6516  0C51  2C84               	goto	l5075
  6517                           	line	295
  6518                           	
  6519  0C52                     l1996:	
  6520                           	line	296
  6521  0C52  2C5A               	goto	l5067
  6522                           	
  6523  0C53                     l5065:	
  6524  0C53  3000               	movlw	0x0
  6525  0C54  00C0               	movwf	(?_ldexp)
  6526  0C55  3080               	movlw	0x80
  6527  0C56  00C1               	movwf	(?_ldexp+1)
  6528  0C57  307F               	movlw	0x7f
  6529  0C58  00C2               	movwf	(?_ldexp+2)
  6530  0C59  2C85               	goto	l1992
  6531                           	
  6532  0C5A                     l2003:	
  6533                           	
  6534  0C5A                     l5067:	
  6535  0C5A  30FF               	movlw	0xff
  6536  0C5B  1283               	bcf	status, 5	;RP0=0, select bank0
  6537  0C5C  1303               	bcf	status, 6	;RP1=0, select bank0
  6538  0C5D  00C0               	movwf	(?_ldexp)
  6539  0C5E  307F               	movlw	0x7f
  6540  0C5F  00C1               	movwf	(?_ldexp+1)
  6541  0C60  307F               	movlw	0x7f
  6542  0C61  00C2               	movwf	(?_ldexp+2)
  6543  0C62  2C85               	goto	l1992
  6544                           	
  6545  0C63                     l2005:	
  6546  0C63  2C85               	goto	l1992
  6547                           	
  6548  0C64                     l5069:	
  6549  0C64  2C85               	goto	l1992
  6550                           	
  6551  0C65                     l2001:	
  6552                           	line	297
  6553  0C65  2C84               	goto	l5075
  6554                           	line	298
  6555                           	
  6556  0C66                     l1995:	
  6557                           	line	300
  6558                           	
  6559  0C66                     l5071:	
  6560  0C66  1283               	bcf	status, 5	;RP0=0, select bank0
  6561  0C67  1303               	bcf	status, 6	;RP1=0, select bank0
  6562  0C68  0844               	movf	(ldexp@newexp+1),w
  6563  0C69  00C6               	movwf	(??_ldexp+0)+0+1
  6564  0C6A  0843               	movf	(ldexp@newexp),w
  6565  0C6B  00C5               	movwf	(??_ldexp+0)+0
  6566  0C6C  3001               	movlw	01h
  6567  0C6D  00FF               	movwf	btemp+1
  6568  0C6E                     u4575:
  6569  0C6E  0D46               	rlf	(??_ldexp+0)+1,w
  6570  0C6F  0CC6               	rrf	(??_ldexp+0)+1,f
  6571  0C70  0CC5               	rrf	(??_ldexp+0)+0,f
  6572  0C71  0BFF               	decfsz	btemp+1,f
  6573  0C72  2C6E               	goto	u4575
  6574  0C73  0842               	movf	0+(ldexp@value)+02h,w
  6575  0C74  0645               	xorwf	0+(??_ldexp+0)+0,w
  6576  0C75  3980               	andlw	not ((1<<7)-1)
  6577  0C76  0645               	xorwf	0+(??_ldexp+0)+0,w
  6578  0C77  00C2               	movwf	0+(ldexp@value)+02h
  6579                           	line	301
  6580                           	
  6581  0C78                     l5073:	
  6582  0C78  0843               	movf	(ldexp@newexp),w
  6583  0C79  3901               	andlw	01h
  6584  0C7A  00C5               	movwf	(??_ldexp+0)+0
  6585  0C7B  0CC5               	rrf	(??_ldexp+0)+0,f
  6586  0C7C  0CC5               	rrf	(??_ldexp+0)+0,f
  6587  0C7D  0841               	movf	0+(ldexp@value)+01h,w
  6588  0C7E  0645               	xorwf	(??_ldexp+0)+0,w
  6589  0C7F  397F               	andlw	not (((1<<1)-1)<<7)
  6590  0C80  0645               	xorwf	(??_ldexp+0)+0,w
  6591  0C81  00C1               	movwf	0+(ldexp@value)+01h
  6592  0C82  2C84               	goto	l5075
  6593                           	line	305
  6594                           	
  6595  0C83                     l2006:	
  6596  0C83  2C84               	goto	l5075
  6597                           	
  6598  0C84                     l1994:	
  6599                           	line	306
  6600                           	
  6601  0C84                     l5075:	
  6602  0C84  2C85               	goto	l1992
  6603                           	
  6604  0C85                     l5077:	
  6605                           	line	307
  6606                           	
  6607  0C85                     l1992:	
  6608  0C85  0008               	return
  6609                           	opt stack 0
  6610                           GLOBAL	__end_of_ldexp
  6611  0C86                     	__end_of_ldexp:
  6612 ;; =============== function _ldexp ends ============
  6613                           
  6614                           	signat	_ldexp,8315
  6615                           	global	___lltoft
  6616                           psect	text904,local,class=CODE,delta=2
  6617                           global __ptext904
  6618  139A                     __ptext904:
  6619                           
  6620 ;; *************** function ___lltoft *****************
  6621 ;; Defined at:
  6622 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lltoft.c"
  6623 ;; Parameters:    Size  Location     Type
  6624 ;;  c               4    8[COMMON] unsigned long 
  6625 ;; Auto vars:     Size  Location     Type
  6626 ;;  exp             1   13[COMMON] unsigned char 
  6627 ;; Return value:  Size  Location     Type
  6628 ;;                  3    8[COMMON] float 
  6629 ;; Registers used:
  6630 ;;		wreg, status,2, status,0, pclath, cstack
  6631 ;; Tracked objects:
  6632 ;;		On entry : 0/0
  6633 ;;		On exit  : 0/0
  6634 ;;		Unchanged: 0/0
  6635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6636 ;;      Params:         4       0       0       0       0
  6637 ;;      Locals:         1       0       0       0       0
  6638 ;;      Temps:          1       0       0       0       0
  6639 ;;      Totals:         6       0       0       0       0
  6640 ;;Total ram usage:        6 bytes
  6641 ;; Hardware stack levels used:    1
  6642 ;; Hardware stack levels required when called:    1
  6643 ;; This function calls:
  6644 ;;		___ftpack
  6645 ;; This function is called by:
  6646 ;;		_pow
  6647 ;; This function uses a non-reentrant model
  6648 ;;
  6649                           psect	text904
  6650                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lltoft.c"
  6651                           	line	36
  6652                           	global	__size_of___lltoft
  6653  0032                     	__size_of___lltoft	equ	__end_of___lltoft-___lltoft
  6654                           	
  6655  139A                     ___lltoft:	
  6656                           	opt	stack 2
  6657                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  6658                           	line	38
  6659                           	
  6660  139A                     l5019:	
  6661  139A  308E               	movlw	(08Eh)
  6662  139B  00FC               	movwf	(??___lltoft+0)+0
  6663  139C  087C               	movf	(??___lltoft+0)+0,w
  6664  139D  00FD               	movwf	(___lltoft@exp)
  6665                           	line	41
  6666  139E  2BAD               	goto	l5023
  6667                           	
  6668  139F                     l1839:	
  6669                           	line	42
  6670                           	
  6671  139F                     l5021:	
  6672  139F  3001               	movlw	01h
  6673  13A0                     u4505:
  6674  13A0  1003               	clrc
  6675  13A1  0CFB               	rrf	(___lltoft@c+3),f
  6676  13A2  0CFA               	rrf	(___lltoft@c+2),f
  6677  13A3  0CF9               	rrf	(___lltoft@c+1),f
  6678  13A4  0CF8               	rrf	(___lltoft@c),f
  6679  13A5  3EFF               	addlw	-1
  6680  13A6  1D03               	skipz
  6681  13A7  2BA0               	goto	u4505
  6682                           
  6683                           	line	43
  6684  13A8  3001               	movlw	(01h)
  6685  13A9  00FC               	movwf	(??___lltoft+0)+0
  6686  13AA  087C               	movf	(??___lltoft+0)+0,w
  6687  13AB  07FD               	addwf	(___lltoft@exp),f
  6688  13AC  2BAD               	goto	l5023
  6689                           	line	44
  6690                           	
  6691  13AD                     l1838:	
  6692                           	line	41
  6693                           	
  6694  13AD                     l5023:	
  6695  13AD  30FF               	movlw	high highword(-16777216)
  6696  13AE  057B               	andwf	(___lltoft@c+3),w
  6697  13AF  1D03               	btfss	status,2
  6698  13B0  2BB2               	goto	u4511
  6699  13B1  2BB3               	goto	u4510
  6700  13B2                     u4511:
  6701  13B2  2B9F               	goto	l5021
  6702  13B3                     u4510:
  6703  13B3  2BB4               	goto	l5025
  6704                           	
  6705  13B4                     l1840:	
  6706                           	line	45
  6707                           	
  6708  13B4                     l5025:	
  6709  13B4  0878               	movf	(___lltoft@c),w
  6710  13B5  00F0               	movwf	(?___ftpack)
  6711  13B6  0879               	movf	(___lltoft@c+1),w
  6712  13B7  00F1               	movwf	(?___ftpack+1)
  6713  13B8  087A               	movf	(___lltoft@c+2),w
  6714  13B9  00F2               	movwf	(?___ftpack+2)
  6715  13BA  087D               	movf	(___lltoft@exp),w
  6716  13BB  00FC               	movwf	(??___lltoft+0)+0
  6717  13BC  087C               	movf	(??___lltoft+0)+0,w
  6718  13BD  00F3               	movwf	0+(?___ftpack)+03h
  6719  13BE  01F4               	clrf	0+(?___ftpack)+04h
  6720  13BF  160A  118A  2785   	fcall	___ftpack
              160A  118A         
  6721  13C4  0870               	movf	(0+(?___ftpack)),w
  6722  13C5  00F8               	movwf	(?___lltoft)
  6723  13C6  0871               	movf	(1+(?___ftpack)),w
  6724  13C7  00F9               	movwf	(?___lltoft+1)
  6725  13C8  0872               	movf	(2+(?___ftpack)),w
  6726  13C9  00FA               	movwf	(?___lltoft+2)
  6727  13CA  2BCB               	goto	l1841
  6728                           	
  6729  13CB                     l5027:	
  6730                           	line	46
  6731                           	
  6732  13CB                     l1841:	
  6733  13CB  0008               	return
  6734                           	opt stack 0
  6735                           GLOBAL	__end_of___lltoft
  6736  13CC                     	__end_of___lltoft:
  6737 ;; =============== function ___lltoft ends ============
  6738                           
  6739                           	signat	___lltoft,4219
  6740                           	global	___altoft
  6741                           psect	text905,local,class=CODE,delta=2
  6742                           global __ptext905
  6743  1552                     __ptext905:
  6744                           
  6745 ;; *************** function ___altoft *****************
  6746 ;; Defined at:
  6747 ;;		line 43 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\altoft.c"
  6748 ;; Parameters:    Size  Location     Type
  6749 ;;  c               4    0[BANK0 ] long 
  6750 ;; Auto vars:     Size  Location     Type
  6751 ;;  sign            1    7[BANK0 ] unsigned char 
  6752 ;;  exp             1    6[BANK0 ] unsigned char 
  6753 ;; Return value:  Size  Location     Type
  6754 ;;                  3    0[BANK0 ] float 
  6755 ;; Registers used:
  6756 ;;		wreg, status,2, status,0, pclath, cstack
  6757 ;; Tracked objects:
  6758 ;;		On entry : 0/0
  6759 ;;		On exit  : 0/0
  6760 ;;		Unchanged: 0/0
  6761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6762 ;;      Params:         0       4       0       0       0
  6763 ;;      Locals:         0       2       0       0       0
  6764 ;;      Temps:          0       2       0       0       0
  6765 ;;      Totals:         0       8       0       0       0
  6766 ;;Total ram usage:        8 bytes
  6767 ;; Hardware stack levels used:    1
  6768 ;; Hardware stack levels required when called:    1
  6769 ;; This function calls:
  6770 ;;		___ftpack
  6771 ;; This function is called by:
  6772 ;;		_floor
  6773 ;; This function uses a non-reentrant model
  6774 ;;
  6775                           psect	text905
  6776                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\altoft.c"
  6777                           	line	43
  6778                           	global	__size_of___altoft
  6779  004D                     	__size_of___altoft	equ	__end_of___altoft-___altoft
  6780                           	
  6781  1552                     ___altoft:	
  6782                           	opt	stack 0
  6783                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  6784                           	line	45
  6785                           	
  6786  1552                     l5001:	
  6787  1552  1283               	bcf	status, 5	;RP0=0, select bank0
  6788  1553  1303               	bcf	status, 6	;RP1=0, select bank0
  6789  1554  01A7               	clrf	(___altoft@sign)
  6790                           	line	46
  6791                           	
  6792  1555                     l5003:	
  6793  1555  308E               	movlw	(08Eh)
  6794  1556  00A4               	movwf	(??___altoft+0)+0
  6795  1557  0824               	movf	(??___altoft+0)+0,w
  6796  1558  00A6               	movwf	(___altoft@exp)
  6797                           	line	47
  6798                           	
  6799  1559                     l5005:	
  6800  1559  1FA3               	btfss	(___altoft@c+3),7
  6801  155A  2D5C               	goto	u4471
  6802  155B  2D5D               	goto	u4470
  6803  155C                     u4471:
  6804  155C  2D7B               	goto	l5013
  6805  155D                     u4470:
  6806                           	line	48
  6807                           	
  6808  155D                     l5007:	
  6809  155D  09A0               	comf	(___altoft@c),f
  6810  155E  09A1               	comf	(___altoft@c+1),f
  6811  155F  09A2               	comf	(___altoft@c+2),f
  6812  1560  09A3               	comf	(___altoft@c+3),f
  6813  1561  0AA0               	incf	(___altoft@c),f
  6814  1562  1903               	skipnz
  6815  1563  0AA1               	incf	(___altoft@c+1),f
  6816  1564  1903               	skipnz
  6817  1565  0AA2               	incf	(___altoft@c+2),f
  6818  1566  1903               	skipnz
  6819  1567  0AA3               	incf	(___altoft@c+3),f
  6820                           	line	49
  6821                           	
  6822  1568                     l5009:	
  6823  1568  01A7               	clrf	(___altoft@sign)
  6824  1569  1403               	bsf	status,0
  6825  156A  0DA7               	rlf	(___altoft@sign),f
  6826  156B  2D7B               	goto	l5013
  6827                           	line	50
  6828                           	
  6829  156C                     l1829:	
  6830                           	line	52
  6831  156C  2D7B               	goto	l5013
  6832                           	
  6833  156D                     l1831:	
  6834                           	line	53
  6835                           	
  6836  156D                     l5011:	
  6837  156D  3001               	movlw	01h
  6838  156E                     u4485:
  6839  156E  1003               	clrc
  6840  156F  0CA3               	rrf	(___altoft@c+3),f
  6841  1570  0CA2               	rrf	(___altoft@c+2),f
  6842  1571  0CA1               	rrf	(___altoft@c+1),f
  6843  1572  0CA0               	rrf	(___altoft@c),f
  6844  1573  3EFF               	addlw	-1
  6845  1574  1D03               	skipz
  6846  1575  2D6E               	goto	u4485
  6847                           
  6848                           	line	54
  6849  1576  3001               	movlw	(01h)
  6850  1577  00A4               	movwf	(??___altoft+0)+0
  6851  1578  0824               	movf	(??___altoft+0)+0,w
  6852  1579  07A6               	addwf	(___altoft@exp),f
  6853  157A  2D7B               	goto	l5013
  6854                           	line	55
  6855                           	
  6856  157B                     l1830:	
  6857                           	line	52
  6858                           	
  6859  157B                     l5013:	
  6860  157B  30FF               	movlw	high highword(-16777216)
  6861  157C  0523               	andwf	(___altoft@c+3),w
  6862  157D  1D03               	btfss	status,2
  6863  157E  2D80               	goto	u4491
  6864  157F  2D81               	goto	u4490
  6865  1580                     u4491:
  6866  1580  2D6D               	goto	l5011
  6867  1581                     u4490:
  6868  1581  2D82               	goto	l5015
  6869                           	
  6870  1582                     l1832:	
  6871                           	line	56
  6872                           	
  6873  1582                     l5015:	
  6874  1582  0820               	movf	(___altoft@c),w
  6875  1583  00F0               	movwf	(?___ftpack)
  6876  1584  0821               	movf	(___altoft@c+1),w
  6877  1585  00F1               	movwf	(?___ftpack+1)
  6878  1586  0822               	movf	(___altoft@c+2),w
  6879  1587  00F2               	movwf	(?___ftpack+2)
  6880  1588  0826               	movf	(___altoft@exp),w
  6881  1589  00A4               	movwf	(??___altoft+0)+0
  6882  158A  0824               	movf	(??___altoft+0)+0,w
  6883  158B  00F3               	movwf	0+(?___ftpack)+03h
  6884  158C  0827               	movf	(___altoft@sign),w
  6885  158D  00A5               	movwf	(??___altoft+1)+0
  6886  158E  0825               	movf	(??___altoft+1)+0,w
  6887  158F  00F4               	movwf	0+(?___ftpack)+04h
  6888  1590  160A  118A  2785   	fcall	___ftpack
              160A  118A         
  6889  1595  0870               	movf	(0+(?___ftpack)),w
  6890  1596  1283               	bcf	status, 5	;RP0=0, select bank0
  6891  1597  1303               	bcf	status, 6	;RP1=0, select bank0
  6892  1598  00A0               	movwf	(?___altoft)
  6893  1599  0871               	movf	(1+(?___ftpack)),w
  6894  159A  00A1               	movwf	(?___altoft+1)
  6895  159B  0872               	movf	(2+(?___ftpack)),w
  6896  159C  00A2               	movwf	(?___altoft+2)
  6897  159D  2D9E               	goto	l1833
  6898                           	
  6899  159E                     l5017:	
  6900                           	line	57
  6901                           	
  6902  159E                     l1833:	
  6903  159E  0008               	return
  6904                           	opt stack 0
  6905                           GLOBAL	__end_of___altoft
  6906  159F                     	__end_of___altoft:
  6907 ;; =============== function ___altoft ends ============
  6908                           
  6909                           	signat	___altoft,4219
  6910                           	global	___awtoft
  6911                           psect	text906,local,class=CODE,delta=2
  6912                           global __ptext906
  6913  1311                     __ptext906:
  6914                           
  6915 ;; *************** function ___awtoft *****************
  6916 ;; Defined at:
  6917 ;;		line 33 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awtoft.c"
  6918 ;; Parameters:    Size  Location     Type
  6919 ;;  c               2   11[COMMON] int 
  6920 ;; Auto vars:     Size  Location     Type
  6921 ;;  sign            1    2[BANK0 ] unsigned char 
  6922 ;; Return value:  Size  Location     Type
  6923 ;;                  3   11[COMMON] float 
  6924 ;; Registers used:
  6925 ;;		wreg, status,2, status,0, pclath, cstack
  6926 ;; Tracked objects:
  6927 ;;		On entry : 0/0
  6928 ;;		On exit  : 0/0
  6929 ;;		Unchanged: 0/0
  6930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6931 ;;      Params:         3       0       0       0       0
  6932 ;;      Locals:         0       1       0       0       0
  6933 ;;      Temps:          0       2       0       0       0
  6934 ;;      Totals:         3       3       0       0       0
  6935 ;;Total ram usage:        6 bytes
  6936 ;; Hardware stack levels used:    1
  6937 ;; Hardware stack levels required when called:    1
  6938 ;; This function calls:
  6939 ;;		___ftpack
  6940 ;; This function is called by:
  6941 ;;		_ftoa
  6942 ;;		_present
  6943 ;;		_absent
  6944 ;;		_exp
  6945 ;;		_log
  6946 ;; This function uses a non-reentrant model
  6947 ;;
  6948                           psect	text906
  6949                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awtoft.c"
  6950                           	line	33
  6951                           	global	__size_of___awtoft
  6952  002A                     	__size_of___awtoft	equ	__end_of___awtoft-___awtoft
  6953                           	
  6954  1311                     ___awtoft:	
  6955                           	opt	stack 1
  6956                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  6957                           	line	36
  6958                           	
  6959  1311                     l4993:	
  6960  1311  1283               	bcf	status, 5	;RP0=0, select bank0
  6961  1312  1303               	bcf	status, 6	;RP1=0, select bank0
  6962  1313  01A2               	clrf	(___awtoft@sign)
  6963                           	line	37
  6964  1314  1FFC               	btfss	(___awtoft@c+1),7
  6965  1315  2B17               	goto	u4461
  6966  1316  2B18               	goto	u4460
  6967  1317                     u4461:
  6968  1317  2B21               	goto	l4997
  6969  1318                     u4460:
  6970                           	line	38
  6971                           	
  6972  1318                     l4995:	
  6973  1318  09FB               	comf	(___awtoft@c),f
  6974  1319  09FC               	comf	(___awtoft@c+1),f
  6975  131A  0AFB               	incf	(___awtoft@c),f
  6976  131B  1903               	skipnz
  6977  131C  0AFC               	incf	(___awtoft@c+1),f
  6978                           	line	39
  6979  131D  01A2               	clrf	(___awtoft@sign)
  6980  131E  1403               	bsf	status,0
  6981  131F  0DA2               	rlf	(___awtoft@sign),f
  6982  1320  2B21               	goto	l4997
  6983                           	line	40
  6984                           	
  6985  1321                     l1737:	
  6986                           	line	41
  6987                           	
  6988  1321                     l4997:	
  6989  1321  087B               	movf	(___awtoft@c),w
  6990  1322  00F0               	movwf	(?___ftpack)
  6991  1323  087C               	movf	(___awtoft@c+1),w
  6992  1324  00F1               	movwf	(?___ftpack+1)
  6993  1325  01F2               	clrf	(?___ftpack+2)
  6994  1326  308E               	movlw	(08Eh)
  6995  1327  00A0               	movwf	(??___awtoft+0)+0
  6996  1328  0820               	movf	(??___awtoft+0)+0,w
  6997  1329  00F3               	movwf	0+(?___ftpack)+03h
  6998  132A  0822               	movf	(___awtoft@sign),w
  6999  132B  00A1               	movwf	(??___awtoft+1)+0
  7000  132C  0821               	movf	(??___awtoft+1)+0,w
  7001  132D  00F4               	movwf	0+(?___ftpack)+04h
  7002  132E  160A  118A  2785   	fcall	___ftpack
              160A  118A         
  7003  1333  0870               	movf	(0+(?___ftpack)),w
  7004  1334  00FB               	movwf	(?___awtoft)
  7005  1335  0871               	movf	(1+(?___ftpack)),w
  7006  1336  00FC               	movwf	(?___awtoft+1)
  7007  1337  0872               	movf	(2+(?___ftpack)),w
  7008  1338  00FD               	movwf	(?___awtoft+2)
  7009  1339  2B3A               	goto	l1738
  7010                           	
  7011  133A                     l4999:	
  7012                           	line	42
  7013                           	
  7014  133A                     l1738:	
  7015  133A  0008               	return
  7016                           	opt stack 0
  7017                           GLOBAL	__end_of___awtoft
  7018  133B                     	__end_of___awtoft:
  7019 ;; =============== function ___awtoft ends ============
  7020                           
  7021                           	signat	___awtoft,4219
  7022                           	global	___ftmul
  7023                           psect	text907,local,class=CODE,delta=2
  7024                           global __ptext907
  7025  0E1F                     __ptext907:
  7026                           
  7027 ;; *************** function ___ftmul *****************
  7028 ;; Defined at:
  7029 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftmul.c"
  7030 ;; Parameters:    Size  Location     Type
  7031 ;;  f1              3    3[BANK0 ] float 
  7032 ;;  f2              3    6[BANK0 ] float 
  7033 ;; Auto vars:     Size  Location     Type
  7034 ;;  f3_as_produc    3   14[BANK0 ] unsigned um
  7035 ;;  sign            1   18[BANK0 ] unsigned char 
  7036 ;;  cntr            1   17[BANK0 ] unsigned char 
  7037 ;;  exp             1   13[BANK0 ] unsigned char 
  7038 ;; Return value:  Size  Location     Type
  7039 ;;                  3    3[BANK0 ] float 
  7040 ;; Registers used:
  7041 ;;		wreg, status,2, status,0, pclath, cstack
  7042 ;; Tracked objects:
  7043 ;;		On entry : 0/0
  7044 ;;		On exit  : 0/0
  7045 ;;		Unchanged: 0/0
  7046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7047 ;;      Params:         0       6       0       0       0
  7048 ;;      Locals:         0       6       0       0       0
  7049 ;;      Temps:          0       4       0       0       0
  7050 ;;      Totals:         0      16       0       0       0
  7051 ;;Total ram usage:       16 bytes
  7052 ;; Hardware stack levels used:    1
  7053 ;; Hardware stack levels required when called:    1
  7054 ;; This function calls:
  7055 ;;		___ftpack
  7056 ;; This function is called by:
  7057 ;;		_ftoa
  7058 ;;		_pow
  7059 ;;		_exp
  7060 ;;		_log
  7061 ;;		_eval_poly
  7062 ;;		_log10
  7063 ;; This function uses a non-reentrant model
  7064 ;;
  7065                           psect	text907
  7066                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftmul.c"
  7067                           	line	52
  7068                           	global	__size_of___ftmul
  7069  00EE                     	__size_of___ftmul	equ	__end_of___ftmul-___ftmul
  7070                           	
  7071  0E1F                     ___ftmul:	
  7072                           	opt	stack 3
  7073                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7074                           	line	56
  7075                           	
  7076  0E1F                     l4943:	
  7077  0E1F  1283               	bcf	status, 5	;RP0=0, select bank0
  7078  0E20  1303               	bcf	status, 6	;RP1=0, select bank0
  7079  0E21  0823               	movf	(___ftmul@f1),w
  7080  0E22  00A9               	movwf	((??___ftmul+0)+0)
  7081  0E23  0824               	movf	(___ftmul@f1+1),w
  7082  0E24  00AA               	movwf	((??___ftmul+0)+0+1)
  7083  0E25  0825               	movf	(___ftmul@f1+2),w
  7084  0E26  00AB               	movwf	((??___ftmul+0)+0+2)
  7085  0E27  1003               	clrc
  7086  0E28  0D2A               	rlf	(??___ftmul+0)+1,w
  7087  0E29  0D2B               	rlf	(??___ftmul+0)+2,w
  7088  0E2A  00AC               	movwf	(??___ftmul+3)+0
  7089  0E2B  082C               	movf	(??___ftmul+3)+0,w
  7090  0E2C  00AD               	movwf	(___ftmul@exp)
  7091  0E2D  08AD               	movf	((___ftmul@exp)),f
  7092  0E2E  1D03               	skipz
  7093  0E2F  2E31               	goto	u4321
  7094  0E30  2E32               	goto	u4320
  7095  0E31                     u4321:
  7096  0E31  2E3A               	goto	l4949
  7097  0E32                     u4320:
  7098                           	line	57
  7099                           	
  7100  0E32                     l4945:	
  7101  0E32  3000               	movlw	0x0
  7102  0E33  00A3               	movwf	(?___ftmul)
  7103  0E34  3000               	movlw	0x0
  7104  0E35  00A4               	movwf	(?___ftmul+1)
  7105  0E36  3000               	movlw	0x0
  7106  0E37  00A5               	movwf	(?___ftmul+2)
  7107  0E38  2F0C               	goto	l1700
  7108                           	
  7109  0E39                     l4947:	
  7110  0E39  2F0C               	goto	l1700
  7111                           	
  7112  0E3A                     l1699:	
  7113                           	line	58
  7114                           	
  7115  0E3A                     l4949:	
  7116  0E3A  0826               	movf	(___ftmul@f2),w
  7117  0E3B  00A9               	movwf	((??___ftmul+0)+0)
  7118  0E3C  0827               	movf	(___ftmul@f2+1),w
  7119  0E3D  00AA               	movwf	((??___ftmul+0)+0+1)
  7120  0E3E  0828               	movf	(___ftmul@f2+2),w
  7121  0E3F  00AB               	movwf	((??___ftmul+0)+0+2)
  7122  0E40  1003               	clrc
  7123  0E41  0D2A               	rlf	(??___ftmul+0)+1,w
  7124  0E42  0D2B               	rlf	(??___ftmul+0)+2,w
  7125  0E43  00AC               	movwf	(??___ftmul+3)+0
  7126  0E44  082C               	movf	(??___ftmul+3)+0,w
  7127  0E45  00B2               	movwf	(___ftmul@sign)
  7128  0E46  08B2               	movf	((___ftmul@sign)),f
  7129  0E47  1D03               	skipz
  7130  0E48  2E4A               	goto	u4331
  7131  0E49  2E4B               	goto	u4330
  7132  0E4A                     u4331:
  7133  0E4A  2E53               	goto	l4955
  7134  0E4B                     u4330:
  7135                           	line	59
  7136                           	
  7137  0E4B                     l4951:	
  7138  0E4B  3000               	movlw	0x0
  7139  0E4C  00A3               	movwf	(?___ftmul)
  7140  0E4D  3000               	movlw	0x0
  7141  0E4E  00A4               	movwf	(?___ftmul+1)
  7142  0E4F  3000               	movlw	0x0
  7143  0E50  00A5               	movwf	(?___ftmul+2)
  7144  0E51  2F0C               	goto	l1700
  7145                           	
  7146  0E52                     l4953:	
  7147  0E52  2F0C               	goto	l1700
  7148                           	
  7149  0E53                     l1701:	
  7150                           	line	60
  7151                           	
  7152  0E53                     l4955:	
  7153  0E53  0832               	movf	(___ftmul@sign),w
  7154  0E54  3E7B               	addlw	07Bh
  7155  0E55  00A9               	movwf	(??___ftmul+0)+0
  7156  0E56  0829               	movf	(??___ftmul+0)+0,w
  7157  0E57  07AD               	addwf	(___ftmul@exp),f
  7158                           	line	61
  7159  0E58  0823               	movf	(___ftmul@f1),w
  7160  0E59  00A9               	movwf	((??___ftmul+0)+0)
  7161  0E5A  0824               	movf	(___ftmul@f1+1),w
  7162  0E5B  00AA               	movwf	((??___ftmul+0)+0+1)
  7163  0E5C  0825               	movf	(___ftmul@f1+2),w
  7164  0E5D  00AB               	movwf	((??___ftmul+0)+0+2)
  7165  0E5E  3010               	movlw	010h
  7166  0E5F                     u4345:
  7167  0E5F  1003               	clrc
  7168  0E60  0CAB               	rrf	(??___ftmul+0)+2,f
  7169  0E61  0CAA               	rrf	(??___ftmul+0)+1,f
  7170  0E62  0CA9               	rrf	(??___ftmul+0)+0,f
  7171  0E63                     u4340:
  7172  0E63  3EFF               	addlw	-1
  7173  0E64  1D03               	skipz
  7174  0E65  2E5F               	goto	u4345
  7175  0E66  0829               	movf	0+(??___ftmul+0)+0,w
  7176  0E67  00AC               	movwf	(??___ftmul+3)+0
  7177  0E68  082C               	movf	(??___ftmul+3)+0,w
  7178  0E69  00B2               	movwf	(___ftmul@sign)
  7179                           	line	62
  7180  0E6A  0826               	movf	(___ftmul@f2),w
  7181  0E6B  00A9               	movwf	((??___ftmul+0)+0)
  7182  0E6C  0827               	movf	(___ftmul@f2+1),w
  7183  0E6D  00AA               	movwf	((??___ftmul+0)+0+1)
  7184  0E6E  0828               	movf	(___ftmul@f2+2),w
  7185  0E6F  00AB               	movwf	((??___ftmul+0)+0+2)
  7186  0E70  3010               	movlw	010h
  7187  0E71                     u4355:
  7188  0E71  1003               	clrc
  7189  0E72  0CAB               	rrf	(??___ftmul+0)+2,f
  7190  0E73  0CAA               	rrf	(??___ftmul+0)+1,f
  7191  0E74  0CA9               	rrf	(??___ftmul+0)+0,f
  7192  0E75                     u4350:
  7193  0E75  3EFF               	addlw	-1
  7194  0E76  1D03               	skipz
  7195  0E77  2E71               	goto	u4355
  7196  0E78  0829               	movf	0+(??___ftmul+0)+0,w
  7197  0E79  00AC               	movwf	(??___ftmul+3)+0
  7198  0E7A  082C               	movf	(??___ftmul+3)+0,w
  7199  0E7B  06B2               	xorwf	(___ftmul@sign),f
  7200                           	line	63
  7201  0E7C  3080               	movlw	(080h)
  7202  0E7D  00A9               	movwf	(??___ftmul+0)+0
  7203  0E7E  0829               	movf	(??___ftmul+0)+0,w
  7204  0E7F  05B2               	andwf	(___ftmul@sign),f
  7205                           	line	64
  7206                           	
  7207  0E80                     l4957:	
  7208  0E80  17A4               	bsf	(___ftmul@f1)+(15/8),(15)&7
  7209                           	line	66
  7210                           	
  7211  0E81                     l4959:	
  7212  0E81  17A7               	bsf	(___ftmul@f2)+(15/8),(15)&7
  7213                           	line	67
  7214                           	
  7215  0E82                     l4961:	
  7216  0E82  30FF               	movlw	0FFh
  7217  0E83  05A6               	andwf	(___ftmul@f2),f
  7218  0E84  30FF               	movlw	0FFh
  7219  0E85  05A7               	andwf	(___ftmul@f2+1),f
  7220  0E86  3000               	movlw	0
  7221  0E87  05A8               	andwf	(___ftmul@f2+2),f
  7222                           	line	68
  7223                           	
  7224  0E88                     l4963:	
  7225  0E88  3000               	movlw	0
  7226  0E89  00AE               	movwf	(___ftmul@f3_as_product)
  7227  0E8A  3000               	movlw	0
  7228  0E8B  00AF               	movwf	(___ftmul@f3_as_product+1)
  7229  0E8C  3000               	movlw	0
  7230  0E8D  00B0               	movwf	(___ftmul@f3_as_product+2)
  7231                           	line	69
  7232                           	
  7233  0E8E                     l4965:	
  7234  0E8E  3007               	movlw	(07h)
  7235  0E8F  00A9               	movwf	(??___ftmul+0)+0
  7236  0E90  0829               	movf	(??___ftmul+0)+0,w
  7237  0E91  00B1               	movwf	(___ftmul@cntr)
  7238  0E92  2E93               	goto	l4967
  7239                           	line	70
  7240                           	
  7241  0E93                     l1702:	
  7242                           	line	71
  7243                           	
  7244  0E93                     l4967:	
  7245  0E93  1C23               	btfss	(___ftmul@f1),(0)&7
  7246  0E94  2E96               	goto	u4361
  7247  0E95  2E97               	goto	u4360
  7248  0E96                     u4361:
  7249  0E96  2EA8               	goto	l4971
  7250  0E97                     u4360:
  7251                           	line	72
  7252                           	
  7253  0E97                     l4969:	
  7254  0E97  0826               	movf	(___ftmul@f2),w
  7255  0E98  07AE               	addwf	(___ftmul@f3_as_product),f
  7256  0E99  0827               	movf	(___ftmul@f2+1),w
  7257  0E9A  1103               	clrz
  7258  0E9B  1803               	skipnc
  7259  0E9C  0A27               	incf	(___ftmul@f2+1),w
  7260  0E9D  1903               	skipnz
  7261  0E9E  2EA0               	goto	u4371
  7262  0E9F  07AF               	addwf	(___ftmul@f3_as_product+1),f
  7263  0EA0                     u4371:
  7264  0EA0  0828               	movf	(___ftmul@f2+2),w
  7265  0EA1  1103               	clrz
  7266  0EA2  1803               	skipnc
  7267  0EA3  0A28               	incf	(___ftmul@f2+2),w
  7268  0EA4  1903               	skipnz
  7269  0EA5  2EA7               	goto	u4372
  7270  0EA6  07B0               	addwf	(___ftmul@f3_as_product+2),f
  7271  0EA7                     u4372:
  7272                           
  7273  0EA7  2EA8               	goto	l4971
  7274                           	
  7275  0EA8                     l1703:	
  7276                           	line	73
  7277                           	
  7278  0EA8                     l4971:	
  7279  0EA8  3001               	movlw	01h
  7280  0EA9                     u4385:
  7281  0EA9  1003               	clrc
  7282  0EAA  0CA5               	rrf	(___ftmul@f1+2),f
  7283  0EAB  0CA4               	rrf	(___ftmul@f1+1),f
  7284  0EAC  0CA3               	rrf	(___ftmul@f1),f
  7285  0EAD  3EFF               	addlw	-1
  7286  0EAE  1D03               	skipz
  7287  0EAF  2EA9               	goto	u4385
  7288                           
  7289                           	line	74
  7290                           	
  7291  0EB0                     l4973:	
  7292  0EB0  3001               	movlw	01h
  7293  0EB1                     u4395:
  7294  0EB1  1003               	clrc
  7295  0EB2  0DA6               	rlf	(___ftmul@f2),f
  7296  0EB3  0DA7               	rlf	(___ftmul@f2+1),f
  7297  0EB4  0DA8               	rlf	(___ftmul@f2+2),f
  7298  0EB5  3EFF               	addlw	-1
  7299  0EB6  1D03               	skipz
  7300  0EB7  2EB1               	goto	u4395
  7301                           	line	75
  7302                           	
  7303  0EB8                     l4975:	
  7304  0EB8  3001               	movlw	low(01h)
  7305  0EB9  02B1               	subwf	(___ftmul@cntr),f
  7306  0EBA  1D03               	btfss	status,2
  7307  0EBB  2EBD               	goto	u4401
  7308  0EBC  2EBE               	goto	u4400
  7309  0EBD                     u4401:
  7310  0EBD  2E93               	goto	l4967
  7311  0EBE                     u4400:
  7312  0EBE  2EBF               	goto	l4977
  7313                           	
  7314  0EBF                     l1704:	
  7315                           	line	76
  7316                           	
  7317  0EBF                     l4977:	
  7318  0EBF  3009               	movlw	(09h)
  7319  0EC0  00A9               	movwf	(??___ftmul+0)+0
  7320  0EC1  0829               	movf	(??___ftmul+0)+0,w
  7321  0EC2  00B1               	movwf	(___ftmul@cntr)
  7322  0EC3  2EC4               	goto	l4979
  7323                           	line	77
  7324                           	
  7325  0EC4                     l1705:	
  7326                           	line	78
  7327                           	
  7328  0EC4                     l4979:	
  7329  0EC4  1C23               	btfss	(___ftmul@f1),(0)&7
  7330  0EC5  2EC7               	goto	u4411
  7331  0EC6  2EC8               	goto	u4410
  7332  0EC7                     u4411:
  7333  0EC7  2ED9               	goto	l4983
  7334  0EC8                     u4410:
  7335                           	line	79
  7336                           	
  7337  0EC8                     l4981:	
  7338  0EC8  0826               	movf	(___ftmul@f2),w
  7339  0EC9  07AE               	addwf	(___ftmul@f3_as_product),f
  7340  0ECA  0827               	movf	(___ftmul@f2+1),w
  7341  0ECB  1103               	clrz
  7342  0ECC  1803               	skipnc
  7343  0ECD  0A27               	incf	(___ftmul@f2+1),w
  7344  0ECE  1903               	skipnz
  7345  0ECF  2ED1               	goto	u4421
  7346  0ED0  07AF               	addwf	(___ftmul@f3_as_product+1),f
  7347  0ED1                     u4421:
  7348  0ED1  0828               	movf	(___ftmul@f2+2),w
  7349  0ED2  1103               	clrz
  7350  0ED3  1803               	skipnc
  7351  0ED4  0A28               	incf	(___ftmul@f2+2),w
  7352  0ED5  1903               	skipnz
  7353  0ED6  2ED8               	goto	u4422
  7354  0ED7  07B0               	addwf	(___ftmul@f3_as_product+2),f
  7355  0ED8                     u4422:
  7356                           
  7357  0ED8  2ED9               	goto	l4983
  7358                           	
  7359  0ED9                     l1706:	
  7360                           	line	80
  7361                           	
  7362  0ED9                     l4983:	
  7363  0ED9  3001               	movlw	01h
  7364  0EDA                     u4435:
  7365  0EDA  1003               	clrc
  7366  0EDB  0CA5               	rrf	(___ftmul@f1+2),f
  7367  0EDC  0CA4               	rrf	(___ftmul@f1+1),f
  7368  0EDD  0CA3               	rrf	(___ftmul@f1),f
  7369  0EDE  3EFF               	addlw	-1
  7370  0EDF  1D03               	skipz
  7371  0EE0  2EDA               	goto	u4435
  7372                           
  7373                           	line	81
  7374                           	
  7375  0EE1                     l4985:	
  7376  0EE1  3001               	movlw	01h
  7377  0EE2                     u4445:
  7378  0EE2  1003               	clrc
  7379  0EE3  0CB0               	rrf	(___ftmul@f3_as_product+2),f
  7380  0EE4  0CAF               	rrf	(___ftmul@f3_as_product+1),f
  7381  0EE5  0CAE               	rrf	(___ftmul@f3_as_product),f
  7382  0EE6  3EFF               	addlw	-1
  7383  0EE7  1D03               	skipz
  7384  0EE8  2EE2               	goto	u4445
  7385                           
  7386                           	line	82
  7387                           	
  7388  0EE9                     l4987:	
  7389  0EE9  3001               	movlw	low(01h)
  7390  0EEA  02B1               	subwf	(___ftmul@cntr),f
  7391  0EEB  1D03               	btfss	status,2
  7392  0EEC  2EEE               	goto	u4451
  7393  0EED  2EEF               	goto	u4450
  7394  0EEE                     u4451:
  7395  0EEE  2EC4               	goto	l4979
  7396  0EEF                     u4450:
  7397  0EEF  2EF0               	goto	l4989
  7398                           	
  7399  0EF0                     l1707:	
  7400                           	line	83
  7401                           	
  7402  0EF0                     l4989:	
  7403  0EF0  082E               	movf	(___ftmul@f3_as_product),w
  7404  0EF1  00F0               	movwf	(?___ftpack)
  7405  0EF2  082F               	movf	(___ftmul@f3_as_product+1),w
  7406  0EF3  00F1               	movwf	(?___ftpack+1)
  7407  0EF4  0830               	movf	(___ftmul@f3_as_product+2),w
  7408  0EF5  00F2               	movwf	(?___ftpack+2)
  7409  0EF6  082D               	movf	(___ftmul@exp),w
  7410  0EF7  00A9               	movwf	(??___ftmul+0)+0
  7411  0EF8  0829               	movf	(??___ftmul+0)+0,w
  7412  0EF9  00F3               	movwf	0+(?___ftpack)+03h
  7413  0EFA  0832               	movf	(___ftmul@sign),w
  7414  0EFB  00AA               	movwf	(??___ftmul+1)+0
  7415  0EFC  082A               	movf	(??___ftmul+1)+0,w
  7416  0EFD  00F4               	movwf	0+(?___ftpack)+04h
  7417  0EFE  160A  118A  2785   	fcall	___ftpack
              120A  158A         
  7418  0F03  0870               	movf	(0+(?___ftpack)),w
  7419  0F04  1283               	bcf	status, 5	;RP0=0, select bank0
  7420  0F05  1303               	bcf	status, 6	;RP1=0, select bank0
  7421  0F06  00A3               	movwf	(?___ftmul)
  7422  0F07  0871               	movf	(1+(?___ftpack)),w
  7423  0F08  00A4               	movwf	(?___ftmul+1)
  7424  0F09  0872               	movf	(2+(?___ftpack)),w
  7425  0F0A  00A5               	movwf	(?___ftmul+2)
  7426  0F0B  2F0C               	goto	l1700
  7427                           	
  7428  0F0C                     l4991:	
  7429                           	line	84
  7430                           	
  7431  0F0C                     l1700:	
  7432  0F0C  0008               	return
  7433                           	opt stack 0
  7434                           GLOBAL	__end_of___ftmul
  7435  0F0D                     	__end_of___ftmul:
  7436 ;; =============== function ___ftmul ends ============
  7437                           
  7438                           	signat	___ftmul,8315
  7439                           	global	___ftdiv
  7440                           psect	text908,local,class=CODE,delta=2
  7441                           global __ptext908
  7442  0C86                     __ptext908:
  7443                           
  7444 ;; *************** function ___ftdiv *****************
  7445 ;; Defined at:
  7446 ;;		line 50 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftdiv.c"
  7447 ;; Parameters:    Size  Location     Type
  7448 ;;  f2              3    8[COMMON] float 
  7449 ;;  f1              3   11[COMMON] float 
  7450 ;; Auto vars:     Size  Location     Type
  7451 ;;  f3              3    5[BANK0 ] float 
  7452 ;;  sign            1    9[BANK0 ] unsigned char 
  7453 ;;  exp             1    8[BANK0 ] unsigned char 
  7454 ;;  cntr            1    4[BANK0 ] unsigned char 
  7455 ;; Return value:  Size  Location     Type
  7456 ;;                  3    8[COMMON] float 
  7457 ;; Registers used:
  7458 ;;		wreg, status,2, status,0, pclath, cstack
  7459 ;; Tracked objects:
  7460 ;;		On entry : 0/0
  7461 ;;		On exit  : 0/0
  7462 ;;		Unchanged: 0/0
  7463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7464 ;;      Params:         6       0       0       0       0
  7465 ;;      Locals:         0       6       0       0       0
  7466 ;;      Temps:          0       4       0       0       0
  7467 ;;      Totals:         6      10       0       0       0
  7468 ;;Total ram usage:       16 bytes
  7469 ;; Hardware stack levels used:    1
  7470 ;; Hardware stack levels required when called:    1
  7471 ;; This function calls:
  7472 ;;		___ftpack
  7473 ;; This function is called by:
  7474 ;;		_exp
  7475 ;; This function uses a non-reentrant model
  7476 ;;
  7477                           psect	text908
  7478                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftdiv.c"
  7479                           	line	50
  7480                           	global	__size_of___ftdiv
  7481  00C6                     	__size_of___ftdiv	equ	__end_of___ftdiv-___ftdiv
  7482                           	
  7483  0C86                     ___ftdiv:	
  7484                           	opt	stack 1
  7485                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7486                           	line	55
  7487                           	
  7488  0C86                     l4901:	
  7489  0C86  087B               	movf	(___ftdiv@f1),w
  7490  0C87  1283               	bcf	status, 5	;RP0=0, select bank0
  7491  0C88  1303               	bcf	status, 6	;RP1=0, select bank0
  7492  0C89  00A0               	movwf	((??___ftdiv+0)+0)
  7493  0C8A  087C               	movf	(___ftdiv@f1+1),w
  7494  0C8B  00A1               	movwf	((??___ftdiv+0)+0+1)
  7495  0C8C  087D               	movf	(___ftdiv@f1+2),w
  7496  0C8D  00A2               	movwf	((??___ftdiv+0)+0+2)
  7497  0C8E  1003               	clrc
  7498  0C8F  0D21               	rlf	(??___ftdiv+0)+1,w
  7499  0C90  0D22               	rlf	(??___ftdiv+0)+2,w
  7500  0C91  00A3               	movwf	(??___ftdiv+3)+0
  7501  0C92  0823               	movf	(??___ftdiv+3)+0,w
  7502  0C93  00A8               	movwf	(___ftdiv@exp)
  7503  0C94  08A8               	movf	((___ftdiv@exp)),f
  7504  0C95  1D03               	skipz
  7505  0C96  2C98               	goto	u4241
  7506  0C97  2C99               	goto	u4240
  7507  0C98                     u4241:
  7508  0C98  2CA1               	goto	l4907
  7509  0C99                     u4240:
  7510                           	line	56
  7511                           	
  7512  0C99                     l4903:	
  7513  0C99  3000               	movlw	0x0
  7514  0C9A  00F8               	movwf	(?___ftdiv)
  7515  0C9B  3000               	movlw	0x0
  7516  0C9C  00F9               	movwf	(?___ftdiv+1)
  7517  0C9D  3000               	movlw	0x0
  7518  0C9E  00FA               	movwf	(?___ftdiv+2)
  7519  0C9F  2D4B               	goto	l1690
  7520                           	
  7521  0CA0                     l4905:	
  7522  0CA0  2D4B               	goto	l1690
  7523                           	
  7524  0CA1                     l1689:	
  7525                           	line	57
  7526                           	
  7527  0CA1                     l4907:	
  7528  0CA1  0878               	movf	(___ftdiv@f2),w
  7529  0CA2  00A0               	movwf	((??___ftdiv+0)+0)
  7530  0CA3  0879               	movf	(___ftdiv@f2+1),w
  7531  0CA4  00A1               	movwf	((??___ftdiv+0)+0+1)
  7532  0CA5  087A               	movf	(___ftdiv@f2+2),w
  7533  0CA6  00A2               	movwf	((??___ftdiv+0)+0+2)
  7534  0CA7  1003               	clrc
  7535  0CA8  0D21               	rlf	(??___ftdiv+0)+1,w
  7536  0CA9  0D22               	rlf	(??___ftdiv+0)+2,w
  7537  0CAA  00A3               	movwf	(??___ftdiv+3)+0
  7538  0CAB  0823               	movf	(??___ftdiv+3)+0,w
  7539  0CAC  00A9               	movwf	(___ftdiv@sign)
  7540  0CAD  08A9               	movf	((___ftdiv@sign)),f
  7541  0CAE  1D03               	skipz
  7542  0CAF  2CB1               	goto	u4251
  7543  0CB0  2CB2               	goto	u4250
  7544  0CB1                     u4251:
  7545  0CB1  2CBA               	goto	l4913
  7546  0CB2                     u4250:
  7547                           	line	58
  7548                           	
  7549  0CB2                     l4909:	
  7550  0CB2  3000               	movlw	0x0
  7551  0CB3  00F8               	movwf	(?___ftdiv)
  7552  0CB4  3000               	movlw	0x0
  7553  0CB5  00F9               	movwf	(?___ftdiv+1)
  7554  0CB6  3000               	movlw	0x0
  7555  0CB7  00FA               	movwf	(?___ftdiv+2)
  7556  0CB8  2D4B               	goto	l1690
  7557                           	
  7558  0CB9                     l4911:	
  7559  0CB9  2D4B               	goto	l1690
  7560                           	
  7561  0CBA                     l1691:	
  7562                           	line	59
  7563                           	
  7564  0CBA                     l4913:	
  7565  0CBA  3000               	movlw	0
  7566  0CBB  00A5               	movwf	(___ftdiv@f3)
  7567  0CBC  3000               	movlw	0
  7568  0CBD  00A6               	movwf	(___ftdiv@f3+1)
  7569  0CBE  3000               	movlw	0
  7570  0CBF  00A7               	movwf	(___ftdiv@f3+2)
  7571                           	line	60
  7572                           	
  7573  0CC0                     l4915:	
  7574  0CC0  3089               	movlw	(089h)
  7575  0CC1  0729               	addwf	(___ftdiv@sign),w
  7576  0CC2  00A0               	movwf	(??___ftdiv+0)+0
  7577  0CC3  0820               	movf	0+(??___ftdiv+0)+0,w
  7578  0CC4  02A8               	subwf	(___ftdiv@exp),f
  7579                           	line	61
  7580                           	
  7581  0CC5                     l4917:	
  7582  0CC5  087B               	movf	(___ftdiv@f1),w
  7583  0CC6  00A0               	movwf	((??___ftdiv+0)+0)
  7584  0CC7  087C               	movf	(___ftdiv@f1+1),w
  7585  0CC8  00A1               	movwf	((??___ftdiv+0)+0+1)
  7586  0CC9  087D               	movf	(___ftdiv@f1+2),w
  7587  0CCA  00A2               	movwf	((??___ftdiv+0)+0+2)
  7588  0CCB  3010               	movlw	010h
  7589  0CCC                     u4265:
  7590  0CCC  1003               	clrc
  7591  0CCD  0CA2               	rrf	(??___ftdiv+0)+2,f
  7592  0CCE  0CA1               	rrf	(??___ftdiv+0)+1,f
  7593  0CCF  0CA0               	rrf	(??___ftdiv+0)+0,f
  7594  0CD0                     u4260:
  7595  0CD0  3EFF               	addlw	-1
  7596  0CD1  1D03               	skipz
  7597  0CD2  2CCC               	goto	u4265
  7598  0CD3  0820               	movf	0+(??___ftdiv+0)+0,w
  7599  0CD4  00A3               	movwf	(??___ftdiv+3)+0
  7600  0CD5  0823               	movf	(??___ftdiv+3)+0,w
  7601  0CD6  00A9               	movwf	(___ftdiv@sign)
  7602                           	line	62
  7603                           	
  7604  0CD7                     l4919:	
  7605  0CD7  0878               	movf	(___ftdiv@f2),w
  7606  0CD8  00A0               	movwf	((??___ftdiv+0)+0)
  7607  0CD9  0879               	movf	(___ftdiv@f2+1),w
  7608  0CDA  00A1               	movwf	((??___ftdiv+0)+0+1)
  7609  0CDB  087A               	movf	(___ftdiv@f2+2),w
  7610  0CDC  00A2               	movwf	((??___ftdiv+0)+0+2)
  7611  0CDD  3010               	movlw	010h
  7612  0CDE                     u4275:
  7613  0CDE  1003               	clrc
  7614  0CDF  0CA2               	rrf	(??___ftdiv+0)+2,f
  7615  0CE0  0CA1               	rrf	(??___ftdiv+0)+1,f
  7616  0CE1  0CA0               	rrf	(??___ftdiv+0)+0,f
  7617  0CE2                     u4270:
  7618  0CE2  3EFF               	addlw	-1
  7619  0CE3  1D03               	skipz
  7620  0CE4  2CDE               	goto	u4275
  7621  0CE5  0820               	movf	0+(??___ftdiv+0)+0,w
  7622  0CE6  00A3               	movwf	(??___ftdiv+3)+0
  7623  0CE7  0823               	movf	(??___ftdiv+3)+0,w
  7624  0CE8  06A9               	xorwf	(___ftdiv@sign),f
  7625                           	line	63
  7626                           	
  7627  0CE9                     l4921:	
  7628  0CE9  3080               	movlw	(080h)
  7629  0CEA  00A0               	movwf	(??___ftdiv+0)+0
  7630  0CEB  0820               	movf	(??___ftdiv+0)+0,w
  7631  0CEC  05A9               	andwf	(___ftdiv@sign),f
  7632                           	line	64
  7633                           	
  7634  0CED                     l4923:	
  7635  0CED  17FC               	bsf	(___ftdiv@f1)+(15/8),(15)&7
  7636                           	line	65
  7637  0CEE  30FF               	movlw	0FFh
  7638  0CEF  05FB               	andwf	(___ftdiv@f1),f
  7639  0CF0  30FF               	movlw	0FFh
  7640  0CF1  05FC               	andwf	(___ftdiv@f1+1),f
  7641  0CF2  3000               	movlw	0
  7642  0CF3  05FD               	andwf	(___ftdiv@f1+2),f
  7643                           	line	66
  7644                           	
  7645  0CF4                     l4925:	
  7646  0CF4  17F9               	bsf	(___ftdiv@f2)+(15/8),(15)&7
  7647                           	line	67
  7648  0CF5  30FF               	movlw	0FFh
  7649  0CF6  05F8               	andwf	(___ftdiv@f2),f
  7650  0CF7  30FF               	movlw	0FFh
  7651  0CF8  05F9               	andwf	(___ftdiv@f2+1),f
  7652  0CF9  3000               	movlw	0
  7653  0CFA  05FA               	andwf	(___ftdiv@f2+2),f
  7654                           	line	68
  7655  0CFB  3018               	movlw	(018h)
  7656  0CFC  00A0               	movwf	(??___ftdiv+0)+0
  7657  0CFD  0820               	movf	(??___ftdiv+0)+0,w
  7658  0CFE  00A4               	movwf	(___ftdiv@cntr)
  7659  0CFF  2D00               	goto	l4927
  7660                           	line	69
  7661                           	
  7662  0D00                     l1692:	
  7663                           	line	70
  7664                           	
  7665  0D00                     l4927:	
  7666  0D00  3001               	movlw	01h
  7667  0D01                     u4285:
  7668  0D01  1003               	clrc
  7669  0D02  0DA5               	rlf	(___ftdiv@f3),f
  7670  0D03  0DA6               	rlf	(___ftdiv@f3+1),f
  7671  0D04  0DA7               	rlf	(___ftdiv@f3+2),f
  7672  0D05  3EFF               	addlw	-1
  7673  0D06  1D03               	skipz
  7674  0D07  2D01               	goto	u4285
  7675                           	line	71
  7676                           	
  7677  0D08                     l4929:	
  7678  0D08  087A               	movf	(___ftdiv@f2+2),w
  7679  0D09  027D               	subwf	(___ftdiv@f1+2),w
  7680  0D0A  1D03               	skipz
  7681  0D0B  2D12               	goto	u4295
  7682  0D0C  0879               	movf	(___ftdiv@f2+1),w
  7683  0D0D  027C               	subwf	(___ftdiv@f1+1),w
  7684  0D0E  1D03               	skipz
  7685  0D0F  2D12               	goto	u4295
  7686  0D10  0878               	movf	(___ftdiv@f2),w
  7687  0D11  027B               	subwf	(___ftdiv@f1),w
  7688  0D12                     u4295:
  7689  0D12  1C03               	skipc
  7690  0D13  2D15               	goto	u4291
  7691  0D14  2D16               	goto	u4290
  7692  0D15                     u4291:
  7693  0D15  2D22               	goto	l4935
  7694  0D16                     u4290:
  7695                           	line	72
  7696                           	
  7697  0D16                     l4931:	
  7698  0D16  0878               	movf	(___ftdiv@f2),w
  7699  0D17  02FB               	subwf	(___ftdiv@f1),f
  7700  0D18  0879               	movf	(___ftdiv@f2+1),w
  7701  0D19  1C03               	skipc
  7702  0D1A  0F79               	incfsz	(___ftdiv@f2+1),w
  7703  0D1B  02FC               	subwf	(___ftdiv@f1+1),f
  7704  0D1C  087A               	movf	(___ftdiv@f2+2),w
  7705  0D1D  1C03               	skipc
  7706  0D1E  0A7A               	incf	(___ftdiv@f2+2),w
  7707  0D1F  02FD               	subwf	(___ftdiv@f1+2),f
  7708                           	line	73
  7709                           	
  7710  0D20                     l4933:	
  7711  0D20  1425               	bsf	(___ftdiv@f3)+(0/8),(0)&7
  7712  0D21  2D22               	goto	l4935
  7713                           	line	74
  7714                           	
  7715  0D22                     l1693:	
  7716                           	line	75
  7717                           	
  7718  0D22                     l4935:	
  7719  0D22  3001               	movlw	01h
  7720  0D23                     u4305:
  7721  0D23  1003               	clrc
  7722  0D24  0DFB               	rlf	(___ftdiv@f1),f
  7723  0D25  0DFC               	rlf	(___ftdiv@f1+1),f
  7724  0D26  0DFD               	rlf	(___ftdiv@f1+2),f
  7725  0D27  3EFF               	addlw	-1
  7726  0D28  1D03               	skipz
  7727  0D29  2D23               	goto	u4305
  7728                           	line	76
  7729                           	
  7730  0D2A                     l4937:	
  7731  0D2A  3001               	movlw	low(01h)
  7732  0D2B  02A4               	subwf	(___ftdiv@cntr),f
  7733  0D2C  1D03               	btfss	status,2
  7734  0D2D  2D2F               	goto	u4311
  7735  0D2E  2D30               	goto	u4310
  7736  0D2F                     u4311:
  7737  0D2F  2D00               	goto	l4927
  7738  0D30                     u4310:
  7739  0D30  2D31               	goto	l4939
  7740                           	
  7741  0D31                     l1694:	
  7742                           	line	77
  7743                           	
  7744  0D31                     l4939:	
  7745  0D31  0825               	movf	(___ftdiv@f3),w
  7746  0D32  00F0               	movwf	(?___ftpack)
  7747  0D33  0826               	movf	(___ftdiv@f3+1),w
  7748  0D34  00F1               	movwf	(?___ftpack+1)
  7749  0D35  0827               	movf	(___ftdiv@f3+2),w
  7750  0D36  00F2               	movwf	(?___ftpack+2)
  7751  0D37  0828               	movf	(___ftdiv@exp),w
  7752  0D38  00A0               	movwf	(??___ftdiv+0)+0
  7753  0D39  0820               	movf	(??___ftdiv+0)+0,w
  7754  0D3A  00F3               	movwf	0+(?___ftpack)+03h
  7755  0D3B  0829               	movf	(___ftdiv@sign),w
  7756  0D3C  00A1               	movwf	(??___ftdiv+1)+0
  7757  0D3D  0821               	movf	(??___ftdiv+1)+0,w
  7758  0D3E  00F4               	movwf	0+(?___ftpack)+04h
  7759  0D3F  160A  118A  2785   	fcall	___ftpack
              120A  158A         
  7760  0D44  0870               	movf	(0+(?___ftpack)),w
  7761  0D45  00F8               	movwf	(?___ftdiv)
  7762  0D46  0871               	movf	(1+(?___ftpack)),w
  7763  0D47  00F9               	movwf	(?___ftdiv+1)
  7764  0D48  0872               	movf	(2+(?___ftpack)),w
  7765  0D49  00FA               	movwf	(?___ftdiv+2)
  7766  0D4A  2D4B               	goto	l1690
  7767                           	
  7768  0D4B                     l4941:	
  7769                           	line	78
  7770                           	
  7771  0D4B                     l1690:	
  7772  0D4B  0008               	return
  7773                           	opt stack 0
  7774                           GLOBAL	__end_of___ftdiv
  7775  0D4C                     	__end_of___ftdiv:
  7776 ;; =============== function ___ftdiv ends ============
  7777                           
  7778                           	signat	___ftdiv,8315
  7779                           	global	___ftadd
  7780                           psect	text909,local,class=CODE,delta=2
  7781                           global __ptext909
  7782  0324                     __ptext909:
  7783                           
  7784 ;; *************** function ___ftadd *****************
  7785 ;; Defined at:
  7786 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftadd.c"
  7787 ;; Parameters:    Size  Location     Type
  7788 ;;  f1              3   19[BANK0 ] float 
  7789 ;;  f2              3   22[BANK0 ] float 
  7790 ;; Auto vars:     Size  Location     Type
  7791 ;;  exp1            1   31[BANK0 ] unsigned char 
  7792 ;;  exp2            1   30[BANK0 ] unsigned char 
  7793 ;;  sign            1   29[BANK0 ] unsigned char 
  7794 ;; Return value:  Size  Location     Type
  7795 ;;                  3   19[BANK0 ] float 
  7796 ;; Registers used:
  7797 ;;		wreg, status,2, status,0, pclath, cstack
  7798 ;; Tracked objects:
  7799 ;;		On entry : 0/0
  7800 ;;		On exit  : 0/0
  7801 ;;		Unchanged: 0/0
  7802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7803 ;;      Params:         0       6       0       0       0
  7804 ;;      Locals:         0       3       0       0       0
  7805 ;;      Temps:          0       4       0       0       0
  7806 ;;      Totals:         0      13       0       0       0
  7807 ;;Total ram usage:       13 bytes
  7808 ;; Hardware stack levels used:    1
  7809 ;; Hardware stack levels required when called:    1
  7810 ;; This function calls:
  7811 ;;		___ftpack
  7812 ;; This function is called by:
  7813 ;;		_ftoa
  7814 ;;		___ftsub
  7815 ;;		_floor
  7816 ;;		_log
  7817 ;;		_eval_poly
  7818 ;; This function uses a non-reentrant model
  7819 ;;
  7820                           psect	text909
  7821                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftadd.c"
  7822                           	line	87
  7823                           	global	__size_of___ftadd
  7824  0146                     	__size_of___ftadd	equ	__end_of___ftadd-___ftadd
  7825                           	
  7826  0324                     ___ftadd:	
  7827                           	opt	stack 0
  7828                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  7829                           	line	90
  7830                           	
  7831  0324                     l4831:	
  7832  0324  1283               	bcf	status, 5	;RP0=0, select bank0
  7833  0325  1303               	bcf	status, 6	;RP1=0, select bank0
  7834  0326  0833               	movf	(___ftadd@f1),w
  7835  0327  00B9               	movwf	((??___ftadd+0)+0)
  7836  0328  0834               	movf	(___ftadd@f1+1),w
  7837  0329  00BA               	movwf	((??___ftadd+0)+0+1)
  7838  032A  0835               	movf	(___ftadd@f1+2),w
  7839  032B  00BB               	movwf	((??___ftadd+0)+0+2)
  7840  032C  1003               	clrc
  7841  032D  0D3A               	rlf	(??___ftadd+0)+1,w
  7842  032E  0D3B               	rlf	(??___ftadd+0)+2,w
  7843  032F  00BC               	movwf	(??___ftadd+3)+0
  7844  0330  083C               	movf	(??___ftadd+3)+0,w
  7845  0331  00BF               	movwf	(___ftadd@exp1)
  7846                           	line	91
  7847  0332  0836               	movf	(___ftadd@f2),w
  7848  0333  00B9               	movwf	((??___ftadd+0)+0)
  7849  0334  0837               	movf	(___ftadd@f2+1),w
  7850  0335  00BA               	movwf	((??___ftadd+0)+0+1)
  7851  0336  0838               	movf	(___ftadd@f2+2),w
  7852  0337  00BB               	movwf	((??___ftadd+0)+0+2)
  7853  0338  1003               	clrc
  7854  0339  0D3A               	rlf	(??___ftadd+0)+1,w
  7855  033A  0D3B               	rlf	(??___ftadd+0)+2,w
  7856  033B  00BC               	movwf	(??___ftadd+3)+0
  7857  033C  083C               	movf	(??___ftadd+3)+0,w
  7858  033D  00BE               	movwf	(___ftadd@exp2)
  7859                           	line	92
  7860                           	
  7861  033E                     l4833:	
  7862  033E  083F               	movf	(___ftadd@exp1),w
  7863  033F  1D03               	skipz
  7864  0340  2B42               	goto	u4000
  7865  0341  2B53               	goto	l4839
  7866  0342                     u4000:
  7867                           	
  7868  0342                     l4835:	
  7869  0342  083E               	movf	(___ftadd@exp2),w
  7870  0343  023F               	subwf	(___ftadd@exp1),w
  7871  0344  1803               	skipnc
  7872  0345  2B47               	goto	u4011
  7873  0346  2B48               	goto	u4010
  7874  0347                     u4011:
  7875  0347  2B5B               	goto	l4843
  7876  0348                     u4010:
  7877                           	
  7878  0348                     l4837:	
  7879  0348  033F               	decf	(___ftadd@exp1),w
  7880  0349  3AFF               	xorlw	0ffh
  7881  034A  073E               	addwf	(___ftadd@exp2),w
  7882  034B  00B9               	movwf	(??___ftadd+0)+0
  7883  034C  3019               	movlw	(019h)
  7884  034D  0239               	subwf	0+(??___ftadd+0)+0,w
  7885  034E  1C03               	skipc
  7886  034F  2B51               	goto	u4021
  7887  0350  2B52               	goto	u4020
  7888  0351                     u4021:
  7889  0351  2B5B               	goto	l4843
  7890  0352                     u4020:
  7891  0352  2B53               	goto	l4839
  7892                           	
  7893  0353                     l1647:	
  7894                           	line	93
  7895                           	
  7896  0353                     l4839:	
  7897  0353  0836               	movf	(___ftadd@f2),w
  7898  0354  00B3               	movwf	(?___ftadd)
  7899  0355  0837               	movf	(___ftadd@f2+1),w
  7900  0356  00B4               	movwf	(?___ftadd+1)
  7901  0357  0838               	movf	(___ftadd@f2+2),w
  7902  0358  00B5               	movwf	(?___ftadd+2)
  7903  0359  2C69               	goto	l1648
  7904                           	
  7905  035A                     l4841:	
  7906  035A  2C69               	goto	l1648
  7907                           	
  7908  035B                     l1645:	
  7909                           	line	94
  7910                           	
  7911  035B                     l4843:	
  7912  035B  083E               	movf	(___ftadd@exp2),w
  7913  035C  1D03               	skipz
  7914  035D  2B5F               	goto	u4030
  7915  035E  2B6F               	goto	l1651
  7916  035F                     u4030:
  7917                           	
  7918  035F                     l4845:	
  7919  035F  083F               	movf	(___ftadd@exp1),w
  7920  0360  023E               	subwf	(___ftadd@exp2),w
  7921  0361  1803               	skipnc
  7922  0362  2B64               	goto	u4041
  7923  0363  2B65               	goto	u4040
  7924  0364                     u4041:
  7925  0364  2B70               	goto	l4849
  7926  0365                     u4040:
  7927                           	
  7928  0365                     l4847:	
  7929  0365  033E               	decf	(___ftadd@exp2),w
  7930  0366  3AFF               	xorlw	0ffh
  7931  0367  073F               	addwf	(___ftadd@exp1),w
  7932  0368  00B9               	movwf	(??___ftadd+0)+0
  7933  0369  3019               	movlw	(019h)
  7934  036A  0239               	subwf	0+(??___ftadd+0)+0,w
  7935  036B  1C03               	skipc
  7936  036C  2B6E               	goto	u4051
  7937  036D  2B6F               	goto	u4050
  7938  036E                     u4051:
  7939  036E  2B70               	goto	l4849
  7940  036F                     u4050:
  7941                           	
  7942  036F                     l1651:	
  7943                           	line	95
  7944  036F  2C69               	goto	l1648
  7945                           	
  7946  0370                     l1649:	
  7947                           	line	96
  7948                           	
  7949  0370                     l4849:	
  7950  0370  3006               	movlw	(06h)
  7951  0371  00B9               	movwf	(??___ftadd+0)+0
  7952  0372  0839               	movf	(??___ftadd+0)+0,w
  7953  0373  00BD               	movwf	(___ftadd@sign)
  7954                           	line	97
  7955                           	
  7956  0374                     l4851:	
  7957  0374  1FB5               	btfss	(___ftadd@f1+2),(23)&7
  7958  0375  2B77               	goto	u4061
  7959  0376  2B78               	goto	u4060
  7960  0377                     u4061:
  7961  0377  2B79               	goto	l1652
  7962  0378                     u4060:
  7963                           	line	98
  7964                           	
  7965  0378                     l4853:	
  7966  0378  17BD               	bsf	(___ftadd@sign)+(7/8),(7)&7
  7967                           	
  7968  0379                     l1652:	
  7969                           	line	99
  7970  0379  1FB8               	btfss	(___ftadd@f2+2),(23)&7
  7971  037A  2B7C               	goto	u4071
  7972  037B  2B7D               	goto	u4070
  7973  037C                     u4071:
  7974  037C  2B7E               	goto	l1653
  7975  037D                     u4070:
  7976                           	line	100
  7977                           	
  7978  037D                     l4855:	
  7979  037D  173D               	bsf	(___ftadd@sign)+(6/8),(6)&7
  7980                           	
  7981  037E                     l1653:	
  7982                           	line	101
  7983  037E  17B4               	bsf	(___ftadd@f1)+(15/8),(15)&7
  7984                           	line	102
  7985                           	
  7986  037F                     l4857:	
  7987  037F  30FF               	movlw	0FFh
  7988  0380  05B3               	andwf	(___ftadd@f1),f
  7989  0381  30FF               	movlw	0FFh
  7990  0382  05B4               	andwf	(___ftadd@f1+1),f
  7991  0383  3000               	movlw	0
  7992  0384  05B5               	andwf	(___ftadd@f1+2),f
  7993                           	line	103
  7994                           	
  7995  0385                     l4859:	
  7996  0385  17B7               	bsf	(___ftadd@f2)+(15/8),(15)&7
  7997                           	line	104
  7998  0386  30FF               	movlw	0FFh
  7999  0387  05B6               	andwf	(___ftadd@f2),f
  8000  0388  30FF               	movlw	0FFh
  8001  0389  05B7               	andwf	(___ftadd@f2+1),f
  8002  038A  3000               	movlw	0
  8003  038B  05B8               	andwf	(___ftadd@f2+2),f
  8004                           	line	106
  8005  038C  083E               	movf	(___ftadd@exp2),w
  8006  038D  023F               	subwf	(___ftadd@exp1),w
  8007  038E  1803               	skipnc
  8008  038F  2B91               	goto	u4081
  8009  0390  2B92               	goto	u4080
  8010  0391                     u4081:
  8011  0391  2BC3               	goto	l4871
  8012  0392                     u4080:
  8013  0392  2B93               	goto	l4861
  8014                           	line	109
  8015                           	
  8016  0393                     l1655:	
  8017                           	line	110
  8018                           	
  8019  0393                     l4861:	
  8020  0393  3001               	movlw	01h
  8021  0394                     u4095:
  8022  0394  1003               	clrc
  8023  0395  0DB6               	rlf	(___ftadd@f2),f
  8024  0396  0DB7               	rlf	(___ftadd@f2+1),f
  8025  0397  0DB8               	rlf	(___ftadd@f2+2),f
  8026  0398  3EFF               	addlw	-1
  8027  0399  1D03               	skipz
  8028  039A  2B94               	goto	u4095
  8029                           	line	111
  8030  039B  3001               	movlw	low(01h)
  8031  039C  02BE               	subwf	(___ftadd@exp2),f
  8032                           	line	112
  8033                           	
  8034  039D                     l4863:	
  8035  039D  083E               	movf	(___ftadd@exp2),w
  8036  039E  063F               	xorwf	(___ftadd@exp1),w
  8037  039F  1903               	skipnz
  8038  03A0  2BA2               	goto	u4101
  8039  03A1  2BA3               	goto	u4100
  8040  03A2                     u4101:
  8041  03A2  2BBB               	goto	l4869
  8042  03A3                     u4100:
  8043                           	
  8044  03A3                     l4865:	
  8045  03A3  3001               	movlw	low(01h)
  8046  03A4  02BD               	subwf	(___ftadd@sign),f
  8047  03A5  083D               	movf	((___ftadd@sign)),w
  8048  03A6  3907               	andlw	07h
  8049  03A7  1D03               	btfss	status,2
  8050  03A8  2BAA               	goto	u4111
  8051  03A9  2BAB               	goto	u4110
  8052  03AA                     u4111:
  8053  03AA  2B93               	goto	l4861
  8054  03AB                     u4110:
  8055  03AB  2BBB               	goto	l4869
  8056                           	
  8057  03AC                     l1657:	
  8058  03AC  2BBB               	goto	l4869
  8059                           	
  8060  03AD                     l1658:	
  8061                           	line	113
  8062  03AD  2BBB               	goto	l4869
  8063                           	
  8064  03AE                     l1660:	
  8065                           	line	114
  8066                           	
  8067  03AE                     l4867:	
  8068  03AE  3001               	movlw	01h
  8069  03AF                     u4125:
  8070  03AF  1003               	clrc
  8071  03B0  0CB5               	rrf	(___ftadd@f1+2),f
  8072  03B1  0CB4               	rrf	(___ftadd@f1+1),f
  8073  03B2  0CB3               	rrf	(___ftadd@f1),f
  8074  03B3  3EFF               	addlw	-1
  8075  03B4  1D03               	skipz
  8076  03B5  2BAF               	goto	u4125
  8077                           
  8078                           	line	115
  8079  03B6  3001               	movlw	(01h)
  8080  03B7  00B9               	movwf	(??___ftadd+0)+0
  8081  03B8  0839               	movf	(??___ftadd+0)+0,w
  8082  03B9  07BF               	addwf	(___ftadd@exp1),f
  8083  03BA  2BBB               	goto	l4869
  8084                           	line	116
  8085                           	
  8086  03BB                     l1659:	
  8087                           	line	113
  8088                           	
  8089  03BB                     l4869:	
  8090  03BB  083F               	movf	(___ftadd@exp1),w
  8091  03BC  063E               	xorwf	(___ftadd@exp2),w
  8092  03BD  1D03               	skipz
  8093  03BE  2BC0               	goto	u4131
  8094  03BF  2BC1               	goto	u4130
  8095  03C0                     u4131:
  8096  03C0  2BAE               	goto	l4867
  8097  03C1                     u4130:
  8098  03C1  2BFA               	goto	l1662
  8099                           	
  8100  03C2                     l1661:	
  8101                           	line	117
  8102  03C2  2BFA               	goto	l1662
  8103                           	
  8104  03C3                     l1654:	
  8105                           	
  8106  03C3                     l4871:	
  8107  03C3  083F               	movf	(___ftadd@exp1),w
  8108  03C4  023E               	subwf	(___ftadd@exp2),w
  8109  03C5  1803               	skipnc
  8110  03C6  2BC8               	goto	u4141
  8111  03C7  2BC9               	goto	u4140
  8112  03C8                     u4141:
  8113  03C8  2BFA               	goto	l1662
  8114  03C9                     u4140:
  8115  03C9  2BCA               	goto	l4873
  8116                           	line	120
  8117                           	
  8118  03CA                     l1664:	
  8119                           	line	121
  8120                           	
  8121  03CA                     l4873:	
  8122  03CA  3001               	movlw	01h
  8123  03CB                     u4155:
  8124  03CB  1003               	clrc
  8125  03CC  0DB3               	rlf	(___ftadd@f1),f
  8126  03CD  0DB4               	rlf	(___ftadd@f1+1),f
  8127  03CE  0DB5               	rlf	(___ftadd@f1+2),f
  8128  03CF  3EFF               	addlw	-1
  8129  03D0  1D03               	skipz
  8130  03D1  2BCB               	goto	u4155
  8131                           	line	122
  8132  03D2  3001               	movlw	low(01h)
  8133  03D3  02BF               	subwf	(___ftadd@exp1),f
  8134                           	line	123
  8135                           	
  8136  03D4                     l4875:	
  8137  03D4  083E               	movf	(___ftadd@exp2),w
  8138  03D5  063F               	xorwf	(___ftadd@exp1),w
  8139  03D6  1903               	skipnz
  8140  03D7  2BD9               	goto	u4161
  8141  03D8  2BDA               	goto	u4160
  8142  03D9                     u4161:
  8143  03D9  2BF2               	goto	l4881
  8144  03DA                     u4160:
  8145                           	
  8146  03DA                     l4877:	
  8147  03DA  3001               	movlw	low(01h)
  8148  03DB  02BD               	subwf	(___ftadd@sign),f
  8149  03DC  083D               	movf	((___ftadd@sign)),w
  8150  03DD  3907               	andlw	07h
  8151  03DE  1D03               	btfss	status,2
  8152  03DF  2BE1               	goto	u4171
  8153  03E0  2BE2               	goto	u4170
  8154  03E1                     u4171:
  8155  03E1  2BCA               	goto	l4873
  8156  03E2                     u4170:
  8157  03E2  2BF2               	goto	l4881
  8158                           	
  8159  03E3                     l1666:	
  8160  03E3  2BF2               	goto	l4881
  8161                           	
  8162  03E4                     l1667:	
  8163                           	line	124
  8164  03E4  2BF2               	goto	l4881
  8165                           	
  8166  03E5                     l1669:	
  8167                           	line	125
  8168                           	
  8169  03E5                     l4879:	
  8170  03E5  3001               	movlw	01h
  8171  03E6                     u4185:
  8172  03E6  1003               	clrc
  8173  03E7  0CB8               	rrf	(___ftadd@f2+2),f
  8174  03E8  0CB7               	rrf	(___ftadd@f2+1),f
  8175  03E9  0CB6               	rrf	(___ftadd@f2),f
  8176  03EA  3EFF               	addlw	-1
  8177  03EB  1D03               	skipz
  8178  03EC  2BE6               	goto	u4185
  8179                           
  8180                           	line	126
  8181  03ED  3001               	movlw	(01h)
  8182  03EE  00B9               	movwf	(??___ftadd+0)+0
  8183  03EF  0839               	movf	(??___ftadd+0)+0,w
  8184  03F0  07BE               	addwf	(___ftadd@exp2),f
  8185  03F1  2BF2               	goto	l4881
  8186                           	line	127
  8187                           	
  8188  03F2                     l1668:	
  8189                           	line	124
  8190                           	
  8191  03F2                     l4881:	
  8192  03F2  083F               	movf	(___ftadd@exp1),w
  8193  03F3  063E               	xorwf	(___ftadd@exp2),w
  8194  03F4  1D03               	skipz
  8195  03F5  2BF7               	goto	u4191
  8196  03F6  2BF8               	goto	u4190
  8197  03F7                     u4191:
  8198  03F7  2BE5               	goto	l4879
  8199  03F8                     u4190:
  8200  03F8  2BFA               	goto	l1662
  8201                           	
  8202  03F9                     l1670:	
  8203  03F9  2BFA               	goto	l1662
  8204                           	line	128
  8205                           	
  8206  03FA                     l1663:	
  8207                           	line	129
  8208                           	
  8209  03FA                     l1662:	
  8210  03FA  1FBD               	btfss	(___ftadd@sign),(7)&7
  8211  03FB  2BFD               	goto	u4201
  8212  03FC  2BFE               	goto	u4200
  8213  03FD                     u4201:
  8214  03FD  2C0F               	goto	l4885
  8215  03FE                     u4200:
  8216                           	line	131
  8217                           	
  8218  03FE                     l4883:	
  8219  03FE  30FF               	movlw	0FFh
  8220  03FF  06B3               	xorwf	(___ftadd@f1),f
  8221  0400  30FF               	movlw	0FFh
  8222  0401  06B4               	xorwf	(___ftadd@f1+1),f
  8223  0402  30FF               	movlw	0FFh
  8224  0403  06B5               	xorwf	(___ftadd@f1+2),f
  8225                           	line	132
  8226  0404  3001               	movlw	01h
  8227  0405  07B3               	addwf	(___ftadd@f1),f
  8228  0406  3000               	movlw	0
  8229  0407  1803               	skipnc
  8230  0408  3001               movlw 1
  8231  0409  07B4               	addwf	(___ftadd@f1+1),f
  8232  040A  3000               	movlw	0
  8233  040B  1803               	skipnc
  8234  040C  3001               movlw 1
  8235  040D  07B5               	addwf	(___ftadd@f1+2),f
  8236  040E  2C0F               	goto	l4885
  8237                           	line	133
  8238                           	
  8239  040F                     l1671:	
  8240                           	line	134
  8241                           	
  8242  040F                     l4885:	
  8243  040F  1F3D               	btfss	(___ftadd@sign),(6)&7
  8244  0410  2C12               	goto	u4211
  8245  0411  2C13               	goto	u4210
  8246  0412                     u4211:
  8247  0412  2C24               	goto	l4889
  8248  0413                     u4210:
  8249                           	line	136
  8250                           	
  8251  0413                     l4887:	
  8252  0413  30FF               	movlw	0FFh
  8253  0414  06B6               	xorwf	(___ftadd@f2),f
  8254  0415  30FF               	movlw	0FFh
  8255  0416  06B7               	xorwf	(___ftadd@f2+1),f
  8256  0417  30FF               	movlw	0FFh
  8257  0418  06B8               	xorwf	(___ftadd@f2+2),f
  8258                           	line	137
  8259  0419  3001               	movlw	01h
  8260  041A  07B6               	addwf	(___ftadd@f2),f
  8261  041B  3000               	movlw	0
  8262  041C  1803               	skipnc
  8263  041D  3001               movlw 1
  8264  041E  07B7               	addwf	(___ftadd@f2+1),f
  8265  041F  3000               	movlw	0
  8266  0420  1803               	skipnc
  8267  0421  3001               movlw 1
  8268  0422  07B8               	addwf	(___ftadd@f2+2),f
  8269  0423  2C24               	goto	l4889
  8270                           	line	138
  8271                           	
  8272  0424                     l1672:	
  8273                           	line	139
  8274                           	
  8275  0424                     l4889:	
  8276  0424  01BD               	clrf	(___ftadd@sign)
  8277                           	line	140
  8278  0425  0833               	movf	(___ftadd@f1),w
  8279  0426  07B6               	addwf	(___ftadd@f2),f
  8280  0427  0834               	movf	(___ftadd@f1+1),w
  8281  0428  1103               	clrz
  8282  0429  1803               	skipnc
  8283  042A  0A34               	incf	(___ftadd@f1+1),w
  8284  042B  1903               	skipnz
  8285  042C  2C2E               	goto	u4221
  8286  042D  07B7               	addwf	(___ftadd@f2+1),f
  8287  042E                     u4221:
  8288  042E  0835               	movf	(___ftadd@f1+2),w
  8289  042F  1103               	clrz
  8290  0430  1803               	skipnc
  8291  0431  0A35               	incf	(___ftadd@f1+2),w
  8292  0432  1903               	skipnz
  8293  0433  2C35               	goto	u4222
  8294  0434  07B8               	addwf	(___ftadd@f2+2),f
  8295  0435                     u4222:
  8296                           
  8297                           	line	141
  8298                           	
  8299  0435                     l4891:	
  8300  0435  1FB8               	btfss	(___ftadd@f2+2),(23)&7
  8301  0436  2C38               	goto	u4231
  8302  0437  2C39               	goto	u4230
  8303  0438                     u4231:
  8304  0438  2C4D               	goto	l4897
  8305  0439                     u4230:
  8306                           	line	142
  8307                           	
  8308  0439                     l4893:	
  8309  0439  30FF               	movlw	0FFh
  8310  043A  06B6               	xorwf	(___ftadd@f2),f
  8311  043B  30FF               	movlw	0FFh
  8312  043C  06B7               	xorwf	(___ftadd@f2+1),f
  8313  043D  30FF               	movlw	0FFh
  8314  043E  06B8               	xorwf	(___ftadd@f2+2),f
  8315                           	line	143
  8316  043F  3001               	movlw	01h
  8317  0440  07B6               	addwf	(___ftadd@f2),f
  8318  0441  3000               	movlw	0
  8319  0442  1803               	skipnc
  8320  0443  3001               movlw 1
  8321  0444  07B7               	addwf	(___ftadd@f2+1),f
  8322  0445  3000               	movlw	0
  8323  0446  1803               	skipnc
  8324  0447  3001               movlw 1
  8325  0448  07B8               	addwf	(___ftadd@f2+2),f
  8326                           	line	144
  8327                           	
  8328  0449                     l4895:	
  8329  0449  01BD               	clrf	(___ftadd@sign)
  8330  044A  1403               	bsf	status,0
  8331  044B  0DBD               	rlf	(___ftadd@sign),f
  8332  044C  2C4D               	goto	l4897
  8333                           	line	145
  8334                           	
  8335  044D                     l1673:	
  8336                           	line	146
  8337                           	
  8338  044D                     l4897:	
  8339  044D  0836               	movf	(___ftadd@f2),w
  8340  044E  00F0               	movwf	(?___ftpack)
  8341  044F  0837               	movf	(___ftadd@f2+1),w
  8342  0450  00F1               	movwf	(?___ftpack+1)
  8343  0451  0838               	movf	(___ftadd@f2+2),w
  8344  0452  00F2               	movwf	(?___ftpack+2)
  8345  0453  083F               	movf	(___ftadd@exp1),w
  8346  0454  00B9               	movwf	(??___ftadd+0)+0
  8347  0455  0839               	movf	(??___ftadd+0)+0,w
  8348  0456  00F3               	movwf	0+(?___ftpack)+03h
  8349  0457  083D               	movf	(___ftadd@sign),w
  8350  0458  00BA               	movwf	(??___ftadd+1)+0
  8351  0459  083A               	movf	(??___ftadd+1)+0,w
  8352  045A  00F4               	movwf	0+(?___ftpack)+04h
  8353  045B  160A  118A  2785   	fcall	___ftpack
              120A  118A         
  8354  0460  0870               	movf	(0+(?___ftpack)),w
  8355  0461  1283               	bcf	status, 5	;RP0=0, select bank0
  8356  0462  1303               	bcf	status, 6	;RP1=0, select bank0
  8357  0463  00B3               	movwf	(?___ftadd)
  8358  0464  0871               	movf	(1+(?___ftpack)),w
  8359  0465  00B4               	movwf	(?___ftadd+1)
  8360  0466  0872               	movf	(2+(?___ftpack)),w
  8361  0467  00B5               	movwf	(?___ftadd+2)
  8362  0468  2C69               	goto	l1648
  8363                           	
  8364  0469                     l4899:	
  8365                           	line	148
  8366                           	
  8367  0469                     l1648:	
  8368  0469  0008               	return
  8369                           	opt stack 0
  8370                           GLOBAL	__end_of___ftadd
  8371  046A                     	__end_of___ftadd:
  8372 ;; =============== function ___ftadd ends ============
  8373                           
  8374                           	signat	___ftadd,8315
  8375                           	global	_intToStr
  8376                           psect	text910,local,class=CODE,delta=2
  8377                           global __ptext910
  8378  09EE                     __ptext910:
  8379                           
  8380 ;; *************** function _intToStr *****************
  8381 ;; Defined at:
  8382 ;;		line 13 in file "IntToStr.h"
  8383 ;; Parameters:    Size  Location     Type
  8384 ;;  x               2    0[BANK0 ] int 
  8385 ;;  str             1    2[BANK0 ] PTR unsigned char 
  8386 ;;		 -> buffer(2), 
  8387 ;;  d               2    3[BANK0 ] int 
  8388 ;; Auto vars:     Size  Location     Type
  8389 ;;  i               2    7[BANK0 ] int 
  8390 ;; Return value:  Size  Location     Type
  8391 ;;                  2    0[BANK0 ] int 
  8392 ;; Registers used:
  8393 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8394 ;; Tracked objects:
  8395 ;;		On entry : 0/0
  8396 ;;		On exit  : 0/0
  8397 ;;		Unchanged: 0/0
  8398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8399 ;;      Params:         0       5       0       0       0
  8400 ;;      Locals:         0       2       0       0       0
  8401 ;;      Temps:          0       2       0       0       0
  8402 ;;      Totals:         0       9       0       0       0
  8403 ;;Total ram usage:        9 bytes
  8404 ;; Hardware stack levels used:    1
  8405 ;; Hardware stack levels required when called:    1
  8406 ;; This function calls:
  8407 ;;		___awmod
  8408 ;;		___awdiv
  8409 ;;		_reverse
  8410 ;; This function is called by:
  8411 ;;		_ftoa
  8412 ;; This function uses a non-reentrant model
  8413 ;;
  8414                           psect	text910
  8415                           	file	"IntToStr.h"
  8416                           	line	13
  8417                           	global	__size_of_intToStr
  8418  0088                     	__size_of_intToStr	equ	__end_of_intToStr-_intToStr
  8419                           	
  8420  09EE                     _intToStr:	
  8421                           	opt	stack 3
  8422                           ; Regs used in _intToStr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8423                           	line	14
  8424                           	
  8425  09EE                     l4807:	
  8426                           ;IntToStr.h: 14: int i = 0;
  8427  09EE  1283               	bcf	status, 5	;RP0=0, select bank0
  8428  09EF  1303               	bcf	status, 6	;RP1=0, select bank0
  8429  09F0  01A7               	clrf	(intToStr@i)
  8430  09F1  01A8               	clrf	(intToStr@i+1)
  8431                           	line	15
  8432                           ;IntToStr.h: 15: while (x)
  8433  09F2  2A2D               	goto	l4815
  8434                           	
  8435  09F3                     l835:	
  8436                           	line	17
  8437                           	
  8438  09F3                     l4809:	
  8439                           ;IntToStr.h: 16: {
  8440                           ;IntToStr.h: 17: str[i++] = (x%10) + '0';
  8441  09F3  300A               	movlw	low(0Ah)
  8442  09F4  00F0               	movwf	(?___awmod)
  8443  09F5  3000               	movlw	high(0Ah)
  8444  09F6  00F1               	movwf	((?___awmod))+1
  8445  09F7  0821               	movf	(intToStr@x+1),w
  8446  09F8  01F3               	clrf	1+(?___awmod)+02h
  8447  09F9  07F3               	addwf	1+(?___awmod)+02h
  8448  09FA  0820               	movf	(intToStr@x),w
  8449  09FB  01F2               	clrf	0+(?___awmod)+02h
  8450  09FC  07F2               	addwf	0+(?___awmod)+02h
  8451                           
  8452  09FD  160A  118A  26AB   	fcall	___awmod
              120A  158A         
  8453  0A02  0870               	movf	(0+(?___awmod)),w
  8454  0A03  3E30               	addlw	030h
  8455  0A04  1283               	bcf	status, 5	;RP0=0, select bank0
  8456  0A05  1303               	bcf	status, 6	;RP1=0, select bank0
  8457  0A06  00A5               	movwf	(??_intToStr+0)+0
  8458  0A07  0827               	movf	(intToStr@i),w
  8459  0A08  0722               	addwf	(intToStr@str),w
  8460  0A09  00A6               	movwf	(??_intToStr+1)+0
  8461  0A0A  0826               	movf	0+(??_intToStr+1)+0,w
  8462  0A0B  0084               	movwf	fsr0
  8463  0A0C  0825               	movf	(??_intToStr+0)+0,w
  8464  0A0D  1383               	bcf	status, 7	;select IRP bank0
  8465  0A0E  0080               	movwf	indf
  8466                           	
  8467  0A0F                     l4811:	
  8468  0A0F  3001               	movlw	low(01h)
  8469  0A10  07A7               	addwf	(intToStr@i),f
  8470  0A11  1803               	skipnc
  8471  0A12  0AA8               	incf	(intToStr@i+1),f
  8472  0A13  3000               	movlw	high(01h)
  8473  0A14  07A8               	addwf	(intToStr@i+1),f
  8474                           	line	18
  8475                           	
  8476  0A15                     l4813:	
  8477                           ;IntToStr.h: 18: x = x/10;
  8478  0A15  300A               	movlw	low(0Ah)
  8479  0A16  00F0               	movwf	(?___awdiv)
  8480  0A17  3000               	movlw	high(0Ah)
  8481  0A18  00F1               	movwf	((?___awdiv))+1
  8482  0A19  0821               	movf	(intToStr@x+1),w
  8483  0A1A  01F3               	clrf	1+(?___awdiv)+02h
  8484  0A1B  07F3               	addwf	1+(?___awdiv)+02h
  8485  0A1C  0820               	movf	(intToStr@x),w
  8486  0A1D  01F2               	clrf	0+(?___awdiv)+02h
  8487  0A1E  07F2               	addwf	0+(?___awdiv)+02h
  8488                           
  8489  0A1F  160A  118A  2711   	fcall	___awdiv
              120A  158A         
  8490  0A24  0871               	movf	(1+(?___awdiv)),w
  8491  0A25  1283               	bcf	status, 5	;RP0=0, select bank0
  8492  0A26  1303               	bcf	status, 6	;RP1=0, select bank0
  8493  0A27  01A1               	clrf	(intToStr@x+1)
  8494  0A28  07A1               	addwf	(intToStr@x+1)
  8495  0A29  0870               	movf	(0+(?___awdiv)),w
  8496  0A2A  01A0               	clrf	(intToStr@x)
  8497  0A2B  07A0               	addwf	(intToStr@x)
  8498                           
  8499  0A2C  2A2D               	goto	l4815
  8500                           	line	19
  8501                           	
  8502  0A2D                     l834:	
  8503                           	line	15
  8504                           	
  8505  0A2D                     l4815:	
  8506  0A2D  0821               	movf	((intToStr@x+1)),w
  8507  0A2E  0420               	iorwf	((intToStr@x)),w
  8508  0A2F  1D03               	skipz
  8509  0A30  2A32               	goto	u3981
  8510  0A31  2A33               	goto	u3980
  8511  0A32                     u3981:
  8512  0A32  29F3               	goto	l4809
  8513  0A33                     u3980:
  8514  0A33  2A48               	goto	l4821
  8515                           	
  8516  0A34                     l836:	
  8517                           	line	23
  8518                           ;IntToStr.h: 19: }
  8519                           ;IntToStr.h: 23: while (i < d)
  8520  0A34  2A48               	goto	l4821
  8521                           	
  8522  0A35                     l838:	
  8523                           	line	24
  8524                           	
  8525  0A35                     l4817:	
  8526                           ;IntToStr.h: 24: str[i++] = '0';
  8527  0A35  3030               	movlw	(030h)
  8528  0A36  1283               	bcf	status, 5	;RP0=0, select bank0
  8529  0A37  1303               	bcf	status, 6	;RP1=0, select bank0
  8530  0A38  00A5               	movwf	(??_intToStr+0)+0
  8531  0A39  0827               	movf	(intToStr@i),w
  8532  0A3A  0722               	addwf	(intToStr@str),w
  8533  0A3B  00A6               	movwf	(??_intToStr+1)+0
  8534  0A3C  0826               	movf	0+(??_intToStr+1)+0,w
  8535  0A3D  0084               	movwf	fsr0
  8536  0A3E  0825               	movf	(??_intToStr+0)+0,w
  8537  0A3F  1383               	bcf	status, 7	;select IRP bank0
  8538  0A40  0080               	movwf	indf
  8539                           	
  8540  0A41                     l4819:	
  8541  0A41  3001               	movlw	low(01h)
  8542  0A42  07A7               	addwf	(intToStr@i),f
  8543  0A43  1803               	skipnc
  8544  0A44  0AA8               	incf	(intToStr@i+1),f
  8545  0A45  3000               	movlw	high(01h)
  8546  0A46  07A8               	addwf	(intToStr@i+1),f
  8547  0A47  2A48               	goto	l4821
  8548                           	
  8549  0A48                     l837:	
  8550                           	line	23
  8551                           	
  8552  0A48                     l4821:	
  8553  0A48  0828               	movf	(intToStr@i+1),w
  8554  0A49  3A80               	xorlw	80h
  8555  0A4A  00A5               	movwf	(??_intToStr+0)+0
  8556  0A4B  0824               	movf	(intToStr@d+1),w
  8557  0A4C  3A80               	xorlw	80h
  8558  0A4D  0225               	subwf	(??_intToStr+0)+0,w
  8559  0A4E  1D03               	skipz
  8560  0A4F  2A52               	goto	u3995
  8561  0A50  0823               	movf	(intToStr@d),w
  8562  0A51  0227               	subwf	(intToStr@i),w
  8563  0A52                     u3995:
  8564                           
  8565  0A52  1C03               	skipc
  8566  0A53  2A55               	goto	u3991
  8567  0A54  2A56               	goto	u3990
  8568  0A55                     u3991:
  8569  0A55  2A35               	goto	l4817
  8570  0A56                     u3990:
  8571  0A56  2A57               	goto	l4823
  8572                           	
  8573  0A57                     l839:	
  8574                           	line	26
  8575                           	
  8576  0A57                     l4823:	
  8577                           ;IntToStr.h: 26: reverse(str, i);
  8578  0A57  1283               	bcf	status, 5	;RP0=0, select bank0
  8579  0A58  1303               	bcf	status, 6	;RP1=0, select bank0
  8580  0A59  0828               	movf	(intToStr@i+1),w
  8581  0A5A  01F1               	clrf	(?_reverse+1)
  8582  0A5B  07F1               	addwf	(?_reverse+1)
  8583  0A5C  0827               	movf	(intToStr@i),w
  8584  0A5D  01F0               	clrf	(?_reverse)
  8585  0A5E  07F0               	addwf	(?_reverse)
  8586                           
  8587  0A5F  0822               	movf	(intToStr@str),w
  8588  0A60  160A  118A  2505   	fcall	_reverse
              120A  158A         
  8589                           	line	27
  8590                           	
  8591  0A65                     l4825:	
  8592                           ;IntToStr.h: 27: str[i] = '\0';
  8593  0A65  1283               	bcf	status, 5	;RP0=0, select bank0
  8594  0A66  1303               	bcf	status, 6	;RP1=0, select bank0
  8595  0A67  0827               	movf	(intToStr@i),w
  8596  0A68  0722               	addwf	(intToStr@str),w
  8597  0A69  00A5               	movwf	(??_intToStr+0)+0
  8598  0A6A  0825               	movf	0+(??_intToStr+0)+0,w
  8599  0A6B  0084               	movwf	fsr0
  8600  0A6C  1383               	bcf	status, 7	;select IRP bank0
  8601  0A6D  0180               	clrf	indf
  8602                           	line	28
  8603                           	
  8604  0A6E                     l4827:	
  8605                           ;IntToStr.h: 28: return i;
  8606  0A6E  0828               	movf	(intToStr@i+1),w
  8607  0A6F  01A1               	clrf	(?_intToStr+1)
  8608  0A70  07A1               	addwf	(?_intToStr+1)
  8609  0A71  0827               	movf	(intToStr@i),w
  8610  0A72  01A0               	clrf	(?_intToStr)
  8611  0A73  07A0               	addwf	(?_intToStr)
  8612                           
  8613  0A74  2A75               	goto	l840
  8614                           	
  8615  0A75                     l4829:	
  8616                           	line	29
  8617                           	
  8618  0A75                     l840:	
  8619  0A75  0008               	return
  8620                           	opt stack 0
  8621                           GLOBAL	__end_of_intToStr
  8622  0A76                     	__end_of_intToStr:
  8623 ;; =============== function _intToStr ends ============
  8624                           
  8625                           	signat	_intToStr,12410
  8626                           	global	_UART_Init
  8627                           psect	text911,local,class=CODE,delta=2
  8628                           global __ptext911
  8629  0F0D                     __ptext911:
  8630                           
  8631 ;; *************** function _UART_Init *****************
  8632 ;; Defined at:
  8633 ;;		line 2 in file "uart.h"
  8634 ;; Parameters:    Size  Location     Type
  8635 ;;  baudrate        4    6[BANK0 ] const long 
  8636 ;; Auto vars:     Size  Location     Type
  8637 ;;  x               2    9[COMMON] unsigned int 
  8638 ;; Return value:  Size  Location     Type
  8639 ;;                  1    wreg      unsigned char 
  8640 ;; Registers used:
  8641 ;;		wreg, status,2, status,0, pclath, cstack
  8642 ;; Tracked objects:
  8643 ;;		On entry : 0/0
  8644 ;;		On exit  : 0/0
  8645 ;;		Unchanged: 0/0
  8646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8647 ;;      Params:         0       4       0       0       0
  8648 ;;      Locals:         2       0       0       0       0
  8649 ;;      Temps:          0      12       0       0       0
  8650 ;;      Totals:         2      16       0       0       0
  8651 ;;Total ram usage:       18 bytes
  8652 ;; Hardware stack levels used:    1
  8653 ;; Hardware stack levels required when called:    1
  8654 ;; This function calls:
  8655 ;;		___aldiv
  8656 ;; This function is called by:
  8657 ;;		_main
  8658 ;; This function uses a non-reentrant model
  8659 ;;
  8660                           psect	text911
  8661                           	file	"uart.h"
  8662                           	line	2
  8663                           	global	__size_of_UART_Init
  8664  00F3                     	__size_of_UART_Init	equ	__end_of_UART_Init-_UART_Init
  8665                           	
  8666  0F0D                     _UART_Init:	
  8667                           	opt	stack 6
  8668                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  8669                           	line	4
  8670                           	
  8671  0F0D                     l4781:	
  8672                           ;uart.h: 3: unsigned int x;
  8673                           ;uart.h: 4: x = (20000000 - baudrate*64)/(baudrate*64);
  8674  0F0D  1283               	bcf	status, 5	;RP0=0, select bank0
  8675  0F0E  1303               	bcf	status, 6	;RP1=0, select bank0
  8676  0F0F  0826               	movf	(UART_Init@baudrate),w
  8677  0F10  00AA               	movwf	(??_UART_Init+0)+0
  8678  0F11  0827               	movf	(UART_Init@baudrate+1),w
  8679  0F12  00AB               	movwf	((??_UART_Init+0)+0+1)
  8680  0F13  0828               	movf	(UART_Init@baudrate+2),w
  8681  0F14  00AC               	movwf	((??_UART_Init+0)+0+2)
  8682  0F15  0829               	movf	(UART_Init@baudrate+3),w
  8683  0F16  00AD               	movwf	((??_UART_Init+0)+0+3)
  8684  0F17  3006               	movlw	06h
  8685  0F18                     u3905:
  8686  0F18  1003               	clrc
  8687  0F19  0DAA               	rlf	(??_UART_Init+0)+0,f
  8688  0F1A  0DAB               	rlf	(??_UART_Init+0)+1,f
  8689  0F1B  0DAC               	rlf	(??_UART_Init+0)+2,f
  8690  0F1C  0DAD               	rlf	(??_UART_Init+0)+3,f
  8691  0F1D                     u3900:
  8692  0F1D  3EFF               	addlw	-1
  8693  0F1E  1D03               	skipz
  8694  0F1F  2F18               	goto	u3905
  8695  0F20  082D               	movf	3+(??_UART_Init+0)+0,w
  8696  0F21  00F3               	movwf	(?___aldiv+3)
  8697  0F22  082C               	movf	2+(??_UART_Init+0)+0,w
  8698  0F23  00F2               	movwf	(?___aldiv+2)
  8699  0F24  082B               	movf	1+(??_UART_Init+0)+0,w
  8700  0F25  00F1               	movwf	(?___aldiv+1)
  8701  0F26  082A               	movf	0+(??_UART_Init+0)+0,w
  8702  0F27  00F0               	movwf	(?___aldiv)
  8703                           
  8704  0F28  3000               	movlw	0
  8705  0F29  00AE               	movwf	((??_UART_Init+4)+0)
  8706  0F2A  302D               	movlw	02Dh
  8707  0F2B  00AF               	movwf	((??_UART_Init+4)+0+1)
  8708  0F2C  3031               	movlw	031h
  8709  0F2D  00B0               	movwf	((??_UART_Init+4)+0+2)
  8710  0F2E  3001               	movlw	01h
  8711  0F2F  00B1               	movwf	((??_UART_Init+4)+0+3)
  8712  0F30  0826               	movf	(UART_Init@baudrate),w
  8713  0F31  00B2               	movwf	(??_UART_Init+8)+0
  8714  0F32  0827               	movf	(UART_Init@baudrate+1),w
  8715  0F33  00B3               	movwf	((??_UART_Init+8)+0+1)
  8716  0F34  0828               	movf	(UART_Init@baudrate+2),w
  8717  0F35  00B4               	movwf	((??_UART_Init+8)+0+2)
  8718  0F36  0829               	movf	(UART_Init@baudrate+3),w
  8719  0F37  00B5               	movwf	((??_UART_Init+8)+0+3)
  8720  0F38  3006               	movlw	06h
  8721  0F39                     u3915:
  8722  0F39  1003               	clrc
  8723  0F3A  0DB2               	rlf	(??_UART_Init+8)+0,f
  8724  0F3B  0DB3               	rlf	(??_UART_Init+8)+1,f
  8725  0F3C  0DB4               	rlf	(??_UART_Init+8)+2,f
  8726  0F3D  0DB5               	rlf	(??_UART_Init+8)+3,f
  8727  0F3E                     u3910:
  8728  0F3E  3EFF               	addlw	-1
  8729  0F3F  1D03               	skipz
  8730  0F40  2F39               	goto	u3915
  8731  0F41  09B2               	comf	(??_UART_Init+8)+0,f
  8732  0F42  09B3               	comf	(??_UART_Init+8)+1,f
  8733  0F43  09B4               	comf	(??_UART_Init+8)+2,f
  8734  0F44  09B5               	comf	(??_UART_Init+8)+3,f
  8735  0F45  0AB2               	incf	(??_UART_Init+8)+0,f
  8736  0F46  1903               	skipnz
  8737  0F47  0AB3               	incf	(??_UART_Init+8)+1,f
  8738  0F48  1903               	skipnz
  8739  0F49  0AB4               	incf	(??_UART_Init+8)+2,f
  8740  0F4A  1903               	skipnz
  8741  0F4B  0AB5               	incf	(??_UART_Init+8)+3,f
  8742  0F4C  0832               	movf	0+(??_UART_Init+8)+0,w
  8743  0F4D  07AE               	addwf	(??_UART_Init+4)+0,f
  8744  0F4E  0833               	movf	1+(??_UART_Init+8)+0,w
  8745  0F4F  1803               	skipnc
  8746  0F50  0F33               	incfsz	1+(??_UART_Init+8)+0,w
  8747  0F51  2F53               	goto	u3920
  8748  0F52  2F54               	goto	u3921
  8749  0F53                     u3920:
  8750  0F53  07AF               	addwf	(??_UART_Init+4)+1,f
  8751  0F54                     u3921:
  8752  0F54  0834               	movf	2+(??_UART_Init+8)+0,w
  8753  0F55  1803               	skipnc
  8754  0F56  0F34               	incfsz	2+(??_UART_Init+8)+0,w
  8755  0F57  2F59               	goto	u3922
  8756  0F58  2F5A               	goto	u3923
  8757  0F59                     u3922:
  8758  0F59  07B0               	addwf	(??_UART_Init+4)+2,f
  8759  0F5A                     u3923:
  8760  0F5A  0835               	movf	3+(??_UART_Init+8)+0,w
  8761  0F5B  1803               	skipnc
  8762  0F5C  0A35               	incf	3+(??_UART_Init+8)+0,w
  8763  0F5D  07B1               	addwf	(??_UART_Init+4)+3,f
  8764  0F5E  0831               	movf	3+(??_UART_Init+4)+0,w
  8765  0F5F  00F7               	movwf	3+(?___aldiv)+04h
  8766  0F60  0830               	movf	2+(??_UART_Init+4)+0,w
  8767  0F61  00F6               	movwf	2+(?___aldiv)+04h
  8768  0F62  082F               	movf	1+(??_UART_Init+4)+0,w
  8769  0F63  00F5               	movwf	1+(?___aldiv)+04h
  8770  0F64  082E               	movf	0+(??_UART_Init+4)+0,w
  8771  0F65  00F4               	movwf	0+(?___aldiv)+04h
  8772                           
  8773  0F66  120A  158A  231A   	fcall	___aldiv
              120A  158A         
  8774  0F6B  0871               	movf	1+(((0+(?___aldiv)))),w
  8775  0F6C  01FA               	clrf	(UART_Init@x+1)
  8776  0F6D  07FA               	addwf	(UART_Init@x+1)
  8777  0F6E  0870               	movf	0+(((0+(?___aldiv)))),w
  8778  0F6F  01F9               	clrf	(UART_Init@x)
  8779  0F70  07F9               	addwf	(UART_Init@x)
  8780                           
  8781                           	line	5
  8782                           	
  8783  0F71                     l4783:	
  8784                           ;uart.h: 5: if(x>255)
  8785  0F71  3001               	movlw	high(0100h)
  8786  0F72  027A               	subwf	(UART_Init@x+1),w
  8787  0F73  3000               	movlw	low(0100h)
  8788  0F74  1903               	skipnz
  8789  0F75  0279               	subwf	(UART_Init@x),w
  8790  0F76  1C03               	skipc
  8791  0F77  2F79               	goto	u3931
  8792  0F78  2F7A               	goto	u3930
  8793  0F79                     u3931:
  8794  0F79  2FE2               	goto	l4789
  8795  0F7A                     u3930:
  8796                           	line	7
  8797                           	
  8798  0F7A                     l4785:	
  8799                           ;uart.h: 6: {
  8800                           ;uart.h: 7: x = (20000000 - baudrate*16)/(baudrate*16);
  8801  0F7A  1283               	bcf	status, 5	;RP0=0, select bank0
  8802  0F7B  1303               	bcf	status, 6	;RP1=0, select bank0
  8803  0F7C  0826               	movf	(UART_Init@baudrate),w
  8804  0F7D  00AA               	movwf	(??_UART_Init+0)+0
  8805  0F7E  0827               	movf	(UART_Init@baudrate+1),w
  8806  0F7F  00AB               	movwf	((??_UART_Init+0)+0+1)
  8807  0F80  0828               	movf	(UART_Init@baudrate+2),w
  8808  0F81  00AC               	movwf	((??_UART_Init+0)+0+2)
  8809  0F82  0829               	movf	(UART_Init@baudrate+3),w
  8810  0F83  00AD               	movwf	((??_UART_Init+0)+0+3)
  8811  0F84  3004               	movlw	04h
  8812  0F85                     u3945:
  8813  0F85  1003               	clrc
  8814  0F86  0DAA               	rlf	(??_UART_Init+0)+0,f
  8815  0F87  0DAB               	rlf	(??_UART_Init+0)+1,f
  8816  0F88  0DAC               	rlf	(??_UART_Init+0)+2,f
  8817  0F89  0DAD               	rlf	(??_UART_Init+0)+3,f
  8818  0F8A                     u3940:
  8819  0F8A  3EFF               	addlw	-1
  8820  0F8B  1D03               	skipz
  8821  0F8C  2F85               	goto	u3945
  8822  0F8D  082D               	movf	3+(??_UART_Init+0)+0,w
  8823  0F8E  00F3               	movwf	(?___aldiv+3)
  8824  0F8F  082C               	movf	2+(??_UART_Init+0)+0,w
  8825  0F90  00F2               	movwf	(?___aldiv+2)
  8826  0F91  082B               	movf	1+(??_UART_Init+0)+0,w
  8827  0F92  00F1               	movwf	(?___aldiv+1)
  8828  0F93  082A               	movf	0+(??_UART_Init+0)+0,w
  8829  0F94  00F0               	movwf	(?___aldiv)
  8830                           
  8831  0F95  3000               	movlw	0
  8832  0F96  00AE               	movwf	((??_UART_Init+4)+0)
  8833  0F97  302D               	movlw	02Dh
  8834  0F98  00AF               	movwf	((??_UART_Init+4)+0+1)
  8835  0F99  3031               	movlw	031h
  8836  0F9A  00B0               	movwf	((??_UART_Init+4)+0+2)
  8837  0F9B  3001               	movlw	01h
  8838  0F9C  00B1               	movwf	((??_UART_Init+4)+0+3)
  8839  0F9D  0826               	movf	(UART_Init@baudrate),w
  8840  0F9E  00B2               	movwf	(??_UART_Init+8)+0
  8841  0F9F  0827               	movf	(UART_Init@baudrate+1),w
  8842  0FA0  00B3               	movwf	((??_UART_Init+8)+0+1)
  8843  0FA1  0828               	movf	(UART_Init@baudrate+2),w
  8844  0FA2  00B4               	movwf	((??_UART_Init+8)+0+2)
  8845  0FA3  0829               	movf	(UART_Init@baudrate+3),w
  8846  0FA4  00B5               	movwf	((??_UART_Init+8)+0+3)
  8847  0FA5  3004               	movlw	04h
  8848  0FA6                     u3955:
  8849  0FA6  1003               	clrc
  8850  0FA7  0DB2               	rlf	(??_UART_Init+8)+0,f
  8851  0FA8  0DB3               	rlf	(??_UART_Init+8)+1,f
  8852  0FA9  0DB4               	rlf	(??_UART_Init+8)+2,f
  8853  0FAA  0DB5               	rlf	(??_UART_Init+8)+3,f
  8854  0FAB                     u3950:
  8855  0FAB  3EFF               	addlw	-1
  8856  0FAC  1D03               	skipz
  8857  0FAD  2FA6               	goto	u3955
  8858  0FAE  09B2               	comf	(??_UART_Init+8)+0,f
  8859  0FAF  09B3               	comf	(??_UART_Init+8)+1,f
  8860  0FB0  09B4               	comf	(??_UART_Init+8)+2,f
  8861  0FB1  09B5               	comf	(??_UART_Init+8)+3,f
  8862  0FB2  0AB2               	incf	(??_UART_Init+8)+0,f
  8863  0FB3  1903               	skipnz
  8864  0FB4  0AB3               	incf	(??_UART_Init+8)+1,f
  8865  0FB5  1903               	skipnz
  8866  0FB6  0AB4               	incf	(??_UART_Init+8)+2,f
  8867  0FB7  1903               	skipnz
  8868  0FB8  0AB5               	incf	(??_UART_Init+8)+3,f
  8869  0FB9  0832               	movf	0+(??_UART_Init+8)+0,w
  8870  0FBA  07AE               	addwf	(??_UART_Init+4)+0,f
  8871  0FBB  0833               	movf	1+(??_UART_Init+8)+0,w
  8872  0FBC  1803               	skipnc
  8873  0FBD  0F33               	incfsz	1+(??_UART_Init+8)+0,w
  8874  0FBE  2FC0               	goto	u3960
  8875  0FBF  2FC1               	goto	u3961
  8876  0FC0                     u3960:
  8877  0FC0  07AF               	addwf	(??_UART_Init+4)+1,f
  8878  0FC1                     u3961:
  8879  0FC1  0834               	movf	2+(??_UART_Init+8)+0,w
  8880  0FC2  1803               	skipnc
  8881  0FC3  0F34               	incfsz	2+(??_UART_Init+8)+0,w
  8882  0FC4  2FC6               	goto	u3962
  8883  0FC5  2FC7               	goto	u3963
  8884  0FC6                     u3962:
  8885  0FC6  07B0               	addwf	(??_UART_Init+4)+2,f
  8886  0FC7                     u3963:
  8887  0FC7  0835               	movf	3+(??_UART_Init+8)+0,w
  8888  0FC8  1803               	skipnc
  8889  0FC9  0A35               	incf	3+(??_UART_Init+8)+0,w
  8890  0FCA  07B1               	addwf	(??_UART_Init+4)+3,f
  8891  0FCB  0831               	movf	3+(??_UART_Init+4)+0,w
  8892  0FCC  00F7               	movwf	3+(?___aldiv)+04h
  8893  0FCD  0830               	movf	2+(??_UART_Init+4)+0,w
  8894  0FCE  00F6               	movwf	2+(?___aldiv)+04h
  8895  0FCF  082F               	movf	1+(??_UART_Init+4)+0,w
  8896  0FD0  00F5               	movwf	1+(?___aldiv)+04h
  8897  0FD1  082E               	movf	0+(??_UART_Init+4)+0,w
  8898  0FD2  00F4               	movwf	0+(?___aldiv)+04h
  8899                           
  8900  0FD3  120A  158A  231A   	fcall	___aldiv
              120A  158A         
  8901  0FD8  0871               	movf	1+(((0+(?___aldiv)))),w
  8902  0FD9  01FA               	clrf	(UART_Init@x+1)
  8903  0FDA  07FA               	addwf	(UART_Init@x+1)
  8904  0FDB  0870               	movf	0+(((0+(?___aldiv)))),w
  8905  0FDC  01F9               	clrf	(UART_Init@x)
  8906  0FDD  07F9               	addwf	(UART_Init@x)
  8907                           
  8908                           	line	8
  8909                           	
  8910  0FDE                     l4787:	
  8911                           ;uart.h: 8: BRGH = 1;
  8912  0FDE  1683               	bsf	status, 5	;RP0=1, select bank1
  8913  0FDF  1303               	bcf	status, 6	;RP1=0, select bank1
  8914  0FE0  1518               	bsf	(1218/8)^080h,(1218)&7
  8915  0FE1  2FE2               	goto	l4789
  8916                           	line	9
  8917                           	
  8918  0FE2                     l793:	
  8919                           	line	10
  8920                           	
  8921  0FE2                     l4789:	
  8922                           ;uart.h: 9: }
  8923                           ;uart.h: 10: if(x<256)
  8924  0FE2  3001               	movlw	high(0100h)
  8925  0FE3  027A               	subwf	(UART_Init@x+1),w
  8926  0FE4  3000               	movlw	low(0100h)
  8927  0FE5  1903               	skipnz
  8928  0FE6  0279               	subwf	(UART_Init@x),w
  8929  0FE7  1803               	skipnc
  8930  0FE8  2FEA               	goto	u3971
  8931  0FE9  2FEB               	goto	u3970
  8932  0FEA                     u3971:
  8933  0FEA  2FFF               	goto	l795
  8934  0FEB                     u3970:
  8935                           	line	12
  8936                           	
  8937  0FEB                     l4791:	
  8938                           ;uart.h: 11: {
  8939                           ;uart.h: 12: SPBRG = x;
  8940  0FEB  0879               	movf	(UART_Init@x),w
  8941  0FEC  1683               	bsf	status, 5	;RP0=1, select bank1
  8942  0FED  1303               	bcf	status, 6	;RP1=0, select bank1
  8943  0FEE  0099               	movwf	(153)^080h	;volatile
  8944                           	line	13
  8945                           	
  8946  0FEF                     l4793:	
  8947                           ;uart.h: 13: SYNC = 0;
  8948  0FEF  1218               	bcf	(1220/8)^080h,(1220)&7
  8949                           	line	14
  8950                           	
  8951  0FF0                     l4795:	
  8952                           ;uart.h: 14: SPEN = 1;
  8953  0FF0  1283               	bcf	status, 5	;RP0=0, select bank0
  8954  0FF1  1303               	bcf	status, 6	;RP1=0, select bank0
  8955  0FF2  1798               	bsf	(199/8),(199)&7
  8956                           	line	15
  8957                           	
  8958  0FF3                     l4797:	
  8959                           ;uart.h: 15: TRISC7 = 1;
  8960  0FF3  1683               	bsf	status, 5	;RP0=1, select bank1
  8961  0FF4  1303               	bcf	status, 6	;RP1=0, select bank1
  8962  0FF5  1787               	bsf	(1087/8)^080h,(1087)&7
  8963                           	line	16
  8964                           	
  8965  0FF6                     l4799:	
  8966                           ;uart.h: 16: TRISC6 = 1;
  8967  0FF6  1707               	bsf	(1086/8)^080h,(1086)&7
  8968                           	line	17
  8969                           	
  8970  0FF7                     l4801:	
  8971                           ;uart.h: 17: CREN = 1;
  8972  0FF7  1283               	bcf	status, 5	;RP0=0, select bank0
  8973  0FF8  1303               	bcf	status, 6	;RP1=0, select bank0
  8974  0FF9  1618               	bsf	(196/8),(196)&7
  8975                           	line	18
  8976                           	
  8977  0FFA                     l4803:	
  8978                           ;uart.h: 18: TXEN = 1;
  8979  0FFA  1683               	bsf	status, 5	;RP0=1, select bank1
  8980  0FFB  1303               	bcf	status, 6	;RP1=0, select bank1
  8981  0FFC  1698               	bsf	(1221/8)^080h,(1221)&7
  8982  0FFD  2FFF               	goto	l795
  8983                           	line	19
  8984                           	
  8985  0FFE                     l4805:	
  8986                           ;uart.h: 19: return 1;
  8987                           ;	Return value of _UART_Init is never used
  8988  0FFE  2FFF               	goto	l795
  8989                           	line	20
  8990                           	
  8991  0FFF                     l794:	
  8992                           	line	22
  8993                           ;uart.h: 20: }
  8994                           ;uart.h: 21: return 0;
  8995                           ;	Return value of _UART_Init is never used
  8996                           	
  8997  0FFF                     l795:	
  8998  0FFF  0008               	return
  8999                           	opt stack 0
  9000                           GLOBAL	__end_of_UART_Init
  9001  1000                     	__end_of_UART_Init:
  9002 ;; =============== function _UART_Init ends ============
  9003                           
  9004                           	signat	_UART_Init,4217
  9005                           	global	_Lcd8_Write_Char
  9006                           psect	text912,local,class=CODE,delta=2
  9007                           global __ptext912
  9008  129C                     __ptext912:
  9009                           
  9010 ;; *************** function _Lcd8_Write_Char *****************
  9011 ;; Defined at:
  9012 ;;		line 105 in file "lcd.h"
  9013 ;; Parameters:    Size  Location     Type
  9014 ;;  a               1    wreg     unsigned char 
  9015 ;; Auto vars:     Size  Location     Type
  9016 ;;  a               1    3[COMMON] unsigned char 
  9017 ;; Return value:  Size  Location     Type
  9018 ;;		None               void
  9019 ;; Registers used:
  9020 ;;		wreg, status,2, status,0, pclath, cstack
  9021 ;; Tracked objects:
  9022 ;;		On entry : 0/0
  9023 ;;		On exit  : 0/0
  9024 ;;		Unchanged: 0/0
  9025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9026 ;;      Params:         0       0       0       0       0
  9027 ;;      Locals:         1       0       0       0       0
  9028 ;;      Temps:          2       0       0       0       0
  9029 ;;      Totals:         3       0       0       0       0
  9030 ;;Total ram usage:        3 bytes
  9031 ;; Hardware stack levels used:    1
  9032 ;; Hardware stack levels required when called:    1
  9033 ;; This function calls:
  9034 ;;		_Lcd8_Port
  9035 ;; This function is called by:
  9036 ;;		_Lcd8_Write_String
  9037 ;; This function uses a non-reentrant model
  9038 ;;
  9039                           psect	text912
  9040                           	file	"lcd.h"
  9041                           	line	105
  9042                           	global	__size_of_Lcd8_Write_Char
  9043  001A                     	__size_of_Lcd8_Write_Char	equ	__end_of_Lcd8_Write_Char-_Lcd8_Write_Char
  9044                           	
  9045  129C                     _Lcd8_Write_Char:	
  9046                           	opt	stack 3
  9047                           ; Regs used in _Lcd8_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9048                           ;Lcd8_Write_Char@a stored from wreg
  9049  129C  00F3               	movwf	(Lcd8_Write_Char@a)
  9050                           	line	106
  9051                           	
  9052  129D                     l4771:	
  9053                           ;lcd.h: 106: RD5 = 1;
  9054  129D  1283               	bcf	status, 5	;RP0=0, select bank0
  9055  129E  1303               	bcf	status, 6	;RP1=0, select bank0
  9056  129F  1688               	bsf	(69/8),(69)&7
  9057                           	line	107
  9058                           	
  9059  12A0                     l4773:	
  9060                           ;lcd.h: 107: Lcd8_Port(a);
  9061  12A0  0873               	movf	(Lcd8_Write_Char@a),w
  9062  12A1  160A  118A  243C   	fcall	_Lcd8_Port
              160A  118A         
  9063                           	line	108
  9064                           	
  9065  12A6                     l4775:	
  9066                           ;lcd.h: 108: RD7 = 1;
  9067  12A6  1283               	bcf	status, 5	;RP0=0, select bank0
  9068  12A7  1303               	bcf	status, 6	;RP1=0, select bank0
  9069  12A8  1788               	bsf	(71/8),(71)&7
  9070                           	line	109
  9071                           	
  9072  12A9                     l4777:	
  9073                           ;lcd.h: 109: _delay((unsigned long)((4)*(20000000/4000.0)));
  9074                           	opt asmopt_off
  9075  12A9  301A               movlw	26
  9076  12AA  00F2               movwf	((??_Lcd8_Write_Char+0)+0+1),f
  9077  12AB  30F8               	movlw	248
  9078  12AC  00F1               movwf	((??_Lcd8_Write_Char+0)+0),f
  9079  12AD                     u5047:
  9080  12AD  0BF1               	decfsz	((??_Lcd8_Write_Char+0)+0),f
  9081  12AE  2AAD               	goto	u5047
  9082  12AF  0BF2               	decfsz	((??_Lcd8_Write_Char+0)+0+1),f
  9083  12B0  2AAD               	goto	u5047
  9084  12B1  0064               	clrwdt
  9085                           opt asmopt_on
  9086                           
  9087                           	line	110
  9088                           	
  9089  12B2                     l4779:	
  9090                           ;lcd.h: 110: RD7 = 0;
  9091  12B2  1283               	bcf	status, 5	;RP0=0, select bank0
  9092  12B3  1303               	bcf	status, 6	;RP1=0, select bank0
  9093  12B4  1388               	bcf	(71/8),(71)&7
  9094                           	line	111
  9095                           	
  9096  12B5                     l737:	
  9097  12B5  0008               	return
  9098                           	opt stack 0
  9099                           GLOBAL	__end_of_Lcd8_Write_Char
  9100  12B6                     	__end_of_Lcd8_Write_Char:
  9101 ;; =============== function _Lcd8_Write_Char ends ============
  9102                           
  9103                           	signat	_Lcd8_Write_Char,4216
  9104                           	global	_Lcd8_Cmd
  9105                           psect	text913,local,class=CODE,delta=2
  9106                           global __ptext913
  9107  1282                     __ptext913:
  9108                           
  9109 ;; *************** function _Lcd8_Cmd *****************
  9110 ;; Defined at:
  9111 ;;		line 65 in file "lcd.h"
  9112 ;; Parameters:    Size  Location     Type
  9113 ;;  a               1    wreg     unsigned char 
  9114 ;; Auto vars:     Size  Location     Type
  9115 ;;  a               1    3[COMMON] unsigned char 
  9116 ;; Return value:  Size  Location     Type
  9117 ;;		None               void
  9118 ;; Registers used:
  9119 ;;		wreg, status,2, status,0, pclath, cstack
  9120 ;; Tracked objects:
  9121 ;;		On entry : 0/0
  9122 ;;		On exit  : 0/0
  9123 ;;		Unchanged: 0/0
  9124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9125 ;;      Params:         0       0       0       0       0
  9126 ;;      Locals:         1       0       0       0       0
  9127 ;;      Temps:          2       0       0       0       0
  9128 ;;      Totals:         3       0       0       0       0
  9129 ;;Total ram usage:        3 bytes
  9130 ;; Hardware stack levels used:    1
  9131 ;; Hardware stack levels required when called:    1
  9132 ;; This function calls:
  9133 ;;		_Lcd8_Port
  9134 ;; This function is called by:
  9135 ;;		_Lcd8_Clear
  9136 ;;		_Lcd8_Set_Cursor
  9137 ;;		_Lcd8_Init
  9138 ;;		_Lcd8_Shift_Right
  9139 ;;		_Lcd8_Shift_Left
  9140 ;; This function uses a non-reentrant model
  9141 ;;
  9142                           psect	text913
  9143                           	file	"lcd.h"
  9144                           	line	65
  9145                           	global	__size_of_Lcd8_Cmd
  9146  001A                     	__size_of_Lcd8_Cmd	equ	__end_of_Lcd8_Cmd-_Lcd8_Cmd
  9147                           	
  9148  1282                     _Lcd8_Cmd:	
  9149                           	opt	stack 3
  9150                           ; Regs used in _Lcd8_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9151                           ;Lcd8_Cmd@a stored from wreg
  9152  1282  00F3               	movwf	(Lcd8_Cmd@a)
  9153                           	line	66
  9154                           	
  9155  1283                     l4761:	
  9156                           ;lcd.h: 66: RD5 = 0;
  9157  1283  1283               	bcf	status, 5	;RP0=0, select bank0
  9158  1284  1303               	bcf	status, 6	;RP1=0, select bank0
  9159  1285  1288               	bcf	(69/8),(69)&7
  9160                           	line	67
  9161                           	
  9162  1286                     l4763:	
  9163                           ;lcd.h: 67: Lcd8_Port(a);
  9164  1286  0873               	movf	(Lcd8_Cmd@a),w
  9165  1287  160A  118A  243C   	fcall	_Lcd8_Port
              160A  118A         
  9166                           	line	68
  9167                           	
  9168  128C                     l4765:	
  9169                           ;lcd.h: 68: RD7 = 1;
  9170  128C  1283               	bcf	status, 5	;RP0=0, select bank0
  9171  128D  1303               	bcf	status, 6	;RP1=0, select bank0
  9172  128E  1788               	bsf	(71/8),(71)&7
  9173                           	line	69
  9174                           	
  9175  128F                     l4767:	
  9176                           ;lcd.h: 69: _delay((unsigned long)((5)*(20000000/4000.0)));
  9177                           	opt asmopt_off
  9178  128F  3021               movlw	33
  9179  1290  00F2               movwf	((??_Lcd8_Cmd+0)+0+1),f
  9180  1291  3076               	movlw	118
  9181  1292  00F1               movwf	((??_Lcd8_Cmd+0)+0),f
  9182  1293                     u5057:
  9183  1293  0BF1               	decfsz	((??_Lcd8_Cmd+0)+0),f
  9184  1294  2A93               	goto	u5057
  9185  1295  0BF2               	decfsz	((??_Lcd8_Cmd+0)+0+1),f
  9186  1296  2A93               	goto	u5057
  9187  1297  0064               	clrwdt
  9188                           opt asmopt_on
  9189                           
  9190                           	line	70
  9191                           	
  9192  1298                     l4769:	
  9193                           ;lcd.h: 70: RD7 = 0;
  9194  1298  1283               	bcf	status, 5	;RP0=0, select bank0
  9195  1299  1303               	bcf	status, 6	;RP1=0, select bank0
  9196  129A  1388               	bcf	(71/8),(71)&7
  9197                           	line	71
  9198                           	
  9199  129B                     l722:	
  9200  129B  0008               	return
  9201                           	opt stack 0
  9202                           GLOBAL	__end_of_Lcd8_Cmd
  9203  129C                     	__end_of_Lcd8_Cmd:
  9204 ;; =============== function _Lcd8_Cmd ends ============
  9205                           
  9206                           	signat	_Lcd8_Cmd,4216
  9207                           	global	_frexp
  9208                           psect	text914,local,class=CODE,delta=2
  9209                           global __ptext914
  9210  14BB                     __ptext914:
  9211                           
  9212 ;; *************** function _frexp *****************
  9213 ;; Defined at:
  9214 ;;		line 255 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\frexp.c"
  9215 ;; Parameters:    Size  Location     Type
  9216 ;;  value           3    0[COMMON] unsigned char 
  9217 ;;  eptr            1    3[COMMON] PTR int 
  9218 ;;		 -> log@exp(2), floor@expon(2), 
  9219 ;; Auto vars:     Size  Location     Type
  9220 ;;		None
  9221 ;; Return value:  Size  Location     Type
  9222 ;;                  3    0[COMMON] PTR int 
  9223 ;; Registers used:
  9224 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  9225 ;; Tracked objects:
  9226 ;;		On entry : 0/0
  9227 ;;		On exit  : 0/0
  9228 ;;		Unchanged: 0/0
  9229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9230 ;;      Params:         4       0       0       0       0
  9231 ;;      Locals:         0       0       0       0       0
  9232 ;;      Temps:          2       0       0       0       0
  9233 ;;      Totals:         6       0       0       0       0
  9234 ;;Total ram usage:        6 bytes
  9235 ;; Hardware stack levels used:    1
  9236 ;; This function calls:
  9237 ;;		Nothing
  9238 ;; This function is called by:
  9239 ;;		_floor
  9240 ;;		_log
  9241 ;; This function uses a non-reentrant model
  9242 ;;
  9243                           psect	text914
  9244                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\frexp.c"
  9245                           	line	255
  9246                           	global	__size_of_frexp
  9247  004A                     	__size_of_frexp	equ	__end_of_frexp-_frexp
  9248                           	
  9249  14BB                     _frexp:	
  9250                           	opt	stack 1
  9251                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1]
  9252                           	line	256
  9253                           	
  9254  14BB                     l4733:	
  9255  14BB  0872               	movf	(frexp@value+2),w
  9256  14BC  0471               	iorwf	(frexp@value+1),w
  9257  14BD  0470               	iorwf	(frexp@value),w
  9258  14BE  1D03               	skipz
  9259  14BF  2CC1               	goto	u3881
  9260  14C0  2CC2               	goto	u3880
  9261  14C1                     u3881:
  9262  14C1  2CD2               	goto	l4741
  9263  14C2                     u3880:
  9264                           	line	257
  9265                           	
  9266  14C2                     l4735:	
  9267  14C2  0873               	movf	(frexp@eptr),w
  9268  14C3  0084               	movwf	fsr0
  9269  14C4  3000               	movlw	low(0)
  9270  14C5  1383               	bcf	status, 7	;select IRP bank0
  9271  14C6  0080               	movwf	indf
  9272  14C7  0A84               	incf	fsr0,f
  9273  14C8  3000               	movlw	high(0)
  9274  14C9  0080               	movwf	indf
  9275                           	line	258
  9276                           	
  9277  14CA                     l4737:	
  9278  14CA  3000               	movlw	0x0
  9279  14CB  00F0               	movwf	(?_frexp)
  9280  14CC  3000               	movlw	0x0
  9281  14CD  00F1               	movwf	(?_frexp+1)
  9282  14CE  3000               	movlw	0x0
  9283  14CF  00F2               	movwf	(?_frexp+2)
  9284  14D0  2D04               	goto	l1988
  9285                           	
  9286  14D1                     l4739:	
  9287  14D1  2D04               	goto	l1988
  9288                           	line	259
  9289                           	
  9290  14D2                     l1987:	
  9291                           	line	261
  9292                           	
  9293  14D2                     l4741:	
  9294  14D2  0872               	movf	0+(frexp@value)+02h,w
  9295  14D3  397F               	andlw	(1<<7)-1
  9296  14D4  00F4               	movwf	(??_frexp+0)+0
  9297  14D5  01F5               	clrf	(??_frexp+0)+0+1
  9298  14D6  3001               	movlw	01h
  9299  14D7  00FF               	movwf	btemp+1
  9300  14D8                     u3895:
  9301  14D8  1003               	clrc
  9302  14D9  0DF4               	rlf	(??_frexp+0)+0,f
  9303  14DA  0DF5               	rlf	(??_frexp+0)+1,f
  9304  14DB  0BFF               	decfsz	btemp+1,f
  9305  14DC  2CD8               	goto	u3895
  9306  14DD  0873               	movf	(frexp@eptr),w
  9307  14DE  0084               	movwf	fsr0
  9308  14DF  0874               	movf	0+(??_frexp+0)+0,w
  9309  14E0  1383               	bcf	status, 7	;select IRP bank0
  9310  14E1  0080               	movwf	indf
  9311  14E2  0A84               	incf	fsr0,f
  9312  14E3  0875               	movf	1+(??_frexp+0)+0,w
  9313  14E4  0080               	movwf	indf
  9314                           	line	262
  9315                           	
  9316  14E5                     l4743:	
  9317  14E5  0D71               	rlf	0+(frexp@value)+01h,w
  9318  14E6  0D71               	rlf	0+(frexp@value)+01h,w
  9319  14E7  3901               	andlw	1
  9320  14E8  00F4               	movwf	(??_frexp+0)+0
  9321  14E9  01F5               	clrf	(??_frexp+0)+0+1
  9322  14EA  0873               	movf	(frexp@eptr),w
  9323  14EB  0084               	movwf	fsr0
  9324  14EC  0874               	movf	0+(??_frexp+0)+0,w
  9325  14ED  0480               	iorwf	indf,f
  9326  14EE  0A84               	incf	fsr0,f
  9327  14EF  0875               	movf	1+(??_frexp+0)+0,w
  9328  14F0  0480               	iorwf	indf,f
  9329                           	line	263
  9330                           	
  9331  14F1                     l4745:	
  9332  14F1  0873               	movf	(frexp@eptr),w
  9333  14F2  0084               	movwf	fsr0
  9334  14F3  3082               	movlw	low(-126)
  9335  14F4  0780               	addwf	indf,f
  9336  14F5  0F84               	incfsz	fsr0,f
  9337  14F6  0800               	movf	indf,w
  9338  14F7  1803               	skipnc
  9339  14F8  0A00               	incf	indf,w
  9340  14F9  00FF               	movwf	btemp+1
  9341  14FA  30FF               	movlw	high(-126)
  9342  14FB  077F               	addwf	btemp+1,w
  9343  14FC  0080               	movwf	indf
  9344  14FD  0384               	decf	fsr0,f
  9345                           	line	268
  9346                           	
  9347  14FE                     l4747:	
  9348  14FE  0872               	movf	0+(frexp@value)+02h,w
  9349  14FF  3980               	andlw	not (((1<<7)-1)<<0)
  9350  1500  383F               	iorlw	(03Fh & ((1<<7)-1))<<0
  9351  1501  00F2               	movwf	0+(frexp@value)+02h
  9352                           	line	269
  9353                           	
  9354  1502                     l4749:	
  9355  1502  13F1               	bcf	0+(frexp@value)+01h,7
  9356                           	line	273
  9357                           	
  9358  1503                     l4751:	
  9359  1503  2D04               	goto	l1988
  9360                           	
  9361  1504                     l4753:	
  9362                           	line	274
  9363                           	
  9364  1504                     l1988:	
  9365  1504  0008               	return
  9366                           	opt stack 0
  9367                           GLOBAL	__end_of_frexp
  9368  1505                     	__end_of_frexp:
  9369 ;; =============== function _frexp ends ============
  9370                           
  9371                           	signat	_frexp,8315
  9372                           	global	___awmod
  9373                           psect	text915,local,class=CODE,delta=2
  9374                           global __ptext915
  9375  16AB                     __ptext915:
  9376                           
  9377 ;; *************** function ___awmod *****************
  9378 ;; Defined at:
  9379 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awmod.c"
  9380 ;; Parameters:    Size  Location     Type
  9381 ;;  divisor         2    0[COMMON] int 
  9382 ;;  dividend        2    2[COMMON] int 
  9383 ;; Auto vars:     Size  Location     Type
  9384 ;;  sign            1    6[COMMON] unsigned char 
  9385 ;;  counter         1    5[COMMON] unsigned char 
  9386 ;; Return value:  Size  Location     Type
  9387 ;;                  2    0[COMMON] int 
  9388 ;; Registers used:
  9389 ;;		wreg, status,2, status,0
  9390 ;; Tracked objects:
  9391 ;;		On entry : 0/0
  9392 ;;		On exit  : 0/0
  9393 ;;		Unchanged: 0/0
  9394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9395 ;;      Params:         4       0       0       0       0
  9396 ;;      Locals:         2       0       0       0       0
  9397 ;;      Temps:          1       0       0       0       0
  9398 ;;      Totals:         7       0       0       0       0
  9399 ;;Total ram usage:        7 bytes
  9400 ;; Hardware stack levels used:    1
  9401 ;; This function calls:
  9402 ;;		Nothing
  9403 ;; This function is called by:
  9404 ;;		_intToStr
  9405 ;; This function uses a non-reentrant model
  9406 ;;
  9407                           psect	text915
  9408                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awmod.c"
  9409                           	line	5
  9410                           	global	__size_of___awmod
  9411  0066                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  9412                           	
  9413  16AB                     ___awmod:	
  9414                           	opt	stack 3
  9415                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  9416                           	line	8
  9417                           	
  9418  16AB                     l4681:	
  9419  16AB  01F6               	clrf	(___awmod@sign)
  9420                           	line	9
  9421  16AC  1FF3               	btfss	(___awmod@dividend+1),7
  9422  16AD  2EAF               	goto	u3781
  9423  16AE  2EB0               	goto	u3780
  9424  16AF                     u3781:
  9425  16AF  2EB9               	goto	l4685
  9426  16B0                     u3780:
  9427                           	line	10
  9428                           	
  9429  16B0                     l4683:	
  9430  16B0  09F2               	comf	(___awmod@dividend),f
  9431  16B1  09F3               	comf	(___awmod@dividend+1),f
  9432  16B2  0AF2               	incf	(___awmod@dividend),f
  9433  16B3  1903               	skipnz
  9434  16B4  0AF3               	incf	(___awmod@dividend+1),f
  9435                           	line	11
  9436  16B5  01F6               	clrf	(___awmod@sign)
  9437  16B6  1403               	bsf	status,0
  9438  16B7  0DF6               	rlf	(___awmod@sign),f
  9439  16B8  2EB9               	goto	l4685
  9440                           	line	12
  9441                           	
  9442  16B9                     l1809:	
  9443                           	line	13
  9444                           	
  9445  16B9                     l4685:	
  9446  16B9  1FF1               	btfss	(___awmod@divisor+1),7
  9447  16BA  2EBC               	goto	u3791
  9448  16BB  2EBD               	goto	u3790
  9449  16BC                     u3791:
  9450  16BC  2EC3               	goto	l4689
  9451  16BD                     u3790:
  9452                           	line	14
  9453                           	
  9454  16BD                     l4687:	
  9455  16BD  09F0               	comf	(___awmod@divisor),f
  9456  16BE  09F1               	comf	(___awmod@divisor+1),f
  9457  16BF  0AF0               	incf	(___awmod@divisor),f
  9458  16C0  1903               	skipnz
  9459  16C1  0AF1               	incf	(___awmod@divisor+1),f
  9460  16C2  2EC3               	goto	l4689
  9461                           	
  9462  16C3                     l1810:	
  9463                           	line	15
  9464                           	
  9465  16C3                     l4689:	
  9466  16C3  0871               	movf	(___awmod@divisor+1),w
  9467  16C4  0470               	iorwf	(___awmod@divisor),w
  9468  16C5  1903               	skipnz
  9469  16C6  2EC8               	goto	u3801
  9470  16C7  2EC9               	goto	u3800
  9471  16C8                     u3801:
  9472  16C8  2EFF               	goto	l4707
  9473  16C9                     u3800:
  9474                           	line	16
  9475                           	
  9476  16C9                     l4691:	
  9477  16C9  01F5               	clrf	(___awmod@counter)
  9478  16CA  1403               	bsf	status,0
  9479  16CB  0DF5               	rlf	(___awmod@counter),f
  9480                           	line	17
  9481  16CC  2ED9               	goto	l4697
  9482                           	
  9483  16CD                     l1813:	
  9484                           	line	18
  9485                           	
  9486  16CD                     l4693:	
  9487  16CD  3001               	movlw	01h
  9488                           	
  9489  16CE                     u3815:
  9490  16CE  1003               	clrc
  9491  16CF  0DF0               	rlf	(___awmod@divisor),f
  9492  16D0  0DF1               	rlf	(___awmod@divisor+1),f
  9493  16D1  3EFF               	addlw	-1
  9494  16D2  1D03               	skipz
  9495  16D3  2ECE               	goto	u3815
  9496                           	line	19
  9497                           	
  9498  16D4                     l4695:	
  9499  16D4  3001               	movlw	(01h)
  9500  16D5  00F4               	movwf	(??___awmod+0)+0
  9501  16D6  0874               	movf	(??___awmod+0)+0,w
  9502  16D7  07F5               	addwf	(___awmod@counter),f
  9503  16D8  2ED9               	goto	l4697
  9504                           	line	20
  9505                           	
  9506  16D9                     l1812:	
  9507                           	line	17
  9508                           	
  9509  16D9                     l4697:	
  9510  16D9  1FF1               	btfss	(___awmod@divisor+1),(15)&7
  9511  16DA  2EDC               	goto	u3821
  9512  16DB  2EDD               	goto	u3820
  9513  16DC                     u3821:
  9514  16DC  2ECD               	goto	l4693
  9515  16DD                     u3820:
  9516  16DD  2EDF               	goto	l4699
  9517                           	
  9518  16DE                     l1814:	
  9519  16DE  2EDF               	goto	l4699
  9520                           	line	21
  9521                           	
  9522  16DF                     l1815:	
  9523                           	line	22
  9524                           	
  9525  16DF                     l4699:	
  9526  16DF  0871               	movf	(___awmod@divisor+1),w
  9527  16E0  0273               	subwf	(___awmod@dividend+1),w
  9528  16E1  1D03               	skipz
  9529  16E2  2EE5               	goto	u3835
  9530  16E3  0870               	movf	(___awmod@divisor),w
  9531  16E4  0272               	subwf	(___awmod@dividend),w
  9532  16E5                     u3835:
  9533  16E5  1C03               	skipc
  9534  16E6  2EE8               	goto	u3831
  9535  16E7  2EE9               	goto	u3830
  9536  16E8                     u3831:
  9537  16E8  2EF0               	goto	l4703
  9538  16E9                     u3830:
  9539                           	line	23
  9540                           	
  9541  16E9                     l4701:	
  9542  16E9  0870               	movf	(___awmod@divisor),w
  9543  16EA  02F2               	subwf	(___awmod@dividend),f
  9544  16EB  0871               	movf	(___awmod@divisor+1),w
  9545  16EC  1C03               	skipc
  9546  16ED  03F3               	decf	(___awmod@dividend+1),f
  9547  16EE  02F3               	subwf	(___awmod@dividend+1),f
  9548  16EF  2EF0               	goto	l4703
  9549                           	
  9550  16F0                     l1816:	
  9551                           	line	24
  9552                           	
  9553  16F0                     l4703:	
  9554  16F0  3001               	movlw	01h
  9555                           	
  9556  16F1                     u3845:
  9557  16F1  1003               	clrc
  9558  16F2  0CF1               	rrf	(___awmod@divisor+1),f
  9559  16F3  0CF0               	rrf	(___awmod@divisor),f
  9560  16F4  3EFF               	addlw	-1
  9561  16F5  1D03               	skipz
  9562  16F6  2EF1               	goto	u3845
  9563                           	line	25
  9564                           	
  9565  16F7                     l4705:	
  9566  16F7  3001               	movlw	low(01h)
  9567  16F8  02F5               	subwf	(___awmod@counter),f
  9568  16F9  1D03               	btfss	status,2
  9569  16FA  2EFC               	goto	u3851
  9570  16FB  2EFD               	goto	u3850
  9571  16FC                     u3851:
  9572  16FC  2EDF               	goto	l4699
  9573  16FD                     u3850:
  9574  16FD  2EFF               	goto	l4707
  9575                           	
  9576  16FE                     l1817:	
  9577  16FE  2EFF               	goto	l4707
  9578                           	line	26
  9579                           	
  9580  16FF                     l1811:	
  9581                           	line	27
  9582                           	
  9583  16FF                     l4707:	
  9584  16FF  0876               	movf	(___awmod@sign),w
  9585  1700  1D03               	skipz
  9586  1701  2F03               	goto	u3860
  9587  1702  2F09               	goto	l4711
  9588  1703                     u3860:
  9589                           	line	28
  9590                           	
  9591  1703                     l4709:	
  9592  1703  09F2               	comf	(___awmod@dividend),f
  9593  1704  09F3               	comf	(___awmod@dividend+1),f
  9594  1705  0AF2               	incf	(___awmod@dividend),f
  9595  1706  1903               	skipnz
  9596  1707  0AF3               	incf	(___awmod@dividend+1),f
  9597  1708  2F09               	goto	l4711
  9598                           	
  9599  1709                     l1818:	
  9600                           	line	29
  9601                           	
  9602  1709                     l4711:	
  9603  1709  0873               	movf	(___awmod@dividend+1),w
  9604  170A  01F1               	clrf	(?___awmod+1)
  9605  170B  07F1               	addwf	(?___awmod+1)
  9606  170C  0872               	movf	(___awmod@dividend),w
  9607  170D  01F0               	clrf	(?___awmod)
  9608  170E  07F0               	addwf	(?___awmod)
  9609                           
  9610  170F  2F10               	goto	l1819
  9611                           	
  9612  1710                     l4713:	
  9613                           	line	30
  9614                           	
  9615  1710                     l1819:	
  9616  1710  0008               	return
  9617                           	opt stack 0
  9618                           GLOBAL	__end_of___awmod
  9619  1711                     	__end_of___awmod:
  9620 ;; =============== function ___awmod ends ============
  9621                           
  9622                           	signat	___awmod,8314
  9623                           	global	___aldiv
  9624                           psect	text916,local,class=CODE,delta=2
  9625                           global __ptext916
  9626  0B1A                     __ptext916:
  9627                           
  9628 ;; *************** function ___aldiv *****************
  9629 ;; Defined at:
  9630 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\aldiv.c"
  9631 ;; Parameters:    Size  Location     Type
  9632 ;;  divisor         4    0[COMMON] long 
  9633 ;;  dividend        4    4[COMMON] long 
  9634 ;; Auto vars:     Size  Location     Type
  9635 ;;  quotient        4    2[BANK0 ] long 
  9636 ;;  sign            1    1[BANK0 ] unsigned char 
  9637 ;;  counter         1    0[BANK0 ] unsigned char 
  9638 ;; Return value:  Size  Location     Type
  9639 ;;                  4    0[COMMON] long 
  9640 ;; Registers used:
  9641 ;;		wreg, status,2, status,0
  9642 ;; Tracked objects:
  9643 ;;		On entry : 0/0
  9644 ;;		On exit  : 0/0
  9645 ;;		Unchanged: 0/0
  9646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9647 ;;      Params:         8       0       0       0       0
  9648 ;;      Locals:         0       6       0       0       0
  9649 ;;      Temps:          1       0       0       0       0
  9650 ;;      Totals:         9       6       0       0       0
  9651 ;;Total ram usage:       15 bytes
  9652 ;; Hardware stack levels used:    1
  9653 ;; This function calls:
  9654 ;;		Nothing
  9655 ;; This function is called by:
  9656 ;;		_UART_Init
  9657 ;; This function uses a non-reentrant model
  9658 ;;
  9659                           psect	text916
  9660                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\aldiv.c"
  9661                           	line	5
  9662                           	global	__size_of___aldiv
  9663  00A8                     	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
  9664                           	
  9665  0B1A                     ___aldiv:	
  9666                           	opt	stack 6
  9667                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9668                           	line	9
  9669                           	
  9670  0B1A                     l4639:	
  9671  0B1A  1283               	bcf	status, 5	;RP0=0, select bank0
  9672  0B1B  1303               	bcf	status, 6	;RP1=0, select bank0
  9673  0B1C  01A1               	clrf	(___aldiv@sign)
  9674                           	line	10
  9675  0B1D  1FF3               	btfss	(___aldiv@divisor+3),7
  9676  0B1E  2B20               	goto	u3681
  9677  0B1F  2B21               	goto	u3680
  9678  0B20                     u3681:
  9679  0B20  2B30               	goto	l4645
  9680  0B21                     u3680:
  9681                           	line	11
  9682                           	
  9683  0B21                     l4641:	
  9684  0B21  09F0               	comf	(___aldiv@divisor),f
  9685  0B22  09F1               	comf	(___aldiv@divisor+1),f
  9686  0B23  09F2               	comf	(___aldiv@divisor+2),f
  9687  0B24  09F3               	comf	(___aldiv@divisor+3),f
  9688  0B25  0AF0               	incf	(___aldiv@divisor),f
  9689  0B26  1903               	skipnz
  9690  0B27  0AF1               	incf	(___aldiv@divisor+1),f
  9691  0B28  1903               	skipnz
  9692  0B29  0AF2               	incf	(___aldiv@divisor+2),f
  9693  0B2A  1903               	skipnz
  9694  0B2B  0AF3               	incf	(___aldiv@divisor+3),f
  9695                           	line	12
  9696                           	
  9697  0B2C                     l4643:	
  9698  0B2C  01A1               	clrf	(___aldiv@sign)
  9699  0B2D  1403               	bsf	status,0
  9700  0B2E  0DA1               	rlf	(___aldiv@sign),f
  9701  0B2F  2B30               	goto	l4645
  9702                           	line	13
  9703                           	
  9704  0B30                     l1796:	
  9705                           	line	14
  9706                           	
  9707  0B30                     l4645:	
  9708  0B30  1FF7               	btfss	(___aldiv@dividend+3),7
  9709  0B31  2B33               	goto	u3691
  9710  0B32  2B34               	goto	u3690
  9711  0B33                     u3691:
  9712  0B33  2B44               	goto	l4651
  9713  0B34                     u3690:
  9714                           	line	15
  9715                           	
  9716  0B34                     l4647:	
  9717  0B34  09F4               	comf	(___aldiv@dividend),f
  9718  0B35  09F5               	comf	(___aldiv@dividend+1),f
  9719  0B36  09F6               	comf	(___aldiv@dividend+2),f
  9720  0B37  09F7               	comf	(___aldiv@dividend+3),f
  9721  0B38  0AF4               	incf	(___aldiv@dividend),f
  9722  0B39  1903               	skipnz
  9723  0B3A  0AF5               	incf	(___aldiv@dividend+1),f
  9724  0B3B  1903               	skipnz
  9725  0B3C  0AF6               	incf	(___aldiv@dividend+2),f
  9726  0B3D  1903               	skipnz
  9727  0B3E  0AF7               	incf	(___aldiv@dividend+3),f
  9728                           	line	16
  9729                           	
  9730  0B3F                     l4649:	
  9731  0B3F  3001               	movlw	(01h)
  9732  0B40  00F8               	movwf	(??___aldiv+0)+0
  9733  0B41  0878               	movf	(??___aldiv+0)+0,w
  9734  0B42  06A1               	xorwf	(___aldiv@sign),f
  9735  0B43  2B44               	goto	l4651
  9736                           	line	17
  9737                           	
  9738  0B44                     l1797:	
  9739                           	line	18
  9740                           	
  9741  0B44                     l4651:	
  9742  0B44  3000               	movlw	0
  9743  0B45  00A5               	movwf	(___aldiv@quotient+3)
  9744  0B46  3000               	movlw	0
  9745  0B47  00A4               	movwf	(___aldiv@quotient+2)
  9746  0B48  3000               	movlw	0
  9747  0B49  00A3               	movwf	(___aldiv@quotient+1)
  9748  0B4A  3000               	movlw	0
  9749  0B4B  00A2               	movwf	(___aldiv@quotient)
  9750                           
  9751                           	line	19
  9752                           	
  9753  0B4C                     l4653:	
  9754  0B4C  0873               	movf	(___aldiv@divisor+3),w
  9755  0B4D  0472               	iorwf	(___aldiv@divisor+2),w
  9756  0B4E  0471               	iorwf	(___aldiv@divisor+1),w
  9757  0B4F  0470               	iorwf	(___aldiv@divisor),w
  9758  0B50  1903               	skipnz
  9759  0B51  2B53               	goto	u3701
  9760  0B52  2B54               	goto	u3700
  9761  0B53                     u3701:
  9762  0B53  2BA8               	goto	l4673
  9763  0B54                     u3700:
  9764                           	line	20
  9765                           	
  9766  0B54                     l4655:	
  9767  0B54  01A0               	clrf	(___aldiv@counter)
  9768  0B55  1403               	bsf	status,0
  9769  0B56  0DA0               	rlf	(___aldiv@counter),f
  9770                           	line	21
  9771  0B57  2B66               	goto	l4659
  9772                           	
  9773  0B58                     l1800:	
  9774                           	line	22
  9775                           	
  9776  0B58                     l4657:	
  9777  0B58  3001               	movlw	01h
  9778  0B59  00F8               	movwf	(??___aldiv+0)+0
  9779  0B5A                     u3715:
  9780  0B5A  1003               	clrc
  9781  0B5B  0DF0               	rlf	(___aldiv@divisor),f
  9782  0B5C  0DF1               	rlf	(___aldiv@divisor+1),f
  9783  0B5D  0DF2               	rlf	(___aldiv@divisor+2),f
  9784  0B5E  0DF3               	rlf	(___aldiv@divisor+3),f
  9785  0B5F  0BF8               	decfsz	(??___aldiv+0)+0
  9786  0B60  2B5A               	goto	u3715
  9787                           	line	23
  9788  0B61  3001               	movlw	(01h)
  9789  0B62  00F8               	movwf	(??___aldiv+0)+0
  9790  0B63  0878               	movf	(??___aldiv+0)+0,w
  9791  0B64  07A0               	addwf	(___aldiv@counter),f
  9792  0B65  2B66               	goto	l4659
  9793                           	line	24
  9794                           	
  9795  0B66                     l1799:	
  9796                           	line	21
  9797                           	
  9798  0B66                     l4659:	
  9799  0B66  1FF3               	btfss	(___aldiv@divisor+3),(31)&7
  9800  0B67  2B69               	goto	u3721
  9801  0B68  2B6A               	goto	u3720
  9802  0B69                     u3721:
  9803  0B69  2B58               	goto	l4657
  9804  0B6A                     u3720:
  9805  0B6A  2B6C               	goto	l4661
  9806                           	
  9807  0B6B                     l1801:	
  9808  0B6B  2B6C               	goto	l4661
  9809                           	line	25
  9810                           	
  9811  0B6C                     l1802:	
  9812                           	line	26
  9813                           	
  9814  0B6C                     l4661:	
  9815  0B6C  3001               	movlw	01h
  9816  0B6D  00F8               	movwf	(??___aldiv+0)+0
  9817  0B6E                     u3735:
  9818  0B6E  1003               	clrc
  9819  0B6F  0DA2               	rlf	(___aldiv@quotient),f
  9820  0B70  0DA3               	rlf	(___aldiv@quotient+1),f
  9821  0B71  0DA4               	rlf	(___aldiv@quotient+2),f
  9822  0B72  0DA5               	rlf	(___aldiv@quotient+3),f
  9823  0B73  0BF8               	decfsz	(??___aldiv+0)+0
  9824  0B74  2B6E               	goto	u3735
  9825                           	line	27
  9826                           	
  9827  0B75                     l4663:	
  9828  0B75  0873               	movf	(___aldiv@divisor+3),w
  9829  0B76  0277               	subwf	(___aldiv@dividend+3),w
  9830  0B77  1D03               	skipz
  9831  0B78  2B83               	goto	u3745
  9832  0B79  0872               	movf	(___aldiv@divisor+2),w
  9833  0B7A  0276               	subwf	(___aldiv@dividend+2),w
  9834  0B7B  1D03               	skipz
  9835  0B7C  2B83               	goto	u3745
  9836  0B7D  0871               	movf	(___aldiv@divisor+1),w
  9837  0B7E  0275               	subwf	(___aldiv@dividend+1),w
  9838  0B7F  1D03               	skipz
  9839  0B80  2B83               	goto	u3745
  9840  0B81  0870               	movf	(___aldiv@divisor),w
  9841  0B82  0274               	subwf	(___aldiv@dividend),w
  9842  0B83                     u3745:
  9843  0B83  1C03               	skipc
  9844  0B84  2B86               	goto	u3741
  9845  0B85  2B87               	goto	u3740
  9846  0B86                     u3741:
  9847  0B86  2B97               	goto	l4669
  9848  0B87                     u3740:
  9849                           	line	28
  9850                           	
  9851  0B87                     l4665:	
  9852  0B87  0870               	movf	(___aldiv@divisor),w
  9853  0B88  02F4               	subwf	(___aldiv@dividend),f
  9854  0B89  0871               	movf	(___aldiv@divisor+1),w
  9855  0B8A  1C03               	skipc
  9856  0B8B  0F71               	incfsz	(___aldiv@divisor+1),w
  9857  0B8C  02F5               	subwf	(___aldiv@dividend+1),f
  9858  0B8D  0872               	movf	(___aldiv@divisor+2),w
  9859  0B8E  1C03               	skipc
  9860  0B8F  0F72               	incfsz	(___aldiv@divisor+2),w
  9861  0B90  02F6               	subwf	(___aldiv@dividend+2),f
  9862  0B91  0873               	movf	(___aldiv@divisor+3),w
  9863  0B92  1C03               	skipc
  9864  0B93  0F73               	incfsz	(___aldiv@divisor+3),w
  9865  0B94  02F7               	subwf	(___aldiv@dividend+3),f
  9866                           	line	29
  9867                           	
  9868  0B95                     l4667:	
  9869  0B95  1422               	bsf	(___aldiv@quotient)+(0/8),(0)&7
  9870  0B96  2B97               	goto	l4669
  9871                           	line	30
  9872                           	
  9873  0B97                     l1803:	
  9874                           	line	31
  9875                           	
  9876  0B97                     l4669:	
  9877  0B97  3001               	movlw	01h
  9878  0B98                     u3755:
  9879  0B98  1003               	clrc
  9880  0B99  0CF3               	rrf	(___aldiv@divisor+3),f
  9881  0B9A  0CF2               	rrf	(___aldiv@divisor+2),f
  9882  0B9B  0CF1               	rrf	(___aldiv@divisor+1),f
  9883  0B9C  0CF0               	rrf	(___aldiv@divisor),f
  9884  0B9D  3EFF               	addlw	-1
  9885  0B9E  1D03               	skipz
  9886  0B9F  2B98               	goto	u3755
  9887                           
  9888                           	line	32
  9889                           	
  9890  0BA0                     l4671:	
  9891  0BA0  3001               	movlw	low(01h)
  9892  0BA1  02A0               	subwf	(___aldiv@counter),f
  9893  0BA2  1D03               	btfss	status,2
  9894  0BA3  2BA5               	goto	u3761
  9895  0BA4  2BA6               	goto	u3760
  9896  0BA5                     u3761:
  9897  0BA5  2B6C               	goto	l4661
  9898  0BA6                     u3760:
  9899  0BA6  2BA8               	goto	l4673
  9900                           	
  9901  0BA7                     l1804:	
  9902  0BA7  2BA8               	goto	l4673
  9903                           	line	33
  9904                           	
  9905  0BA8                     l1798:	
  9906                           	line	34
  9907                           	
  9908  0BA8                     l4673:	
  9909  0BA8  0821               	movf	(___aldiv@sign),w
  9910  0BA9  1D03               	skipz
  9911  0BAA  2BAC               	goto	u3770
  9912  0BAB  2BB8               	goto	l4677
  9913  0BAC                     u3770:
  9914                           	line	35
  9915                           	
  9916  0BAC                     l4675:	
  9917  0BAC  09A2               	comf	(___aldiv@quotient),f
  9918  0BAD  09A3               	comf	(___aldiv@quotient+1),f
  9919  0BAE  09A4               	comf	(___aldiv@quotient+2),f
  9920  0BAF  09A5               	comf	(___aldiv@quotient+3),f
  9921  0BB0  0AA2               	incf	(___aldiv@quotient),f
  9922  0BB1  1903               	skipnz
  9923  0BB2  0AA3               	incf	(___aldiv@quotient+1),f
  9924  0BB3  1903               	skipnz
  9925  0BB4  0AA4               	incf	(___aldiv@quotient+2),f
  9926  0BB5  1903               	skipnz
  9927  0BB6  0AA5               	incf	(___aldiv@quotient+3),f
  9928  0BB7  2BB8               	goto	l4677
  9929                           	
  9930  0BB8                     l1805:	
  9931                           	line	36
  9932                           	
  9933  0BB8                     l4677:	
  9934  0BB8  0825               	movf	(___aldiv@quotient+3),w
  9935  0BB9  00F3               	movwf	(?___aldiv+3)
  9936  0BBA  0824               	movf	(___aldiv@quotient+2),w
  9937  0BBB  00F2               	movwf	(?___aldiv+2)
  9938  0BBC  0823               	movf	(___aldiv@quotient+1),w
  9939  0BBD  00F1               	movwf	(?___aldiv+1)
  9940  0BBE  0822               	movf	(___aldiv@quotient),w
  9941  0BBF  00F0               	movwf	(?___aldiv)
  9942                           
  9943  0BC0  2BC1               	goto	l1806
  9944                           	
  9945  0BC1                     l4679:	
  9946                           	line	37
  9947                           	
  9948  0BC1                     l1806:	
  9949  0BC1  0008               	return
  9950                           	opt stack 0
  9951                           GLOBAL	__end_of___aldiv
  9952  0BC2                     	__end_of___aldiv:
  9953 ;; =============== function ___aldiv ends ============
  9954                           
  9955                           	signat	___aldiv,8316
  9956                           	global	___ftge
  9957                           psect	text917,local,class=CODE,delta=2
  9958                           global __ptext917
  9959  0903                     __ptext917:
  9960                           
  9961 ;; *************** function ___ftge *****************
  9962 ;; Defined at:
  9963 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftge.c"
  9964 ;; Parameters:    Size  Location     Type
  9965 ;;  ff1             3    0[COMMON] float 
  9966 ;;  ff2             3    3[COMMON] float 
  9967 ;; Auto vars:     Size  Location     Type
  9968 ;;		None
  9969 ;; Return value:  Size  Location     Type
  9970 ;;		None               void
  9971 ;; Registers used:
  9972 ;;		wreg, status,2, status,0
  9973 ;; Tracked objects:
  9974 ;;		On entry : 0/0
  9975 ;;		On exit  : 0/0
  9976 ;;		Unchanged: 0/0
  9977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9978 ;;      Params:         6       0       0       0       0
  9979 ;;      Locals:         0       0       0       0       0
  9980 ;;      Temps:          6       0       0       0       0
  9981 ;;      Totals:        12       0       0       0       0
  9982 ;;Total ram usage:       12 bytes
  9983 ;; Hardware stack levels used:    1
  9984 ;; This function calls:
  9985 ;;		Nothing
  9986 ;; This function is called by:
  9987 ;;		_pow
  9988 ;;		_exp
  9989 ;;		_floor
  9990 ;;		_log
  9991 ;;		_ldexp
  9992 ;; This function uses a non-reentrant model
  9993 ;;
  9994                           psect	text917
  9995                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftge.c"
  9996                           	line	5
  9997                           	global	__size_of___ftge
  9998  006C                     	__size_of___ftge	equ	__end_of___ftge-___ftge
  9999                           	
 10000  0903                     ___ftge:	
 10001                           	opt	stack 1
 10002                           ; Regs used in ___ftge: [wreg+status,2+status,0]
 10003                           	line	6
 10004                           	
 10005  0903                     l4619:	
 10006  0903  1FF2               	btfss	(___ftge@ff1+2),(23)&7
 10007  0904  2906               	goto	u3631
 10008  0905  2907               	goto	u3630
 10009  0906                     u3631:
 10010  0906  292D               	goto	l4623
 10011  0907                     u3630:
 10012                           	line	7
 10013                           	
 10014  0907                     l4621:	
 10015  0907  3000               	movlw	0
 10016  0908  00F6               	movwf	((??___ftge+0)+0)
 10017  0909  3000               	movlw	0
 10018  090A  00F7               	movwf	((??___ftge+0)+0+1)
 10019  090B  3080               	movlw	080h
 10020  090C  00F8               	movwf	((??___ftge+0)+0+2)
 10021  090D  0970               	comf	(___ftge@ff1),w
 10022  090E  00F9               	movwf	(??___ftge+3)+0
 10023  090F  0971               	comf	(___ftge@ff1+1),w
 10024  0910  00FA               	movwf	((??___ftge+3)+0+1)
 10025  0911  0972               	comf	(___ftge@ff1+2),w
 10026  0912  00FB               	movwf	((??___ftge+3)+0+2)
 10027  0913  0AF9               	incf	(??___ftge+3)+0,f
 10028  0914  1903               	skipnz
 10029  0915  0AFA               	incf	((??___ftge+3)+0+1),f
 10030  0916  1903               	skipnz
 10031  0917  0AFB               	incf	((??___ftge+3)+0+2),f
 10032  0918  0879               	movf	0+(??___ftge+3)+0,w
 10033  0919  07F6               	addwf	(??___ftge+0)+0,f
 10034  091A  087A               	movf	1+(??___ftge+3)+0,w
 10035  091B  1803               	skipnc
 10036  091C  0F7A               	incfsz	1+(??___ftge+3)+0,w
 10037  091D  291F               	goto	u3641
 10038  091E  2920               	goto	u3642
 10039  091F                     u3641:
 10040  091F  07F7               	addwf	(??___ftge+0)+1,f
 10041                           	
 10042  0920                     u3642:
 10043  0920  087B               	movf	2+(??___ftge+3)+0,w
 10044  0921  1803               	skipnc
 10045  0922  0F7B               	incfsz	2+(??___ftge+3)+0,w
 10046  0923  2925               	goto	u3643
 10047  0924  2926               	goto	u3644
 10048  0925                     u3643:
 10049  0925  07F8               	addwf	(??___ftge+0)+2,f
 10050                           	
 10051  0926                     u3644:
 10052  0926  0876               	movf	0+(??___ftge+0)+0,w
 10053  0927  00F0               	movwf	(___ftge@ff1)
 10054  0928  0877               	movf	1+(??___ftge+0)+0,w
 10055  0929  00F1               	movwf	(___ftge@ff1+1)
 10056  092A  0878               	movf	2+(??___ftge+0)+0,w
 10057  092B  00F2               	movwf	(___ftge@ff1+2)
 10058  092C  292D               	goto	l4623
 10059                           	
 10060  092D                     l1768:	
 10061                           	line	8
 10062                           	
 10063  092D                     l4623:	
 10064  092D  1FF5               	btfss	(___ftge@ff2+2),(23)&7
 10065  092E  2930               	goto	u3651
 10066  092F  2931               	goto	u3650
 10067  0930                     u3651:
 10068  0930  2957               	goto	l4627
 10069  0931                     u3650:
 10070                           	line	9
 10071                           	
 10072  0931                     l4625:	
 10073  0931  3000               	movlw	0
 10074  0932  00F6               	movwf	((??___ftge+0)+0)
 10075  0933  3000               	movlw	0
 10076  0934  00F7               	movwf	((??___ftge+0)+0+1)
 10077  0935  3080               	movlw	080h
 10078  0936  00F8               	movwf	((??___ftge+0)+0+2)
 10079  0937  0973               	comf	(___ftge@ff2),w
 10080  0938  00F9               	movwf	(??___ftge+3)+0
 10081  0939  0974               	comf	(___ftge@ff2+1),w
 10082  093A  00FA               	movwf	((??___ftge+3)+0+1)
 10083  093B  0975               	comf	(___ftge@ff2+2),w
 10084  093C  00FB               	movwf	((??___ftge+3)+0+2)
 10085  093D  0AF9               	incf	(??___ftge+3)+0,f
 10086  093E  1903               	skipnz
 10087  093F  0AFA               	incf	((??___ftge+3)+0+1),f
 10088  0940  1903               	skipnz
 10089  0941  0AFB               	incf	((??___ftge+3)+0+2),f
 10090  0942  0879               	movf	0+(??___ftge+3)+0,w
 10091  0943  07F6               	addwf	(??___ftge+0)+0,f
 10092  0944  087A               	movf	1+(??___ftge+3)+0,w
 10093  0945  1803               	skipnc
 10094  0946  0F7A               	incfsz	1+(??___ftge+3)+0,w
 10095  0947  2949               	goto	u3661
 10096  0948  294A               	goto	u3662
 10097  0949                     u3661:
 10098  0949  07F7               	addwf	(??___ftge+0)+1,f
 10099                           	
 10100  094A                     u3662:
 10101  094A  087B               	movf	2+(??___ftge+3)+0,w
 10102  094B  1803               	skipnc
 10103  094C  0F7B               	incfsz	2+(??___ftge+3)+0,w
 10104  094D  294F               	goto	u3663
 10105  094E  2950               	goto	u3664
 10106  094F                     u3663:
 10107  094F  07F8               	addwf	(??___ftge+0)+2,f
 10108                           	
 10109  0950                     u3664:
 10110  0950  0876               	movf	0+(??___ftge+0)+0,w
 10111  0951  00F3               	movwf	(___ftge@ff2)
 10112  0952  0877               	movf	1+(??___ftge+0)+0,w
 10113  0953  00F4               	movwf	(___ftge@ff2+1)
 10114  0954  0878               	movf	2+(??___ftge+0)+0,w
 10115  0955  00F5               	movwf	(___ftge@ff2+2)
 10116  0956  2957               	goto	l4627
 10117                           	
 10118  0957                     l1769:	
 10119                           	line	10
 10120                           	
 10121  0957                     l4627:	
 10122  0957  3080               	movlw	080h
 10123  0958  06F2               	xorwf	(___ftge@ff1+2),f
 10124                           	line	11
 10125                           	
 10126  0959                     l4629:	
 10127  0959  3080               	movlw	080h
 10128  095A  06F5               	xorwf	(___ftge@ff2+2),f
 10129                           	line	12
 10130                           	
 10131  095B                     l4631:	
 10132  095B  0875               	movf	(___ftge@ff2+2),w
 10133  095C  0272               	subwf	(___ftge@ff1+2),w
 10134  095D  1D03               	skipz
 10135  095E  2965               	goto	u3675
 10136  095F  0874               	movf	(___ftge@ff2+1),w
 10137  0960  0271               	subwf	(___ftge@ff1+1),w
 10138  0961  1D03               	skipz
 10139  0962  2965               	goto	u3675
 10140  0963  0873               	movf	(___ftge@ff2),w
 10141  0964  0270               	subwf	(___ftge@ff1),w
 10142  0965                     u3675:
 10143  0965  1803               	skipnc
 10144  0966  2968               	goto	u3671
 10145  0967  2969               	goto	u3670
 10146  0968                     u3671:
 10147  0968  296B               	goto	l4635
 10148  0969                     u3670:
 10149                           	
 10150  0969                     l4633:	
 10151  0969  1003               	clrc
 10152                           	
 10153  096A  296E               	goto	l1770
 10154                           	
 10155  096B                     l4387:	
 10156                           	
 10157  096B                     l4635:	
 10158  096B  1403               	setc
 10159                           	
 10160  096C  296E               	goto	l1770
 10161                           	
 10162  096D                     l4389:	
 10163  096D  296E               	goto	l1770
 10164                           	
 10165  096E                     l4637:	
 10166                           	line	13
 10167                           	
 10168  096E                     l1770:	
 10169  096E  0008               	return
 10170                           	opt stack 0
 10171                           GLOBAL	__end_of___ftge
 10172  096F                     	__end_of___ftge:
 10173 ;; =============== function ___ftge ends ============
 10174                           
 10175                           	signat	___ftge,8312
 10176                           	global	___ftneg
 10177                           psect	text918,local,class=CODE,delta=2
 10178                           global __ptext918
 10179  124B                     __ptext918:
 10180                           
 10181 ;; *************** function ___ftneg *****************
 10182 ;; Defined at:
 10183 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftneg.c"
 10184 ;; Parameters:    Size  Location     Type
 10185 ;;  f1              3    8[COMMON] float 
 10186 ;; Auto vars:     Size  Location     Type
 10187 ;;		None
 10188 ;; Return value:  Size  Location     Type
 10189 ;;                  3    8[COMMON] float 
 10190 ;; Registers used:
 10191 ;;		wreg
 10192 ;; Tracked objects:
 10193 ;;		On entry : 0/0
 10194 ;;		On exit  : 0/0
 10195 ;;		Unchanged: 0/0
 10196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10197 ;;      Params:         3       0       0       0       0
 10198 ;;      Locals:         0       0       0       0       0
 10199 ;;      Temps:          0       0       0       0       0
 10200 ;;      Totals:         3       0       0       0       0
 10201 ;;Total ram usage:        3 bytes
 10202 ;; Hardware stack levels used:    1
 10203 ;; This function calls:
 10204 ;;		Nothing
 10205 ;; This function is called by:
 10206 ;;		_ftoa
 10207 ;;		_pow
 10208 ;;		_exp
 10209 ;;		_ldexp
 10210 ;; This function uses a non-reentrant model
 10211 ;;
 10212                           psect	text918
 10213                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftneg.c"
 10214                           	line	16
 10215                           	global	__size_of___ftneg
 10216  000C                     	__size_of___ftneg	equ	__end_of___ftneg-___ftneg
 10217                           	
 10218  124B                     ___ftneg:	
 10219                           	opt	stack 1
 10220                           ; Regs used in ___ftneg: [wreg]
 10221                           	line	17
 10222                           	
 10223  124B                     l4611:	
 10224  124B  087A               	movf	(___ftneg@f1+2),w
 10225  124C  0479               	iorwf	(___ftneg@f1+1),w
 10226  124D  0478               	iorwf	(___ftneg@f1),w
 10227  124E  1903               	skipnz
 10228  124F  2A51               	goto	u3621
 10229  1250  2A52               	goto	u3620
 10230  1251                     u3621:
 10231  1251  2A55               	goto	l4615
 10232  1252                     u3620:
 10233                           	line	18
 10234                           	
 10235  1252                     l4613:	
 10236  1252  3080               	movlw	080h
 10237  1253  06FA               	xorwf	(___ftneg@f1+2),f
 10238  1254  2A55               	goto	l4615
 10239                           	
 10240  1255                     l1764:	
 10241                           	line	19
 10242                           	
 10243  1255                     l4615:	
 10244  1255  2A56               	goto	l1765
 10245                           	
 10246  1256                     l4617:	
 10247                           	line	20
 10248                           	
 10249  1256                     l1765:	
 10250  1256  0008               	return
 10251                           	opt stack 0
 10252                           GLOBAL	__end_of___ftneg
 10253  1257                     	__end_of___ftneg:
 10254 ;; =============== function ___ftneg ends ============
 10255                           
 10256                           	signat	___ftneg,4219
 10257                           	global	___awdiv
 10258                           psect	text919,local,class=CODE,delta=2
 10259                           global __ptext919
 10260  1711                     __ptext919:
 10261                           
 10262 ;; *************** function ___awdiv *****************
 10263 ;; Defined at:
 10264 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awdiv.c"
 10265 ;; Parameters:    Size  Location     Type
 10266 ;;  divisor         2    0[COMMON] int 
 10267 ;;  dividend        2    2[COMMON] int 
 10268 ;; Auto vars:     Size  Location     Type
 10269 ;;  quotient        2    7[COMMON] int 
 10270 ;;  sign            1    6[COMMON] unsigned char 
 10271 ;;  counter         1    5[COMMON] unsigned char 
 10272 ;; Return value:  Size  Location     Type
 10273 ;;                  2    0[COMMON] int 
 10274 ;; Registers used:
 10275 ;;		wreg, status,2, status,0
 10276 ;; Tracked objects:
 10277 ;;		On entry : 0/0
 10278 ;;		On exit  : 0/0
 10279 ;;		Unchanged: 0/0
 10280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10281 ;;      Params:         4       0       0       0       0
 10282 ;;      Locals:         4       0       0       0       0
 10283 ;;      Temps:          1       0       0       0       0
 10284 ;;      Totals:         9       0       0       0       0
 10285 ;;Total ram usage:        9 bytes
 10286 ;; Hardware stack levels used:    1
 10287 ;; This function calls:
 10288 ;;		Nothing
 10289 ;; This function is called by:
 10290 ;;		_intToStr
 10291 ;; This function uses a non-reentrant model
 10292 ;;
 10293                           psect	text919
 10294                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awdiv.c"
 10295                           	line	5
 10296                           	global	__size_of___awdiv
 10297  0074                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
 10298                           	
 10299  1711                     ___awdiv:	
 10300                           	opt	stack 3
 10301                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10302                           	line	9
 10303                           	
 10304  1711                     l4571:	
 10305  1711  01F6               	clrf	(___awdiv@sign)
 10306                           	line	10
 10307  1712  1FF1               	btfss	(___awdiv@divisor+1),7
 10308  1713  2F15               	goto	u3521
 10309  1714  2F16               	goto	u3520
 10310  1715                     u3521:
 10311  1715  2F1F               	goto	l4575
 10312  1716                     u3520:
 10313                           	line	11
 10314                           	
 10315  1716                     l4573:	
 10316  1716  09F0               	comf	(___awdiv@divisor),f
 10317  1717  09F1               	comf	(___awdiv@divisor+1),f
 10318  1718  0AF0               	incf	(___awdiv@divisor),f
 10319  1719  1903               	skipnz
 10320  171A  0AF1               	incf	(___awdiv@divisor+1),f
 10321                           	line	12
 10322  171B  01F6               	clrf	(___awdiv@sign)
 10323  171C  1403               	bsf	status,0
 10324  171D  0DF6               	rlf	(___awdiv@sign),f
 10325  171E  2F1F               	goto	l4575
 10326                           	line	13
 10327                           	
 10328  171F                     l1741:	
 10329                           	line	14
 10330                           	
 10331  171F                     l4575:	
 10332  171F  1FF3               	btfss	(___awdiv@dividend+1),7
 10333  1720  2F22               	goto	u3531
 10334  1721  2F23               	goto	u3530
 10335  1722                     u3531:
 10336  1722  2F2D               	goto	l4581
 10337  1723                     u3530:
 10338                           	line	15
 10339                           	
 10340  1723                     l4577:	
 10341  1723  09F2               	comf	(___awdiv@dividend),f
 10342  1724  09F3               	comf	(___awdiv@dividend+1),f
 10343  1725  0AF2               	incf	(___awdiv@dividend),f
 10344  1726  1903               	skipnz
 10345  1727  0AF3               	incf	(___awdiv@dividend+1),f
 10346                           	line	16
 10347                           	
 10348  1728                     l4579:	
 10349  1728  3001               	movlw	(01h)
 10350  1729  00F4               	movwf	(??___awdiv+0)+0
 10351  172A  0874               	movf	(??___awdiv+0)+0,w
 10352  172B  06F6               	xorwf	(___awdiv@sign),f
 10353  172C  2F2D               	goto	l4581
 10354                           	line	17
 10355                           	
 10356  172D                     l1742:	
 10357                           	line	18
 10358                           	
 10359  172D                     l4581:	
 10360  172D  01F7               	clrf	(___awdiv@quotient)
 10361  172E  01F8               	clrf	(___awdiv@quotient+1)
 10362                           	line	19
 10363                           	
 10364  172F                     l4583:	
 10365  172F  0871               	movf	(___awdiv@divisor+1),w
 10366  1730  0470               	iorwf	(___awdiv@divisor),w
 10367  1731  1903               	skipnz
 10368  1732  2F34               	goto	u3541
 10369  1733  2F35               	goto	u3540
 10370  1734                     u3541:
 10371  1734  2F73               	goto	l4603
 10372  1735                     u3540:
 10373                           	line	20
 10374                           	
 10375  1735                     l4585:	
 10376  1735  01F5               	clrf	(___awdiv@counter)
 10377  1736  1403               	bsf	status,0
 10378  1737  0DF5               	rlf	(___awdiv@counter),f
 10379                           	line	21
 10380  1738  2F45               	goto	l4591
 10381                           	
 10382  1739                     l1745:	
 10383                           	line	22
 10384                           	
 10385  1739                     l4587:	
 10386  1739  3001               	movlw	01h
 10387                           	
 10388  173A                     u3555:
 10389  173A  1003               	clrc
 10390  173B  0DF0               	rlf	(___awdiv@divisor),f
 10391  173C  0DF1               	rlf	(___awdiv@divisor+1),f
 10392  173D  3EFF               	addlw	-1
 10393  173E  1D03               	skipz
 10394  173F  2F3A               	goto	u3555
 10395                           	line	23
 10396                           	
 10397  1740                     l4589:	
 10398  1740  3001               	movlw	(01h)
 10399  1741  00F4               	movwf	(??___awdiv+0)+0
 10400  1742  0874               	movf	(??___awdiv+0)+0,w
 10401  1743  07F5               	addwf	(___awdiv@counter),f
 10402  1744  2F45               	goto	l4591
 10403                           	line	24
 10404                           	
 10405  1745                     l1744:	
 10406                           	line	21
 10407                           	
 10408  1745                     l4591:	
 10409  1745  1FF1               	btfss	(___awdiv@divisor+1),(15)&7
 10410  1746  2F48               	goto	u3561
 10411  1747  2F49               	goto	u3560
 10412  1748                     u3561:
 10413  1748  2F39               	goto	l4587
 10414  1749                     u3560:
 10415  1749  2F4B               	goto	l4593
 10416                           	
 10417  174A                     l1746:	
 10418  174A  2F4B               	goto	l4593
 10419                           	line	25
 10420                           	
 10421  174B                     l1747:	
 10422                           	line	26
 10423                           	
 10424  174B                     l4593:	
 10425  174B  3001               	movlw	01h
 10426                           	
 10427  174C                     u3575:
 10428  174C  1003               	clrc
 10429  174D  0DF7               	rlf	(___awdiv@quotient),f
 10430  174E  0DF8               	rlf	(___awdiv@quotient+1),f
 10431  174F  3EFF               	addlw	-1
 10432  1750  1D03               	skipz
 10433  1751  2F4C               	goto	u3575
 10434                           	line	27
 10435  1752  0871               	movf	(___awdiv@divisor+1),w
 10436  1753  0273               	subwf	(___awdiv@dividend+1),w
 10437  1754  1D03               	skipz
 10438  1755  2F58               	goto	u3585
 10439  1756  0870               	movf	(___awdiv@divisor),w
 10440  1757  0272               	subwf	(___awdiv@dividend),w
 10441  1758                     u3585:
 10442  1758  1C03               	skipc
 10443  1759  2F5B               	goto	u3581
 10444  175A  2F5C               	goto	u3580
 10445  175B                     u3581:
 10446  175B  2F64               	goto	l4599
 10447  175C                     u3580:
 10448                           	line	28
 10449                           	
 10450  175C                     l4595:	
 10451  175C  0870               	movf	(___awdiv@divisor),w
 10452  175D  02F2               	subwf	(___awdiv@dividend),f
 10453  175E  0871               	movf	(___awdiv@divisor+1),w
 10454  175F  1C03               	skipc
 10455  1760  03F3               	decf	(___awdiv@dividend+1),f
 10456  1761  02F3               	subwf	(___awdiv@dividend+1),f
 10457                           	line	29
 10458                           	
 10459  1762                     l4597:	
 10460  1762  1477               	bsf	(___awdiv@quotient)+(0/8),(0)&7
 10461  1763  2F64               	goto	l4599
 10462                           	line	30
 10463                           	
 10464  1764                     l1748:	
 10465                           	line	31
 10466                           	
 10467  1764                     l4599:	
 10468  1764  3001               	movlw	01h
 10469                           	
 10470  1765                     u3595:
 10471  1765  1003               	clrc
 10472  1766  0CF1               	rrf	(___awdiv@divisor+1),f
 10473  1767  0CF0               	rrf	(___awdiv@divisor),f
 10474  1768  3EFF               	addlw	-1
 10475  1769  1D03               	skipz
 10476  176A  2F65               	goto	u3595
 10477                           	line	32
 10478                           	
 10479  176B                     l4601:	
 10480  176B  3001               	movlw	low(01h)
 10481  176C  02F5               	subwf	(___awdiv@counter),f
 10482  176D  1D03               	btfss	status,2
 10483  176E  2F70               	goto	u3601
 10484  176F  2F71               	goto	u3600
 10485  1770                     u3601:
 10486  1770  2F4B               	goto	l4593
 10487  1771                     u3600:
 10488  1771  2F73               	goto	l4603
 10489                           	
 10490  1772                     l1749:	
 10491  1772  2F73               	goto	l4603
 10492                           	line	33
 10493                           	
 10494  1773                     l1743:	
 10495                           	line	34
 10496                           	
 10497  1773                     l4603:	
 10498  1773  0876               	movf	(___awdiv@sign),w
 10499  1774  1D03               	skipz
 10500  1775  2F77               	goto	u3610
 10501  1776  2F7D               	goto	l4607
 10502  1777                     u3610:
 10503                           	line	35
 10504                           	
 10505  1777                     l4605:	
 10506  1777  09F7               	comf	(___awdiv@quotient),f
 10507  1778  09F8               	comf	(___awdiv@quotient+1),f
 10508  1779  0AF7               	incf	(___awdiv@quotient),f
 10509  177A  1903               	skipnz
 10510  177B  0AF8               	incf	(___awdiv@quotient+1),f
 10511  177C  2F7D               	goto	l4607
 10512                           	
 10513  177D                     l1750:	
 10514                           	line	36
 10515                           	
 10516  177D                     l4607:	
 10517  177D  0878               	movf	(___awdiv@quotient+1),w
 10518  177E  01F1               	clrf	(?___awdiv+1)
 10519  177F  07F1               	addwf	(?___awdiv+1)
 10520  1780  0877               	movf	(___awdiv@quotient),w
 10521  1781  01F0               	clrf	(?___awdiv)
 10522  1782  07F0               	addwf	(?___awdiv)
 10523                           
 10524  1783  2F84               	goto	l1751
 10525                           	
 10526  1784                     l4609:	
 10527                           	line	37
 10528                           	
 10529  1784                     l1751:	
 10530  1784  0008               	return
 10531                           	opt stack 0
 10532                           GLOBAL	__end_of___awdiv
 10533  1785                     	__end_of___awdiv:
 10534 ;; =============== function ___awdiv ends ============
 10535                           
 10536                           	signat	___awdiv,8314
 10537                           	global	___fttol
 10538                           psect	text920,local,class=CODE,delta=2
 10539                           global __ptext920
 10540  0A76                     __ptext920:
 10541                           
 10542 ;; *************** function ___fttol *****************
 10543 ;; Defined at:
 10544 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\fttol.c"
 10545 ;; Parameters:    Size  Location     Type
 10546 ;;  f1              3    0[COMMON] float 
 10547 ;; Auto vars:     Size  Location     Type
 10548 ;;  lval            4    9[COMMON] unsigned long 
 10549 ;;  exp1            1   13[COMMON] unsigned char 
 10550 ;;  sign1           1    8[COMMON] unsigned char 
 10551 ;; Return value:  Size  Location     Type
 10552 ;;                  4    0[COMMON] long 
 10553 ;; Registers used:
 10554 ;;		wreg, status,2, status,0
 10555 ;; Tracked objects:
 10556 ;;		On entry : 0/0
 10557 ;;		On exit  : 0/0
 10558 ;;		Unchanged: 0/0
 10559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10560 ;;      Params:         4       0       0       0       0
 10561 ;;      Locals:         6       0       0       0       0
 10562 ;;      Temps:          4       0       0       0       0
 10563 ;;      Totals:        14       0       0       0       0
 10564 ;;Total ram usage:       14 bytes
 10565 ;; Hardware stack levels used:    1
 10566 ;; This function calls:
 10567 ;;		Nothing
 10568 ;; This function is called by:
 10569 ;;		_ftoa
 10570 ;;		_pow
 10571 ;;		_exp
 10572 ;;		_floor
 10573 ;; This function uses a non-reentrant model
 10574 ;;
 10575                           psect	text920
 10576                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\fttol.c"
 10577                           	line	45
 10578                           	global	__size_of___fttol
 10579  00A4                     	__size_of___fttol	equ	__end_of___fttol-___fttol
 10580                           	
 10581  0A76                     ___fttol:	
 10582                           	opt	stack 2
 10583                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 10584                           	line	49
 10585                           	
 10586  0A76                     l4515:	
 10587  0A76  0870               	movf	(___fttol@f1),w
 10588  0A77  00F4               	movwf	((??___fttol+0)+0)
 10589  0A78  0871               	movf	(___fttol@f1+1),w
 10590  0A79  00F5               	movwf	((??___fttol+0)+0+1)
 10591  0A7A  0872               	movf	(___fttol@f1+2),w
 10592  0A7B  00F6               	movwf	((??___fttol+0)+0+2)
 10593  0A7C  1003               	clrc
 10594  0A7D  0D75               	rlf	(??___fttol+0)+1,w
 10595  0A7E  0D76               	rlf	(??___fttol+0)+2,w
 10596  0A7F  00F7               	movwf	(??___fttol+3)+0
 10597  0A80  0877               	movf	(??___fttol+3)+0,w
 10598  0A81  00FD               	movwf	(___fttol@exp1)
 10599  0A82  08FD               	movf	((___fttol@exp1)),f
 10600  0A83  1D03               	skipz
 10601  0A84  2A86               	goto	u3411
 10602  0A85  2A87               	goto	u3410
 10603  0A86                     u3411:
 10604  0A86  2A91               	goto	l4521
 10605  0A87                     u3410:
 10606                           	line	50
 10607                           	
 10608  0A87                     l4517:	
 10609  0A87  3000               	movlw	0
 10610  0A88  00F3               	movwf	(?___fttol+3)
 10611  0A89  3000               	movlw	0
 10612  0A8A  00F2               	movwf	(?___fttol+2)
 10613  0A8B  3000               	movlw	0
 10614  0A8C  00F1               	movwf	(?___fttol+1)
 10615  0A8D  3000               	movlw	0
 10616  0A8E  00F0               	movwf	(?___fttol)
 10617                           
 10618  0A8F  2B19               	goto	l1711
 10619                           	
 10620  0A90                     l4519:	
 10621  0A90  2B19               	goto	l1711
 10622                           	
 10623  0A91                     l1710:	
 10624                           	line	51
 10625                           	
 10626  0A91                     l4521:	
 10627  0A91  0870               	movf	(___fttol@f1),w
 10628  0A92  00F4               	movwf	((??___fttol+0)+0)
 10629  0A93  0871               	movf	(___fttol@f1+1),w
 10630  0A94  00F5               	movwf	((??___fttol+0)+0+1)
 10631  0A95  0872               	movf	(___fttol@f1+2),w
 10632  0A96  00F6               	movwf	((??___fttol+0)+0+2)
 10633  0A97  3017               	movlw	017h
 10634  0A98                     u3425:
 10635  0A98  1003               	clrc
 10636  0A99  0CF6               	rrf	(??___fttol+0)+2,f
 10637  0A9A  0CF5               	rrf	(??___fttol+0)+1,f
 10638  0A9B  0CF4               	rrf	(??___fttol+0)+0,f
 10639  0A9C                     u3420:
 10640  0A9C  3EFF               	addlw	-1
 10641  0A9D  1D03               	skipz
 10642  0A9E  2A98               	goto	u3425
 10643  0A9F  0874               	movf	0+(??___fttol+0)+0,w
 10644  0AA0  00F7               	movwf	(??___fttol+3)+0
 10645  0AA1  0877               	movf	(??___fttol+3)+0,w
 10646  0AA2  00F8               	movwf	(___fttol@sign1)
 10647                           	line	52
 10648                           	
 10649  0AA3                     l4523:	
 10650  0AA3  17F1               	bsf	(___fttol@f1)+(15/8),(15)&7
 10651                           	line	53
 10652                           	
 10653  0AA4                     l4525:	
 10654  0AA4  30FF               	movlw	0FFh
 10655  0AA5  05F0               	andwf	(___fttol@f1),f
 10656  0AA6  30FF               	movlw	0FFh
 10657  0AA7  05F1               	andwf	(___fttol@f1+1),f
 10658  0AA8  3000               	movlw	0
 10659  0AA9  05F2               	andwf	(___fttol@f1+2),f
 10660                           	line	54
 10661                           	
 10662  0AAA                     l4527:	
 10663  0AAA  0870               	movf	(___fttol@f1),w
 10664  0AAB  00F9               	movwf	(___fttol@lval)
 10665  0AAC  0871               	movf	(___fttol@f1+1),w
 10666  0AAD  00FA               	movwf	((___fttol@lval))+1
 10667  0AAE  0872               	movf	(___fttol@f1+2),w
 10668  0AAF  00FB               	movwf	((___fttol@lval))+2
 10669  0AB0  01FC               	clrf	((___fttol@lval))+3
 10670                           	line	55
 10671                           	
 10672  0AB1                     l4529:	
 10673  0AB1  308E               	movlw	low(08Eh)
 10674  0AB2  02FD               	subwf	(___fttol@exp1),f
 10675                           	line	56
 10676                           	
 10677  0AB3                     l4531:	
 10678  0AB3  1FFD               	btfss	(___fttol@exp1),7
 10679  0AB4  2AB6               	goto	u3431
 10680  0AB5  2AB7               	goto	u3430
 10681  0AB6                     u3431:
 10682  0AB6  2ADC               	goto	l4541
 10683  0AB7                     u3430:
 10684                           	line	57
 10685                           	
 10686  0AB7                     l4533:	
 10687  0AB7  087D               	movf	(___fttol@exp1),w
 10688  0AB8  3A80               	xorlw	80h
 10689  0AB9  3E8F               	addlw	-((-15)^80h)
 10690  0ABA  1803               	skipnc
 10691  0ABB  2ABD               	goto	u3441
 10692  0ABC  2ABE               	goto	u3440
 10693  0ABD                     u3441:
 10694  0ABD  2AC9               	goto	l4539
 10695  0ABE                     u3440:
 10696                           	line	58
 10697                           	
 10698  0ABE                     l4535:	
 10699  0ABE  3000               	movlw	0
 10700  0ABF  00F3               	movwf	(?___fttol+3)
 10701  0AC0  3000               	movlw	0
 10702  0AC1  00F2               	movwf	(?___fttol+2)
 10703  0AC2  3000               	movlw	0
 10704  0AC3  00F1               	movwf	(?___fttol+1)
 10705  0AC4  3000               	movlw	0
 10706  0AC5  00F0               	movwf	(?___fttol)
 10707                           
 10708  0AC6  2B19               	goto	l1711
 10709                           	
 10710  0AC7                     l4537:	
 10711  0AC7  2B19               	goto	l1711
 10712                           	
 10713  0AC8                     l1713:	
 10714  0AC8  2AC9               	goto	l4539
 10715                           	line	59
 10716                           	
 10717  0AC9                     l1714:	
 10718                           	line	60
 10719                           	
 10720  0AC9                     l4539:	
 10721  0AC9  3001               	movlw	01h
 10722  0ACA                     u3455:
 10723  0ACA  1003               	clrc
 10724  0ACB  0CFC               	rrf	(___fttol@lval+3),f
 10725  0ACC  0CFB               	rrf	(___fttol@lval+2),f
 10726  0ACD  0CFA               	rrf	(___fttol@lval+1),f
 10727  0ACE  0CF9               	rrf	(___fttol@lval),f
 10728  0ACF  3EFF               	addlw	-1
 10729  0AD0  1D03               	skipz
 10730  0AD1  2ACA               	goto	u3455
 10731                           
 10732                           	line	61
 10733  0AD2  3001               	movlw	(01h)
 10734  0AD3  00F4               	movwf	(??___fttol+0)+0
 10735  0AD4  0874               	movf	(??___fttol+0)+0,w
 10736  0AD5  07FD               	addwf	(___fttol@exp1),f
 10737  0AD6  1D03               	btfss	status,2
 10738  0AD7  2AD9               	goto	u3461
 10739  0AD8  2ADA               	goto	u3460
 10740  0AD9                     u3461:
 10741  0AD9  2AC9               	goto	l4539
 10742  0ADA                     u3460:
 10743  0ADA  2B00               	goto	l4551
 10744                           	
 10745  0ADB                     l1715:	
 10746                           	line	62
 10747  0ADB  2B00               	goto	l4551
 10748                           	
 10749  0ADC                     l1712:	
 10750                           	line	63
 10751                           	
 10752  0ADC                     l4541:	
 10753  0ADC  3018               	movlw	(018h)
 10754  0ADD  027D               	subwf	(___fttol@exp1),w
 10755  0ADE  1C03               	skipc
 10756  0ADF  2AE1               	goto	u3471
 10757  0AE0  2AE2               	goto	u3470
 10758  0AE1                     u3471:
 10759  0AE1  2AF9               	goto	l4549
 10760  0AE2                     u3470:
 10761                           	line	64
 10762                           	
 10763  0AE2                     l4543:	
 10764  0AE2  3000               	movlw	0
 10765  0AE3  00F3               	movwf	(?___fttol+3)
 10766  0AE4  3000               	movlw	0
 10767  0AE5  00F2               	movwf	(?___fttol+2)
 10768  0AE6  3000               	movlw	0
 10769  0AE7  00F1               	movwf	(?___fttol+1)
 10770  0AE8  3000               	movlw	0
 10771  0AE9  00F0               	movwf	(?___fttol)
 10772                           
 10773  0AEA  2B19               	goto	l1711
 10774                           	
 10775  0AEB                     l4545:	
 10776  0AEB  2B19               	goto	l1711
 10777                           	
 10778  0AEC                     l1717:	
 10779                           	line	65
 10780  0AEC  2AF9               	goto	l4549
 10781                           	
 10782  0AED                     l1719:	
 10783                           	line	66
 10784                           	
 10785  0AED                     l4547:	
 10786  0AED  3001               	movlw	01h
 10787  0AEE  00F4               	movwf	(??___fttol+0)+0
 10788  0AEF                     u3485:
 10789  0AEF  1003               	clrc
 10790  0AF0  0DF9               	rlf	(___fttol@lval),f
 10791  0AF1  0DFA               	rlf	(___fttol@lval+1),f
 10792  0AF2  0DFB               	rlf	(___fttol@lval+2),f
 10793  0AF3  0DFC               	rlf	(___fttol@lval+3),f
 10794  0AF4  0BF4               	decfsz	(??___fttol+0)+0
 10795  0AF5  2AEF               	goto	u3485
 10796                           	line	67
 10797  0AF6  3001               	movlw	low(01h)
 10798  0AF7  02FD               	subwf	(___fttol@exp1),f
 10799  0AF8  2AF9               	goto	l4549
 10800                           	line	68
 10801                           	
 10802  0AF9                     l1718:	
 10803                           	line	65
 10804                           	
 10805  0AF9                     l4549:	
 10806  0AF9  08FD               	movf	(___fttol@exp1),f
 10807  0AFA  1D03               	skipz
 10808  0AFB  2AFD               	goto	u3491
 10809  0AFC  2AFE               	goto	u3490
 10810  0AFD                     u3491:
 10811  0AFD  2AED               	goto	l4547
 10812  0AFE                     u3490:
 10813  0AFE  2B00               	goto	l4551
 10814                           	
 10815  0AFF                     l1720:	
 10816  0AFF  2B00               	goto	l4551
 10817                           	line	69
 10818                           	
 10819  0B00                     l1716:	
 10820                           	line	70
 10821                           	
 10822  0B00                     l4551:	
 10823  0B00  0878               	movf	(___fttol@sign1),w
 10824  0B01  1D03               	skipz
 10825  0B02  2B04               	goto	u3500
 10826  0B03  2B10               	goto	l4555
 10827  0B04                     u3500:
 10828                           	line	71
 10829                           	
 10830  0B04                     l4553:	
 10831  0B04  09F9               	comf	(___fttol@lval),f
 10832  0B05  09FA               	comf	(___fttol@lval+1),f
 10833  0B06  09FB               	comf	(___fttol@lval+2),f
 10834  0B07  09FC               	comf	(___fttol@lval+3),f
 10835  0B08  0AF9               	incf	(___fttol@lval),f
 10836  0B09  1903               	skipnz
 10837  0B0A  0AFA               	incf	(___fttol@lval+1),f
 10838  0B0B  1903               	skipnz
 10839  0B0C  0AFB               	incf	(___fttol@lval+2),f
 10840  0B0D  1903               	skipnz
 10841  0B0E  0AFC               	incf	(___fttol@lval+3),f
 10842  0B0F  2B10               	goto	l4555
 10843                           	
 10844  0B10                     l1721:	
 10845                           	line	72
 10846                           	
 10847  0B10                     l4555:	
 10848  0B10  087C               	movf	(___fttol@lval+3),w
 10849  0B11  00F3               	movwf	(?___fttol+3)
 10850  0B12  087B               	movf	(___fttol@lval+2),w
 10851  0B13  00F2               	movwf	(?___fttol+2)
 10852  0B14  087A               	movf	(___fttol@lval+1),w
 10853  0B15  00F1               	movwf	(?___fttol+1)
 10854  0B16  0879               	movf	(___fttol@lval),w
 10855  0B17  00F0               	movwf	(?___fttol)
 10856                           
 10857  0B18  2B19               	goto	l1711
 10858                           	
 10859  0B19                     l4557:	
 10860                           	line	73
 10861                           	
 10862  0B19                     l1711:	
 10863  0B19  0008               	return
 10864                           	opt stack 0
 10865                           GLOBAL	__end_of___fttol
 10866  0B1A                     	__end_of___fttol:
 10867 ;; =============== function ___fttol ends ============
 10868                           
 10869                           	signat	___fttol,4220
 10870                           	global	___ftpack
 10871                           psect	text921,local,class=CODE,delta=2
 10872                           global __ptext921
 10873  1785                     __ptext921:
 10874                           
 10875 ;; *************** function ___ftpack *****************
 10876 ;; Defined at:
 10877 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\float.c"
 10878 ;; Parameters:    Size  Location     Type
 10879 ;;  arg             3    0[COMMON] unsigned um
 10880 ;;  exp             1    3[COMMON] unsigned char 
 10881 ;;  sign            1    4[COMMON] unsigned char 
 10882 ;; Auto vars:     Size  Location     Type
 10883 ;;		None
 10884 ;; Return value:  Size  Location     Type
 10885 ;;                  3    0[COMMON] float 
 10886 ;; Registers used:
 10887 ;;		wreg, status,2, status,0
 10888 ;; Tracked objects:
 10889 ;;		On entry : 0/0
 10890 ;;		On exit  : 0/0
 10891 ;;		Unchanged: 0/0
 10892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10893 ;;      Params:         5       0       0       0       0
 10894 ;;      Locals:         0       0       0       0       0
 10895 ;;      Temps:          3       0       0       0       0
 10896 ;;      Totals:         8       0       0       0       0
 10897 ;;Total ram usage:        8 bytes
 10898 ;; Hardware stack levels used:    1
 10899 ;; This function calls:
 10900 ;;		Nothing
 10901 ;; This function is called by:
 10902 ;;		___ftadd
 10903 ;;		___ftdiv
 10904 ;;		___ftmul
 10905 ;;		___awtoft
 10906 ;;		___altoft
 10907 ;;		___lltoft
 10908 ;;		___lbtoft
 10909 ;;		___abtoft
 10910 ;;		___lwtoft
 10911 ;;		___attoft
 10912 ;;		___lttoft
 10913 ;; This function uses a non-reentrant model
 10914 ;;
 10915                           psect	text921
 10916                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\float.c"
 10917                           	line	63
 10918                           	global	__size_of___ftpack
 10919  007B                     	__size_of___ftpack	equ	__end_of___ftpack-___ftpack
 10920                           	
 10921  1785                     ___ftpack:	
 10922                           	opt	stack 3
 10923                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 10924                           	line	64
 10925                           	
 10926  1785                     l4485:	
 10927  1785  0873               	movf	(___ftpack@exp),w
 10928  1786  1D03               	skipz
 10929  1787  2F89               	goto	u3300
 10930  1788  2F91               	goto	l4489
 10931  1789                     u3300:
 10932                           	
 10933  1789                     l4487:	
 10934  1789  0872               	movf	(___ftpack@arg+2),w
 10935  178A  0471               	iorwf	(___ftpack@arg+1),w
 10936  178B  0470               	iorwf	(___ftpack@arg),w
 10937  178C  1D03               	skipz
 10938  178D  2F8F               	goto	u3311
 10939  178E  2F90               	goto	u3310
 10940  178F                     u3311:
 10941  178F  2FA7               	goto	l4495
 10942  1790                     u3310:
 10943  1790  2F91               	goto	l4489
 10944                           	
 10945  1791                     l2011:	
 10946                           	line	65
 10947                           	
 10948  1791                     l4489:	
 10949  1791  3000               	movlw	0x0
 10950  1792  00F0               	movwf	(?___ftpack)
 10951  1793  3000               	movlw	0x0
 10952  1794  00F1               	movwf	(?___ftpack+1)
 10953  1795  3000               	movlw	0x0
 10954  1796  00F2               	movwf	(?___ftpack+2)
 10955  1797  2FFF               	goto	l2012
 10956                           	
 10957  1798                     l4491:	
 10958  1798  2FFF               	goto	l2012
 10959                           	
 10960  1799                     l2009:	
 10961                           	line	66
 10962  1799  2FA7               	goto	l4495
 10963                           	
 10964  179A                     l2014:	
 10965                           	line	67
 10966                           	
 10967  179A                     l4493:	
 10968  179A  3001               	movlw	(01h)
 10969  179B  00F5               	movwf	(??___ftpack+0)+0
 10970  179C  0875               	movf	(??___ftpack+0)+0,w
 10971  179D  07F3               	addwf	(___ftpack@exp),f
 10972                           	line	68
 10973  179E  3001               	movlw	01h
 10974  179F                     u3325:
 10975  179F  1003               	clrc
 10976  17A0  0CF2               	rrf	(___ftpack@arg+2),f
 10977  17A1  0CF1               	rrf	(___ftpack@arg+1),f
 10978  17A2  0CF0               	rrf	(___ftpack@arg),f
 10979  17A3  3EFF               	addlw	-1
 10980  17A4  1D03               	skipz
 10981  17A5  2F9F               	goto	u3325
 10982                           
 10983  17A6  2FA7               	goto	l4495
 10984                           	line	69
 10985                           	
 10986  17A7                     l2013:	
 10987                           	line	66
 10988                           	
 10989  17A7                     l4495:	
 10990  17A7  30FE               	movlw	low highword(0FE0000h)
 10991  17A8  0572               	andwf	(___ftpack@arg+2),w
 10992  17A9  1D03               	btfss	status,2
 10993  17AA  2FAC               	goto	u3331
 10994  17AB  2FAD               	goto	u3330
 10995  17AC                     u3331:
 10996  17AC  2F9A               	goto	l4493
 10997  17AD                     u3330:
 10998  17AD  2FC5               	goto	l2016
 10999                           	
 11000  17AE                     l2015:	
 11001                           	line	70
 11002  17AE  2FC5               	goto	l2016
 11003                           	
 11004  17AF                     l2017:	
 11005                           	line	71
 11006                           	
 11007  17AF                     l4497:	
 11008  17AF  3001               	movlw	(01h)
 11009  17B0  00F5               	movwf	(??___ftpack+0)+0
 11010  17B1  0875               	movf	(??___ftpack+0)+0,w
 11011  17B2  07F3               	addwf	(___ftpack@exp),f
 11012                           	line	72
 11013                           	
 11014  17B3                     l4499:	
 11015  17B3  3001               	movlw	01h
 11016  17B4  07F0               	addwf	(___ftpack@arg),f
 11017  17B5  3000               	movlw	0
 11018  17B6  1803               	skipnc
 11019  17B7  3001               movlw 1
 11020  17B8  07F1               	addwf	(___ftpack@arg+1),f
 11021  17B9  3000               	movlw	0
 11022  17BA  1803               	skipnc
 11023  17BB  3001               movlw 1
 11024  17BC  07F2               	addwf	(___ftpack@arg+2),f
 11025                           	line	73
 11026                           	
 11027  17BD                     l4501:	
 11028  17BD  3001               	movlw	01h
 11029  17BE                     u3345:
 11030  17BE  1003               	clrc
 11031  17BF  0CF2               	rrf	(___ftpack@arg+2),f
 11032  17C0  0CF1               	rrf	(___ftpack@arg+1),f
 11033  17C1  0CF0               	rrf	(___ftpack@arg),f
 11034  17C2  3EFF               	addlw	-1
 11035  17C3  1D03               	skipz
 11036  17C4  2FBE               	goto	u3345
 11037                           
 11038                           	line	74
 11039                           	
 11040  17C5                     l2016:	
 11041                           	line	70
 11042  17C5  30FF               	movlw	low highword(0FF0000h)
 11043  17C6  0572               	andwf	(___ftpack@arg+2),w
 11044  17C7  1D03               	btfss	status,2
 11045  17C8  2FCA               	goto	u3351
 11046  17C9  2FCB               	goto	u3350
 11047  17CA                     u3351:
 11048  17CA  2FAF               	goto	l4497
 11049  17CB                     u3350:
 11050  17CB  2FD8               	goto	l4505
 11051                           	
 11052  17CC                     l2018:	
 11053                           	line	75
 11054  17CC  2FD8               	goto	l4505
 11055                           	
 11056  17CD                     l2020:	
 11057                           	line	76
 11058                           	
 11059  17CD                     l4503:	
 11060  17CD  3001               	movlw	low(01h)
 11061  17CE  02F3               	subwf	(___ftpack@exp),f
 11062                           	line	77
 11063  17CF  3001               	movlw	01h
 11064  17D0                     u3365:
 11065  17D0  1003               	clrc
 11066  17D1  0DF0               	rlf	(___ftpack@arg),f
 11067  17D2  0DF1               	rlf	(___ftpack@arg+1),f
 11068  17D3  0DF2               	rlf	(___ftpack@arg+2),f
 11069  17D4  3EFF               	addlw	-1
 11070  17D5  1D03               	skipz
 11071  17D6  2FD0               	goto	u3365
 11072  17D7  2FD8               	goto	l4505
 11073                           	line	78
 11074                           	
 11075  17D8                     l2019:	
 11076                           	line	75
 11077                           	
 11078  17D8                     l4505:	
 11079  17D8  1FF1               	btfss	(___ftpack@arg+1),(15)&7
 11080  17D9  2FDB               	goto	u3371
 11081  17DA  2FDC               	goto	u3370
 11082  17DB                     u3371:
 11083  17DB  2FCD               	goto	l4503
 11084  17DC                     u3370:
 11085                           	
 11086  17DC                     l2021:	
 11087                           	line	79
 11088  17DC  1873               	btfsc	(___ftpack@exp),(0)&7
 11089  17DD  2FDF               	goto	u3381
 11090  17DE  2FE0               	goto	u3380
 11091  17DF                     u3381:
 11092  17DF  2FE6               	goto	l2022
 11093  17E0                     u3380:
 11094                           	line	80
 11095                           	
 11096  17E0                     l4507:	
 11097  17E0  30FF               	movlw	0FFh
 11098  17E1  05F0               	andwf	(___ftpack@arg),f
 11099  17E2  307F               	movlw	07Fh
 11100  17E3  05F1               	andwf	(___ftpack@arg+1),f
 11101  17E4  30FF               	movlw	0FFh
 11102  17E5  05F2               	andwf	(___ftpack@arg+2),f
 11103                           	
 11104  17E6                     l2022:	
 11105                           	line	81
 11106  17E6  1003               	clrc
 11107  17E7  0CF3               	rrf	(___ftpack@exp),f
 11108                           
 11109                           	line	82
 11110                           	
 11111  17E8                     l4509:	
 11112  17E8  0873               	movf	(___ftpack@exp),w
 11113  17E9  00F5               	movwf	((??___ftpack+0)+0)
 11114  17EA  01F6               	clrf	((??___ftpack+0)+0+1)
 11115  17EB  01F7               	clrf	((??___ftpack+0)+0+2)
 11116  17EC  3010               	movlw	010h
 11117  17ED                     u3395:
 11118  17ED  1003               	clrc
 11119  17EE  0DF5               	rlf	(??___ftpack+0)+0,f
 11120  17EF  0DF6               	rlf	(??___ftpack+0)+1,f
 11121  17F0  0DF7               	rlf	(??___ftpack+0)+2,f
 11122  17F1                     u3390:
 11123  17F1  3EFF               	addlw	-1
 11124  17F2  1D03               	skipz
 11125  17F3  2FED               	goto	u3395
 11126  17F4  0875               	movf	0+(??___ftpack+0)+0,w
 11127  17F5  04F0               	iorwf	(___ftpack@arg),f
 11128  17F6  0876               	movf	1+(??___ftpack+0)+0,w
 11129  17F7  04F1               	iorwf	(___ftpack@arg+1),f
 11130  17F8  0877               	movf	2+(??___ftpack+0)+0,w
 11131  17F9  04F2               	iorwf	(___ftpack@arg+2),f
 11132                           	line	83
 11133                           	
 11134  17FA                     l4511:	
 11135  17FA  0874               	movf	(___ftpack@sign),w
 11136  17FB  1D03               	skipz
 11137  17FC  2FFE               	goto	u3400
 11138  17FD  2FFF               	goto	l2023
 11139  17FE                     u3400:
 11140                           	line	84
 11141                           	
 11142  17FE                     l4513:	
 11143  17FE  17F2               	bsf	(___ftpack@arg)+(23/8),(23)&7
 11144                           	
 11145  17FF                     l2023:	
 11146                           	line	85
 11147                           	line	86
 11148                           	
 11149  17FF                     l2012:	
 11150  17FF  0008               	return
 11151                           	opt stack 0
 11152                           GLOBAL	__end_of___ftpack
 11153  1800                     	__end_of___ftpack:
 11154 ;; =============== function ___ftpack ends ============
 11155                           
 11156                           	signat	___ftpack,12411
 11157                           	global	___bmul
 11158                           psect	text922,local,class=CODE,delta=2
 11159                           global __ptext922
 11160  126A                     __ptext922:
 11161                           
 11162 ;; *************** function ___bmul *****************
 11163 ;; Defined at:
 11164 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\bmul.c"
 11165 ;; Parameters:    Size  Location     Type
 11166 ;;  multiplier      1    wreg     unsigned char 
 11167 ;;  multiplicand    1    0[COMMON] unsigned char 
 11168 ;; Auto vars:     Size  Location     Type
 11169 ;;  multiplier      1    3[COMMON] unsigned char 
 11170 ;;  product         1    2[COMMON] unsigned char 
 11171 ;; Return value:  Size  Location     Type
 11172 ;;                  1    wreg      unsigned char 
 11173 ;; Registers used:
 11174 ;;		wreg, status,2, status,0
 11175 ;; Tracked objects:
 11176 ;;		On entry : 0/0
 11177 ;;		On exit  : 0/0
 11178 ;;		Unchanged: 0/0
 11179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11180 ;;      Params:         1       0       0       0       0
 11181 ;;      Locals:         2       0       0       0       0
 11182 ;;      Temps:          1       0       0       0       0
 11183 ;;      Totals:         4       0       0       0       0
 11184 ;;Total ram usage:        4 bytes
 11185 ;; Hardware stack levels used:    1
 11186 ;; This function calls:
 11187 ;;		Nothing
 11188 ;; This function is called by:
 11189 ;;		_eval_poly
 11190 ;; This function uses a non-reentrant model
 11191 ;;
 11192                           psect	text922
 11193                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\bmul.c"
 11194                           	line	3
 11195                           	global	__size_of___bmul
 11196  0018                     	__size_of___bmul	equ	__end_of___bmul-___bmul
 11197                           	
 11198  126A                     ___bmul:	
 11199                           	opt	stack 1
 11200                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 11201                           ;___bmul@multiplier stored from wreg
 11202  126A  00F3               	movwf	(___bmul@multiplier)
 11203                           	line	4
 11204                           	
 11205  126B                     l4471:	
 11206  126B  01F2               	clrf	(___bmul@product)
 11207                           	line	6
 11208                           	
 11209  126C                     l1595:	
 11210                           	line	7
 11211  126C  1C73               	btfss	(___bmul@multiplier),(0)&7
 11212  126D  2A6F               	goto	u3281
 11213  126E  2A70               	goto	u3280
 11214  126F                     u3281:
 11215  126F  2A75               	goto	l4475
 11216  1270                     u3280:
 11217                           	line	8
 11218                           	
 11219  1270                     l4473:	
 11220  1270  0870               	movf	(___bmul@multiplicand),w
 11221  1271  00F1               	movwf	(??___bmul+0)+0
 11222  1272  0871               	movf	(??___bmul+0)+0,w
 11223  1273  07F2               	addwf	(___bmul@product),f
 11224  1274  2A75               	goto	l4475
 11225                           	
 11226  1275                     l1596:	
 11227                           	line	9
 11228                           	
 11229  1275                     l4475:	
 11230  1275  1003               	clrc
 11231  1276  0DF0               	rlf	(___bmul@multiplicand),f
 11232                           
 11233                           	line	10
 11234                           	
 11235  1277                     l4477:	
 11236  1277  1003               	clrc
 11237  1278  0CF3               	rrf	(___bmul@multiplier),f
 11238                           
 11239                           	line	11
 11240                           	
 11241  1279                     l4479:	
 11242  1279  08F3               	movf	(___bmul@multiplier),f
 11243  127A  1D03               	skipz
 11244  127B  2A7D               	goto	u3291
 11245  127C  2A7E               	goto	u3290
 11246  127D                     u3291:
 11247  127D  2A6C               	goto	l1595
 11248  127E                     u3290:
 11249  127E  2A7F               	goto	l4481
 11250                           	
 11251  127F                     l1597:	
 11252                           	line	12
 11253                           	
 11254  127F                     l4481:	
 11255  127F  0872               	movf	(___bmul@product),w
 11256  1280  2A81               	goto	l1598
 11257                           	
 11258  1281                     l4483:	
 11259                           	line	13
 11260                           	
 11261  1281                     l1598:	
 11262  1281  0008               	return
 11263                           	opt stack 0
 11264                           GLOBAL	__end_of___bmul
 11265  1282                     	__end_of___bmul:
 11266 ;; =============== function ___bmul ends ============
 11267                           
 11268                           	signat	___bmul,8313
 11269                           	global	_strcmp
 11270                           psect	text923,local,class=CODE,delta=2
 11271                           global __ptext923
 11272  133B                     __ptext923:
 11273                           
 11274 ;; *************** function _strcmp *****************
 11275 ;; Defined at:
 11276 ;;		line 34 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\strcmp.c"
 11277 ;; Parameters:    Size  Location     Type
 11278 ;;  s1              1    wreg     PTR const unsigned char 
 11279 ;;		 -> rfid(12), 
 11280 ;;  s2              1    0[COMMON] PTR const unsigned char 
 11281 ;;		 -> STR_17(13), STR_14(13), STR_11(13), STR_8(13), 
 11282 ;; Auto vars:     Size  Location     Type
 11283 ;;  s1              1    5[COMMON] PTR const unsigned char 
 11284 ;;		 -> rfid(12), 
 11285 ;;  r               1    4[COMMON] char 
 11286 ;; Return value:  Size  Location     Type
 11287 ;;                  2    0[COMMON] int 
 11288 ;; Registers used:
 11289 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 11290 ;; Tracked objects:
 11291 ;;		On entry : 0/0
 11292 ;;		On exit  : 0/0
 11293 ;;		Unchanged: 0/0
 11294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11295 ;;      Params:         2       0       0       0       0
 11296 ;;      Locals:         2       0       0       0       0
 11297 ;;      Temps:          2       0       0       0       0
 11298 ;;      Totals:         6       0       0       0       0
 11299 ;;Total ram usage:        6 bytes
 11300 ;; Hardware stack levels used:    2
 11301 ;; This function calls:
 11302 ;;		Nothing
 11303 ;; This function is called by:
 11304 ;;		_checkRFID
 11305 ;; This function uses a non-reentrant model
 11306 ;;
 11307                           psect	text923
 11308                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\strcmp.c"
 11309                           	line	34
 11310                           	global	__size_of_strcmp
 11311  002F                     	__size_of_strcmp	equ	__end_of_strcmp-_strcmp
 11312                           	
 11313  133B                     _strcmp:	
 11314                           	opt	stack 5
 11315                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0+pclath]
 11316                           ;strcmp@s1 stored from wreg
 11317  133B  00F5               	movwf	(strcmp@s1)
 11318                           	line	37
 11319                           	
 11320  133C                     l4461:	
 11321  133C  2B3E               	goto	l4463
 11322                           	
 11323  133D                     l1586:	
 11324                           	line	38
 11325  133D  2B3E               	goto	l4463
 11326                           	
 11327  133E                     l1585:	
 11328                           	line	37
 11329                           	
 11330  133E                     l4463:	
 11331  133E  0875               	movf	(strcmp@s1),w
 11332  133F  0084               	movwf	fsr
 11333  1340  1383               	bcf	status, 7	;select IRP bank0
 11334  1341  0800               	movf	indf,w
 11335  1342  00F2               	movwf	(??_strcmp+0)+0
 11336  1343  3001               	movlw	01h
 11337  1344  07F0               	addwf	(strcmp@s2),f
 11338  1345  30FF               	movlw	-01h
 11339  1346  0770               	addwf	(strcmp@s2),w
 11340  1347  0084               	movwf	fsr0
 11341  1348  120A  158A  200A   	fcall	stringdir
              160A  118A         
 11342  134D  3AFF               	xorlw	0ffh
 11343  134E  3E01               	addlw	1
 11344  134F  0772               	addwf	(??_strcmp+0)+0,w
 11345  1350  00F3               	movwf	(??_strcmp+1)+0
 11346  1351  0873               	movf	(??_strcmp+1)+0,w
 11347  1352  00F4               	movwf	(strcmp@r)
 11348  1353  08F4               	movf	((strcmp@r)),f
 11349  1354  1D03               	skipz
 11350  1355  2B57               	goto	u3261
 11351  1356  2B58               	goto	u3260
 11352  1357                     u3261:
 11353  1357  2B63               	goto	l4467
 11354  1358                     u3260:
 11355                           	
 11356  1358                     l4465:	
 11357  1358  0875               	movf	(strcmp@s1),w
 11358  1359  0084               	movwf	fsr0
 11359  135A  3001               	movlw	01h
 11360  135B  07F5               	addwf	(strcmp@s1),f
 11361  135C  0880               	movf	indf,f
 11362  135D  1D03               	skipz
 11363  135E  2B60               	goto	u3271
 11364  135F  2B61               	goto	u3270
 11365  1360                     u3271:
 11366  1360  2B3E               	goto	l4463
 11367  1361                     u3270:
 11368  1361  2B63               	goto	l4467
 11369                           	
 11370  1362                     l1588:	
 11371  1362  2B63               	goto	l4467
 11372                           	
 11373  1363                     l1589:	
 11374                           	line	39
 11375                           	
 11376  1363                     l4467:	
 11377  1363  0874               	movf	(strcmp@r),w
 11378  1364  00F0               	movwf	(?_strcmp)
 11379  1365  01F1               	clrf	(?_strcmp+1)
 11380  1366  1BF0               	btfsc	(?_strcmp),7
 11381  1367  03F1               	decf	(?_strcmp+1),f
 11382  1368  2B69               	goto	l1590
 11383                           	
 11384  1369                     l4469:	
 11385                           	line	40
 11386                           	
 11387  1369                     l1590:	
 11388  1369  0008               	return
 11389                           	opt stack 0
 11390                           GLOBAL	__end_of_strcmp
 11391  136A                     	__end_of_strcmp:
 11392 ;; =============== function _strcmp ends ============
 11393                           
 11394                           	signat	_strcmp,8314
 11395                           	global	_delay
 11396                           psect	text924,local,class=CODE,delta=2
 11397                           global __ptext924
 11398  13FE                     __ptext924:
 11399                           
 11400 ;; *************** function _delay *****************
 11401 ;; Defined at:
 11402 ;;		line 61 in file "code.c"
 11403 ;; Parameters:    Size  Location     Type
 11404 ;;  time            2    0[COMMON] int 
 11405 ;; Auto vars:     Size  Location     Type
 11406 ;;  j               2    5[COMMON] int 
 11407 ;;  i               2    3[COMMON] int 
 11408 ;; Return value:  Size  Location     Type
 11409 ;;		None               void
 11410 ;; Registers used:
 11411 ;;		wreg, status,2, btemp+1
 11412 ;; Tracked objects:
 11413 ;;		On entry : 0/0
 11414 ;;		On exit  : 0/0
 11415 ;;		Unchanged: 0/0
 11416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11417 ;;      Params:         2       0       0       0       0
 11418 ;;      Locals:         4       0       0       0       0
 11419 ;;      Temps:          1       0       0       0       0
 11420 ;;      Totals:         7       0       0       0       0
 11421 ;;Total ram usage:        7 bytes
 11422 ;; Hardware stack levels used:    1
 11423 ;; This function calls:
 11424 ;;		Nothing
 11425 ;; This function is called by:
 11426 ;;		_present
 11427 ;;		_absent
 11428 ;;		_checkRFID
 11429 ;; This function uses a non-reentrant model
 11430 ;;
 11431                           psect	text924
 11432                           	file	"code.c"
 11433                           	line	61
 11434                           	global	__size_of_delay
 11435  003E                     	__size_of_delay	equ	__end_of_delay-_delay
 11436                           	
 11437  13FE                     _delay:	
 11438                           	opt	stack 5
 11439                           ; Regs used in _delay: [wreg+status,2+btemp+1]
 11440                           	line	63
 11441                           	
 11442  13FE                     l4447:	
 11443                           ;code.c: 62: int i,j;
 11444                           ;code.c: 63: for(i=0;i<time;i++)
 11445  13FE  01F3               	clrf	(delay@i)
 11446  13FF  01F4               	clrf	(delay@i+1)
 11447  1400  2C2C               	goto	l856
 11448                           	line	64
 11449                           	
 11450  1401                     l857:	
 11451                           	
 11452  1401                     l4449:	
 11453                           ;code.c: 64: for(j=0;j<10000;j++);
 11454  1401  01F5               	clrf	(delay@j)
 11455  1402  01F6               	clrf	(delay@j+1)
 11456                           	
 11457  1403                     l4451:	
 11458  1403  0876               	movf	(delay@j+1),w
 11459  1404  3A80               	xorlw	80h
 11460  1405  00FF               	movwf	btemp+1
 11461  1406  30A7               	movlw	(high(02710h))^80h
 11462  1407  027F               	subwf	btemp+1,w
 11463  1408  1D03               	skipz
 11464  1409  2C0C               	goto	u3235
 11465  140A  3010               	movlw	low(02710h)
 11466  140B  0275               	subwf	(delay@j),w
 11467  140C                     u3235:
 11468                           
 11469  140C  1C03               	skipc
 11470  140D  2C0F               	goto	u3231
 11471  140E  2C10               	goto	u3230
 11472  140F                     u3231:
 11473  140F  2C12               	goto	l4455
 11474  1410                     u3230:
 11475  1410  2C26               	goto	l4459
 11476                           	
 11477  1411                     l4453:	
 11478  1411  2C26               	goto	l4459
 11479                           	
 11480  1412                     l858:	
 11481                           	
 11482  1412                     l4455:	
 11483  1412  3001               	movlw	low(01h)
 11484  1413  07F5               	addwf	(delay@j),f
 11485  1414  1803               	skipnc
 11486  1415  0AF6               	incf	(delay@j+1),f
 11487  1416  3000               	movlw	high(01h)
 11488  1417  07F6               	addwf	(delay@j+1),f
 11489                           	
 11490  1418                     l4457:	
 11491  1418  0876               	movf	(delay@j+1),w
 11492  1419  3A80               	xorlw	80h
 11493  141A  00FF               	movwf	btemp+1
 11494  141B  30A7               	movlw	(high(02710h))^80h
 11495  141C  027F               	subwf	btemp+1,w
 11496  141D  1D03               	skipz
 11497  141E  2C21               	goto	u3245
 11498  141F  3010               	movlw	low(02710h)
 11499  1420  0275               	subwf	(delay@j),w
 11500  1421                     u3245:
 11501                           
 11502  1421  1C03               	skipc
 11503  1422  2C24               	goto	u3241
 11504  1423  2C25               	goto	u3240
 11505  1424                     u3241:
 11506  1424  2C12               	goto	l4455
 11507  1425                     u3240:
 11508  1425  2C26               	goto	l4459
 11509                           	
 11510  1426                     l859:	
 11511                           	line	63
 11512                           	
 11513  1426                     l4459:	
 11514  1426  3001               	movlw	low(01h)
 11515  1427  07F3               	addwf	(delay@i),f
 11516  1428  1803               	skipnc
 11517  1429  0AF4               	incf	(delay@i+1),f
 11518  142A  3000               	movlw	high(01h)
 11519  142B  07F4               	addwf	(delay@i+1),f
 11520                           	
 11521  142C                     l856:	
 11522  142C  0874               	movf	(delay@i+1),w
 11523  142D  3A80               	xorlw	80h
 11524  142E  00F2               	movwf	(??_delay+0)+0
 11525  142F  0871               	movf	(delay@time+1),w
 11526  1430  3A80               	xorlw	80h
 11527  1431  0272               	subwf	(??_delay+0)+0,w
 11528  1432  1D03               	skipz
 11529  1433  2C36               	goto	u3255
 11530  1434  0870               	movf	(delay@time),w
 11531  1435  0273               	subwf	(delay@i),w
 11532  1436                     u3255:
 11533                           
 11534  1436  1C03               	skipc
 11535  1437  2C39               	goto	u3251
 11536  1438  2C3A               	goto	u3250
 11537  1439                     u3251:
 11538  1439  2C01               	goto	l4449
 11539  143A                     u3250:
 11540  143A  2C3B               	goto	l861
 11541                           	
 11542  143B                     l860:	
 11543                           	line	65
 11544                           	
 11545  143B                     l861:	
 11546  143B  0008               	return
 11547                           	opt stack 0
 11548                           GLOBAL	__end_of_delay
 11549  143C                     	__end_of_delay:
 11550 ;; =============== function _delay ends ============
 11551                           
 11552                           	signat	_delay,4216
 11553                           	global	_reverse
 11554                           psect	text925,local,class=CODE,delta=2
 11555                           global __ptext925
 11556  1505                     __ptext925:
 11557                           
 11558 ;; *************** function _reverse *****************
 11559 ;; Defined at:
 11560 ;;		line 2 in file "IntToStr.h"
 11561 ;; Parameters:    Size  Location     Type
 11562 ;;  str             1    wreg     PTR unsigned char 
 11563 ;;		 -> buffer(2), 
 11564 ;;  len             2    0[COMMON] int 
 11565 ;; Auto vars:     Size  Location     Type
 11566 ;;  str             1   11[COMMON] PTR unsigned char 
 11567 ;;		 -> buffer(2), 
 11568 ;;  j               2    9[COMMON] int 
 11569 ;;  i               2    7[COMMON] int 
 11570 ;;  temp            2    5[COMMON] int 
 11571 ;; Return value:  Size  Location     Type
 11572 ;;		None               void
 11573 ;; Registers used:
 11574 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11575 ;; Tracked objects:
 11576 ;;		On entry : 0/0
 11577 ;;		On exit  : 0/0
 11578 ;;		Unchanged: 0/0
 11579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11580 ;;      Params:         2       0       0       0       0
 11581 ;;      Locals:         7       0       0       0       0
 11582 ;;      Temps:          3       0       0       0       0
 11583 ;;      Totals:        12       0       0       0       0
 11584 ;;Total ram usage:       12 bytes
 11585 ;; Hardware stack levels used:    1
 11586 ;; This function calls:
 11587 ;;		Nothing
 11588 ;; This function is called by:
 11589 ;;		_intToStr
 11590 ;; This function uses a non-reentrant model
 11591 ;;
 11592                           psect	text925
 11593                           	file	"IntToStr.h"
 11594                           	line	2
 11595                           	global	__size_of_reverse
 11596  004D                     	__size_of_reverse	equ	__end_of_reverse-_reverse
 11597                           	
 11598  1505                     _reverse:	
 11599                           	opt	stack 3
 11600                           ; Regs used in _reverse: [wreg-fsr0h+status,2+status,0]
 11601                           ;reverse@str stored from wreg
 11602  1505  00FB               	movwf	(reverse@str)
 11603                           	line	3
 11604                           	
 11605  1506                     l4435:	
 11606                           ;IntToStr.h: 3: int i=0, j=len-1, temp;
 11607  1506  01F7               	clrf	(reverse@i)
 11608  1507  01F8               	clrf	(reverse@i+1)
 11609                           	
 11610  1508                     l4437:	
 11611  1508  0870               	movf	(reverse@len),w
 11612  1509  3EFF               	addlw	low(-1)
 11613  150A  00F9               	movwf	(reverse@j)
 11614  150B  0871               	movf	(reverse@len+1),w
 11615  150C  1803               	skipnc
 11616  150D  3E01               	addlw	1
 11617  150E  3EFF               	addlw	high(-1)
 11618  150F  00FA               	movwf	1+(reverse@j)
 11619                           	line	4
 11620                           ;IntToStr.h: 4: while (i<j)
 11621  1510  2D42               	goto	l4445
 11622                           	
 11623  1511                     l829:	
 11624                           	line	6
 11625                           	
 11626  1511                     l4439:	
 11627                           ;IntToStr.h: 5: {
 11628                           ;IntToStr.h: 6: temp = str[i];
 11629  1511  0877               	movf	(reverse@i),w
 11630  1512  077B               	addwf	(reverse@str),w
 11631  1513  00F2               	movwf	(??_reverse+0)+0
 11632  1514  0872               	movf	0+(??_reverse+0)+0,w
 11633  1515  0084               	movwf	fsr0
 11634  1516  1383               	bcf	status, 7	;select IRP bank0
 11635  1517  0800               	movf	indf,w
 11636  1518  00F3               	movwf	(??_reverse+1)+0
 11637  1519  01F4               	clrf	(??_reverse+1)+0+1
 11638  151A  0873               	movf	0+(??_reverse+1)+0,w
 11639  151B  00F5               	movwf	(reverse@temp)
 11640  151C  0874               	movf	1+(??_reverse+1)+0,w
 11641  151D  00F6               	movwf	(reverse@temp+1)
 11642                           	line	7
 11643                           ;IntToStr.h: 7: str[i] = str[j];
 11644  151E  0879               	movf	(reverse@j),w
 11645  151F  077B               	addwf	(reverse@str),w
 11646  1520  00F2               	movwf	(??_reverse+0)+0
 11647  1521  0872               	movf	0+(??_reverse+0)+0,w
 11648  1522  0084               	movwf	fsr0
 11649  1523  0800               	movf	indf,w
 11650  1524  00F3               	movwf	(??_reverse+1)+0
 11651  1525  0877               	movf	(reverse@i),w
 11652  1526  077B               	addwf	(reverse@str),w
 11653  1527  00F4               	movwf	(??_reverse+2)+0
 11654  1528  0874               	movf	0+(??_reverse+2)+0,w
 11655  1529  0084               	movwf	fsr0
 11656  152A  0873               	movf	(??_reverse+1)+0,w
 11657  152B  0080               	movwf	indf
 11658                           	line	8
 11659                           ;IntToStr.h: 8: str[j] = temp;
 11660  152C  0875               	movf	(reverse@temp),w
 11661  152D  00F2               	movwf	(??_reverse+0)+0
 11662  152E  0879               	movf	(reverse@j),w
 11663  152F  077B               	addwf	(reverse@str),w
 11664  1530  00F3               	movwf	(??_reverse+1)+0
 11665  1531  0873               	movf	0+(??_reverse+1)+0,w
 11666  1532  0084               	movwf	fsr0
 11667  1533  0872               	movf	(??_reverse+0)+0,w
 11668  1534  0080               	movwf	indf
 11669                           	line	9
 11670                           	
 11671  1535                     l4441:	
 11672                           ;IntToStr.h: 9: i++; j--;
 11673  1535  3001               	movlw	low(01h)
 11674  1536  07F7               	addwf	(reverse@i),f
 11675  1537  1803               	skipnc
 11676  1538  0AF8               	incf	(reverse@i+1),f
 11677  1539  3000               	movlw	high(01h)
 11678  153A  07F8               	addwf	(reverse@i+1),f
 11679                           	
 11680  153B                     l4443:	
 11681  153B  30FF               	movlw	low(-1)
 11682  153C  07F9               	addwf	(reverse@j),f
 11683  153D  1803               	skipnc
 11684  153E  0AFA               	incf	(reverse@j+1),f
 11685  153F  30FF               	movlw	high(-1)
 11686  1540  07FA               	addwf	(reverse@j+1),f
 11687  1541  2D42               	goto	l4445
 11688                           	line	10
 11689                           	
 11690  1542                     l828:	
 11691                           	line	4
 11692                           	
 11693  1542                     l4445:	
 11694  1542  0878               	movf	(reverse@i+1),w
 11695  1543  3A80               	xorlw	80h
 11696  1544  00F2               	movwf	(??_reverse+0)+0
 11697  1545  087A               	movf	(reverse@j+1),w
 11698  1546  3A80               	xorlw	80h
 11699  1547  0272               	subwf	(??_reverse+0)+0,w
 11700  1548  1D03               	skipz
 11701  1549  2D4C               	goto	u3225
 11702  154A  0879               	movf	(reverse@j),w
 11703  154B  0277               	subwf	(reverse@i),w
 11704  154C                     u3225:
 11705                           
 11706  154C  1C03               	skipc
 11707  154D  2D4F               	goto	u3221
 11708  154E  2D50               	goto	u3220
 11709  154F                     u3221:
 11710  154F  2D11               	goto	l4439
 11711  1550                     u3220:
 11712  1550  2D51               	goto	l831
 11713                           	
 11714  1551                     l830:	
 11715                           	line	11
 11716                           	
 11717  1551                     l831:	
 11718  1551  0008               	return
 11719                           	opt stack 0
 11720                           GLOBAL	__end_of_reverse
 11721  1552                     	__end_of_reverse:
 11722 ;; =============== function _reverse ends ============
 11723                           
 11724                           	signat	_reverse,8312
 11725                           	global	_UART_Read
 11726                           psect	text926,local,class=CODE,delta=2
 11727                           global __ptext926
 11728  1240                     __ptext926:
 11729                           
 11730 ;; *************** function _UART_Read *****************
 11731 ;; Defined at:
 11732 ;;		line 34 in file "uart.h"
 11733 ;; Parameters:    Size  Location     Type
 11734 ;;		None
 11735 ;; Auto vars:     Size  Location     Type
 11736 ;;		None
 11737 ;; Return value:  Size  Location     Type
 11738 ;;                  1    wreg      unsigned char 
 11739 ;; Registers used:
 11740 ;;		wreg
 11741 ;; Tracked objects:
 11742 ;;		On entry : 0/0
 11743 ;;		On exit  : 0/0
 11744 ;;		Unchanged: 0/0
 11745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11746 ;;      Params:         0       0       0       0       0
 11747 ;;      Locals:         0       0       0       0       0
 11748 ;;      Temps:          0       0       0       0       0
 11749 ;;      Totals:         0       0       0       0       0
 11750 ;;Total ram usage:        0 bytes
 11751 ;; Hardware stack levels used:    1
 11752 ;; This function calls:
 11753 ;;		Nothing
 11754 ;; This function is called by:
 11755 ;;		_checkRFID
 11756 ;;		_UART_Read_Text
 11757 ;; This function uses a non-reentrant model
 11758 ;;
 11759                           psect	text926
 11760                           	file	"uart.h"
 11761                           	line	34
 11762                           	global	__size_of_UART_Read
 11763  000B                     	__size_of_UART_Read	equ	__end_of_UART_Read-_UART_Read
 11764                           	
 11765  1240                     _UART_Read:	
 11766                           	opt	stack 6
 11767                           ; Regs used in _UART_Read: [wreg]
 11768                           	line	36
 11769                           	
 11770  1240                     l4421:	
 11771                           ;uart.h: 36: while(!RCIF);
 11772  1240  2A41               	goto	l804
 11773                           	
 11774  1241                     l805:	
 11775                           	
 11776  1241                     l804:	
 11777  1241  1283               	bcf	status, 5	;RP0=0, select bank0
 11778  1242  1303               	bcf	status, 6	;RP1=0, select bank0
 11779  1243  1E8C               	btfss	(101/8),(101)&7
 11780  1244  2A46               	goto	u3201
 11781  1245  2A47               	goto	u3200
 11782  1246                     u3201:
 11783  1246  2A41               	goto	l804
 11784  1247                     u3200:
 11785  1247  2A48               	goto	l4423
 11786                           	
 11787  1248                     l806:	
 11788                           	line	37
 11789                           	
 11790  1248                     l4423:	
 11791                           ;uart.h: 37: return RCREG;
 11792  1248  081A               	movf	(26),w	;volatile
 11793  1249  2A4A               	goto	l807
 11794                           	
 11795  124A                     l4425:	
 11796                           	line	38
 11797                           	
 11798  124A                     l807:	
 11799  124A  0008               	return
 11800                           	opt stack 0
 11801                           GLOBAL	__end_of_UART_Read
 11802  124B                     	__end_of_UART_Read:
 11803 ;; =============== function _UART_Read ends ============
 11804                           
 11805                           	signat	_UART_Read,89
 11806                           	global	_UART_Data_Ready
 11807                           psect	text927,local,class=CODE,delta=2
 11808                           global __ptext927
 11809  1231                     __ptext927:
 11810                           
 11811 ;; *************** function _UART_Data_Ready *****************
 11812 ;; Defined at:
 11813 ;;		line 30 in file "uart.h"
 11814 ;; Parameters:    Size  Location     Type
 11815 ;;		None
 11816 ;; Auto vars:     Size  Location     Type
 11817 ;;		None
 11818 ;; Return value:  Size  Location     Type
 11819 ;;                  1    wreg      unsigned char 
 11820 ;; Registers used:
 11821 ;;		wreg
 11822 ;; Tracked objects:
 11823 ;;		On entry : 0/0
 11824 ;;		On exit  : 0/0
 11825 ;;		Unchanged: 0/0
 11826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11827 ;;      Params:         0       0       0       0       0
 11828 ;;      Locals:         0       0       0       0       0
 11829 ;;      Temps:          0       0       0       0       0
 11830 ;;      Totals:         0       0       0       0       0
 11831 ;;Total ram usage:        0 bytes
 11832 ;; Hardware stack levels used:    1
 11833 ;; This function calls:
 11834 ;;		Nothing
 11835 ;; This function is called by:
 11836 ;;		_checkRFID
 11837 ;; This function uses a non-reentrant model
 11838 ;;
 11839                           psect	text927
 11840                           	file	"uart.h"
 11841                           	line	30
 11842                           	global	__size_of_UART_Data_Ready
 11843  0007                     	__size_of_UART_Data_Ready	equ	__end_of_UART_Data_Ready-_UART_Data_Ready
 11844                           	
 11845  1231                     _UART_Data_Ready:	
 11846                           	opt	stack 6
 11847                           ; Regs used in _UART_Data_Ready: [wreg]
 11848                           	line	31
 11849                           	
 11850  1231                     l4417:	
 11851                           ;uart.h: 31: return RCIF;
 11852  1231  3000               	movlw	0
 11853  1232  1283               	bcf	status, 5	;RP0=0, select bank0
 11854  1233  1303               	bcf	status, 6	;RP1=0, select bank0
 11855  1234  1A8C               	btfsc	(101/8),(101)&7
 11856  1235  3001               	movlw	1
 11857  1236  2A37               	goto	l801
 11858                           	
 11859  1237                     l4419:	
 11860                           	line	32
 11861                           	
 11862  1237                     l801:	
 11863  1237  0008               	return
 11864                           	opt stack 0
 11865                           GLOBAL	__end_of_UART_Data_Ready
 11866  1238                     	__end_of_UART_Data_Ready:
 11867 ;; =============== function _UART_Data_Ready ends ============
 11868                           
 11869                           	signat	_UART_Data_Ready,89
 11870                           	global	_Lcd8_Port
 11871                           psect	text928,local,class=CODE,delta=2
 11872                           global __ptext928
 11873  143C                     __ptext928:
 11874                           
 11875 ;; *************** function _Lcd8_Port *****************
 11876 ;; Defined at:
 11877 ;;		line 23 in file "lcd.h"
 11878 ;; Parameters:    Size  Location     Type
 11879 ;;  a               1    wreg     unsigned char 
 11880 ;; Auto vars:     Size  Location     Type
 11881 ;;  a               1    0[COMMON] unsigned char 
 11882 ;; Return value:  Size  Location     Type
 11883 ;;		None               void
 11884 ;; Registers used:
 11885 ;;		wreg
 11886 ;; Tracked objects:
 11887 ;;		On entry : 0/0
 11888 ;;		On exit  : 0/0
 11889 ;;		Unchanged: 0/0
 11890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11891 ;;      Params:         0       0       0       0       0
 11892 ;;      Locals:         1       0       0       0       0
 11893 ;;      Temps:          0       0       0       0       0
 11894 ;;      Totals:         1       0       0       0       0
 11895 ;;Total ram usage:        1 bytes
 11896 ;; Hardware stack levels used:    1
 11897 ;; This function calls:
 11898 ;;		Nothing
 11899 ;; This function is called by:
 11900 ;;		_Lcd8_Cmd
 11901 ;;		_Lcd8_Init
 11902 ;;		_Lcd8_Write_Char
 11903 ;; This function uses a non-reentrant model
 11904 ;;
 11905                           psect	text928
 11906                           	file	"lcd.h"
 11907                           	line	23
 11908                           	global	__size_of_Lcd8_Port
 11909  003F                     	__size_of_Lcd8_Port	equ	__end_of_Lcd8_Port-_Lcd8_Port
 11910                           	
 11911  143C                     _Lcd8_Port:	
 11912                           	opt	stack 3
 11913                           ; Regs used in _Lcd8_Port: [wreg]
 11914                           ;Lcd8_Port@a stored from wreg
 11915  143C  00F0               	movwf	(Lcd8_Port@a)
 11916                           	line	24
 11917                           	
 11918  143D                     l4395:	
 11919                           ;lcd.h: 24: if(a & 1)
 11920  143D  1C70               	btfss	(Lcd8_Port@a),(0)&7
 11921  143E  2C40               	goto	u3121
 11922  143F  2C41               	goto	u3120
 11923  1440                     u3121:
 11924  1440  2C45               	goto	l703
 11925  1441                     u3120:
 11926                           	line	25
 11927                           	
 11928  1441                     l4397:	
 11929                           ;lcd.h: 25: RB0 = 1;
 11930  1441  1283               	bcf	status, 5	;RP0=0, select bank0
 11931  1442  1303               	bcf	status, 6	;RP1=0, select bank0
 11932  1443  1406               	bsf	(48/8),(48)&7
 11933  1444  2C48               	goto	l704
 11934                           	line	26
 11935                           	
 11936  1445                     l703:	
 11937                           	line	27
 11938                           ;lcd.h: 26: else
 11939                           ;lcd.h: 27: RB0 = 0;
 11940  1445  1283               	bcf	status, 5	;RP0=0, select bank0
 11941  1446  1303               	bcf	status, 6	;RP1=0, select bank0
 11942  1447  1006               	bcf	(48/8),(48)&7
 11943                           	
 11944  1448                     l704:	
 11945                           	line	29
 11946                           ;lcd.h: 29: if(a & 2)
 11947  1448  1CF0               	btfss	(Lcd8_Port@a),(1)&7
 11948  1449  2C4B               	goto	u3131
 11949  144A  2C4C               	goto	u3130
 11950  144B                     u3131:
 11951  144B  2C4E               	goto	l705
 11952  144C                     u3130:
 11953                           	line	30
 11954                           	
 11955  144C                     l4399:	
 11956                           ;lcd.h: 30: RB1 = 1;
 11957  144C  1486               	bsf	(49/8),(49)&7
 11958  144D  2C4F               	goto	l706
 11959                           	line	31
 11960                           	
 11961  144E                     l705:	
 11962                           	line	32
 11963                           ;lcd.h: 31: else
 11964                           ;lcd.h: 32: RB1 = 0;
 11965  144E  1086               	bcf	(49/8),(49)&7
 11966                           	
 11967  144F                     l706:	
 11968                           	line	34
 11969                           ;lcd.h: 34: if(a & 4)
 11970  144F  1D70               	btfss	(Lcd8_Port@a),(2)&7
 11971  1450  2C52               	goto	u3141
 11972  1451  2C53               	goto	u3140
 11973  1452                     u3141:
 11974  1452  2C55               	goto	l707
 11975  1453                     u3140:
 11976                           	line	35
 11977                           	
 11978  1453                     l4401:	
 11979                           ;lcd.h: 35: RB2 = 1;
 11980  1453  1506               	bsf	(50/8),(50)&7
 11981  1454  2C56               	goto	l708
 11982                           	line	36
 11983                           	
 11984  1455                     l707:	
 11985                           	line	37
 11986                           ;lcd.h: 36: else
 11987                           ;lcd.h: 37: RB2 = 0;
 11988  1455  1106               	bcf	(50/8),(50)&7
 11989                           	
 11990  1456                     l708:	
 11991                           	line	39
 11992                           ;lcd.h: 39: if(a & 8)
 11993  1456  1DF0               	btfss	(Lcd8_Port@a),(3)&7
 11994  1457  2C59               	goto	u3151
 11995  1458  2C5A               	goto	u3150
 11996  1459                     u3151:
 11997  1459  2C5C               	goto	l709
 11998  145A                     u3150:
 11999                           	line	40
 12000                           	
 12001  145A                     l4403:	
 12002                           ;lcd.h: 40: RB3 = 1;
 12003  145A  1586               	bsf	(51/8),(51)&7
 12004  145B  2C5D               	goto	l710
 12005                           	line	41
 12006                           	
 12007  145C                     l709:	
 12008                           	line	42
 12009                           ;lcd.h: 41: else
 12010                           ;lcd.h: 42: RB3 = 0;
 12011  145C  1186               	bcf	(51/8),(51)&7
 12012                           	
 12013  145D                     l710:	
 12014                           	line	44
 12015                           ;lcd.h: 44: if(a & 16)
 12016  145D  1E70               	btfss	(Lcd8_Port@a),(4)&7
 12017  145E  2C60               	goto	u3161
 12018  145F  2C61               	goto	u3160
 12019  1460                     u3161:
 12020  1460  2C63               	goto	l711
 12021  1461                     u3160:
 12022                           	line	45
 12023                           	
 12024  1461                     l4405:	
 12025                           ;lcd.h: 45: RB4 = 1;
 12026  1461  1606               	bsf	(52/8),(52)&7
 12027  1462  2C64               	goto	l712
 12028                           	line	46
 12029                           	
 12030  1463                     l711:	
 12031                           	line	47
 12032                           ;lcd.h: 46: else
 12033                           ;lcd.h: 47: RB4 = 0;
 12034  1463  1206               	bcf	(52/8),(52)&7
 12035                           	
 12036  1464                     l712:	
 12037                           	line	49
 12038                           ;lcd.h: 49: if(a & 32)
 12039  1464  1EF0               	btfss	(Lcd8_Port@a),(5)&7
 12040  1465  2C67               	goto	u3171
 12041  1466  2C68               	goto	u3170
 12042  1467                     u3171:
 12043  1467  2C6A               	goto	l713
 12044  1468                     u3170:
 12045                           	line	50
 12046                           	
 12047  1468                     l4407:	
 12048                           ;lcd.h: 50: RB5 = 1;
 12049  1468  1686               	bsf	(53/8),(53)&7
 12050  1469  2C6B               	goto	l714
 12051                           	line	51
 12052                           	
 12053  146A                     l713:	
 12054                           	line	52
 12055                           ;lcd.h: 51: else
 12056                           ;lcd.h: 52: RB5 = 0;
 12057  146A  1286               	bcf	(53/8),(53)&7
 12058                           	
 12059  146B                     l714:	
 12060                           	line	54
 12061                           ;lcd.h: 54: if(a & 64)
 12062  146B  1F70               	btfss	(Lcd8_Port@a),(6)&7
 12063  146C  2C6E               	goto	u3181
 12064  146D  2C6F               	goto	u3180
 12065  146E                     u3181:
 12066  146E  2C71               	goto	l715
 12067  146F                     u3180:
 12068                           	line	55
 12069                           	
 12070  146F                     l4409:	
 12071                           ;lcd.h: 55: RB6 = 1;
 12072  146F  1706               	bsf	(54/8),(54)&7
 12073  1470  2C72               	goto	l716
 12074                           	line	56
 12075                           	
 12076  1471                     l715:	
 12077                           	line	57
 12078                           ;lcd.h: 56: else
 12079                           ;lcd.h: 57: RB6 = 0;
 12080  1471  1306               	bcf	(54/8),(54)&7
 12081                           	
 12082  1472                     l716:	
 12083                           	line	59
 12084                           ;lcd.h: 59: if(a & 128)
 12085  1472  1FF0               	btfss	(Lcd8_Port@a),(7)&7
 12086  1473  2C75               	goto	u3191
 12087  1474  2C76               	goto	u3190
 12088  1475                     u3191:
 12089  1475  2C78               	goto	l717
 12090  1476                     u3190:
 12091                           	line	60
 12092                           	
 12093  1476                     l4411:	
 12094                           ;lcd.h: 60: RB7 = 1;
 12095  1476  1786               	bsf	(55/8),(55)&7
 12096  1477  2C7A               	goto	l719
 12097                           	line	61
 12098                           	
 12099  1478                     l717:	
 12100                           	line	62
 12101                           ;lcd.h: 61: else
 12102                           ;lcd.h: 62: RB7 = 0;
 12103  1478  1386               	bcf	(55/8),(55)&7
 12104  1479  2C7A               	goto	l719
 12105                           	
 12106  147A                     l718:	
 12107                           	line	63
 12108                           	
 12109  147A                     l719:	
 12110  147A  0008               	return
 12111                           	opt stack 0
 12112                           GLOBAL	__end_of_Lcd8_Port
 12113  147B                     	__end_of_Lcd8_Port:
 12114 ;; =============== function _Lcd8_Port ends ============
 12115                           
 12116                           	signat	_Lcd8_Port,4216
 12117                           psect	text929,local,class=CODE,delta=2
 12118                           global __ptext929
 12119  0000                     __ptext929:
 12120                           	global	btemp
 12121  007E                     	btemp set 07Eh
 12122                           
 12123                           	DABS	1,126,2	;btemp
 12124                           	global	wtemp0
 12125  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Sun Apr 19 16:59:08 2020

              ___altoft@exp 0026                           pc 0002              ___bmul@product 0072  
             ___altoft@sign 0027                          _RD 0C60                          _WR 0C61  
              ___awdiv@sign 0076                          fsr 0004                ___ftadd@exp1 003F  
              ___ftadd@exp2 003E                ___ftadd@sign 003D                         l710 145D  
                       l711 1463                         l703 1445                         l712 1464  
                       l704 1448                         l713 146A                         l705 144E  
                       l801 1237                         l714 146B                         l706 144F  
                       l722 129B                         l730 12F0                         l715 1471  
                       l707 1455                         l731 12F1                         l716 1472  
                       l708 1456                         l804 1241                         l740 13E9  
                       l717 1478                         l709 145C                         l805 1241  
                       l725 0902                         l741 13CF                         l718 147A  
                       l806 1248                         l830 1551                         l734 15EC  
                       l742 13FD                         l719 147A                         l807 124A  
                       l831 1551                         l743 13FD                         l840 0A75  
                       l728 12E2                         l737 12B5                         l729 12F1  
                       l834 0A2D                         l850 14B8                         l835 09F3  
                       l843 0323                         l828 1542                         l860 143B  
                       l836 0A34                         l844 0323                         l829 1511  
                       l861 143B                         l837 0A48                         l853 001A  
                       l838 0A35                         l870 0627                         l839 0A57  
                       l871 05F2                         l847 14B1                         l856 142C  
                       l864 164B                         l880 06E5                         l872 0621  
                       l848 14B7                         l857 1401                         l793 0FE2  
                       l881 0732                         l873 0611                         l849 14B8  
                       l858 1412                         l794 0FFF                         l874 07FF  
                       l890 079E                         l882 0712                         l859 1426  
                       l795 0FFF                         l867 16AA                         l891 07E3  
                       l883 0731                         l875 069A                         l892 07FE  
                       l884 07BE                         l876 067A                         l885 0770  
                       l877 0699                         l893 07FF                         l886 07BD  
                       l878 06E6                         l879 06C6                         l888 0798  
                       _GIE 005F                         _RB0 0030                         _RB1 0031  
                       _RB2 0032                         _RB3 0033                         _RB4 0034  
                       _RB5 0035                         _RB6 0036                         _RB7 0037  
                       _RD5 0045                         _RD7 0047                         _exp 046A  
                       _log 0D4C                         _pow 00C3                         fsr0 0004  
                       indf 0000                ___awmod@sign 0076                  _Lcd8_Clear 08FC  
              ___ftdiv@cntr 0024                ___ftdiv@sign 0029                        l2000 0C3C  
                      l2001 0C65                        l2011 1791                        l2003 0C5A  
                      l2020 17CD                        l2012 17FF                        l2021 17DC  
                      l2013 17A7                        l2005 0C63                        l2022 17E6  
                      l2014 179A                        l2006 0C83                        l2023 17FF  
                      l2015 17AE                        l2016 17C5                        l2017 17AF  
                      l2009 1799                        l2018 17CC                        l2026 09DF  
                      l2019 17D8                        l2027 0992                        l2028 09E6  
                      l2029 09ED                        l1700 0F0C                        l1701 0E53  
                      l1710 0A91                        l1702 0E93                        l1711 0B19  
                      l1703 0EA8                        l1720 0AFF                        l1712 0ADC  
                      l1800 0B58                        l1704 0EBF                        l1721 0B10  
                      l1713 0AC8                        l1801 0B6B                        l1705 0EC4  
                      l5001 1552                        l1714 0AC9                        l1802 0B6C  
                      l1810 16C3                        l1706 0ED9                        l1715 0ADB  
                      l1803 0B97                        l1811 16FF                        l1651 036F  
                      l1707 0EF0                        l5011 156D                        l5003 1555  
                      l1716 0B00                        l1804 0BA7                        l1812 16D9  
                      l1660 03AE                        l1652 0379                        l1580 0179  
                      l1717 0AEC                        l1741 171F                        l1805 0BB8  
                      l1813 16CD                        l1661 03C2                        l1653 037E  
                      l1645 035B                        l5013 157B                        l5005 1559  
                      l5021 139F                        l5101 13CC                        l1581 0158  
                      l1590 1369                        l1718 0AF9                        l1750 177D  
                      l1742 172D                        l1806 0BC1                        l1814 16DE  
                      l1670 03F9                        l1654 03C3                        l1662 03FA  
                      l1830 157B                        l1582 01E9                        l1719 0AED  
                      l1751 1784                        l1743 1773                        l1815 16DF  
                      l1671 040F                        l1663 03FA                        l1655 0393  
                      l1647 0353                        l5015 1582                        l1831 156D  
                      l5007 155D                        l5023 13AD                        l5031 0BCB  
                      l5103 13CF                        l5111 12F6                        l1744 1745  
                      l1816 16F0                        l1672 0424                        l1664 03CA  
                      l1648 0469                        l1832 1582                        l1840 13B4  
                      l1576 00F4                        l4401 1453                        l1585 133E  
                      l1745 1739                        l1817 16FE                        l1809 16B9  
                      l1673 044D                        l1657 03AC                        l1649 0370  
                      l1737 1321                        l5017 159E                        l1833 159E  
                      l5009 1568                        l1841 13CB                        l5025 13B4  
                      l5041 0BF3                        l5033 0BD2                        l5105 13E2  
                      l5113 1310                        l5121 0047                        l5201 04CC  
                      l1577 00EA                        l1586 133D                        l1746 174A  
                      l1770 096E                        l1818 1709                        l1666 03E3  
                      l1658 03AD                        l1690 0D4B                        l1738 133A  
                      l1578 01E9                        l4411 1476                        l4403 145A  
                      l1595 126C                        l1747 174B                        l1819 1710  
                      l1667 03E4                        l1659 03BB                        l1691 0CBA  
                      l5027 13CB                        l5019 139A                        l5051 0C13  
                      l5043 0BFE                        l5035 0BD3                        l5107 13E9  
                      l5131 0064                        l5123 0050                        l5115 001B  
                      l5211 0538                        l5203 04E7                        l1579 0103  
                      l1588 1362                        l1596 1275                        l1748 1764  
                      l1764 1255                        l1668 03F2                        l1692 0D00  
                      l1684 1310                        l4405 1461                        l4421 1240  
                      l1589 1363                        l1597 127F                        l4501 17BD  
                      l1749 1772                        l1765 1256                        l1669 03E5  
                      l1693 0D22                        l1829 156C                        l5061 0C50  
                      l5053 0C29                        l5045 0BFF                        l5037 0BE4  
                      l5029 0BC2                        l5109 12F2                        l5141 00C2  
                      l5133 0065                        l5125 0051                        l5117 002C  
                      l5221 0599                        l5213 055E                        l5205 04EB  
                      l5301 1686                        l1598 1281                        l1694 0D31  
                      l1838 13AD                        l1950 04CC                        l4407 1468  
                      l4423 1248                        l4511 17FA                        l4503 17CD  
                      l1839 139F                        l5063 0C51                        l5055 0C2A  
                      l5071 0C66                        l5047 0C00                        l5039 0BEF  
                      l5135 009C                        l5127 005A                        l5119 0032  
                      l5151 09ED                        l5143 096F                        l5223 05AD  
                      l5215 058C                        l1951 04FF                        l5207 04FF  
                      l1943 047B                        l5231 00C3                        l5303 168F  
                      l5311 05DF                        l1768 092D                        l1952 05D0  
                      l1944 05D0                        l4409 146F                        l4417 1231  
                      l4425 124A                        l4441 1535                        l4513 17FE  
                      l4505 17D8                        l4521 0A91                        l4601 176B  
                      l1769 0957                        l1689 0CA1                        l5073 0C78  
                      l5065 0C53                        l5057 0C33                        l5049 0C0D  
                      l5081 12D4                        l5137 00B8                        l5129 005B  
                      l5145 0992                        l5153 0003                        l5161 0D70  
                      l1953 05B5                        l5225 05B4                        l5217 0591  
                      l5209 0518                        l1945 04A7                        l5241 00F4  
                      l5233 00C6                        l5305 16A1                        l5401 0792  
                      l5321 060A                        l5313 05E3                        l1962 005B  
                      l4419 1237                        l4443 153B                        l4435 1506  
                      l4451 1403                        l4507 17E0                        l4531 0AB3  
                      l4523 0AA3                        l4515 0A76                        l4603 1773  
                      l4611 124B                        l1699 0E3A                        l5059 0C3C  
                      l5067 0C5A                        l5075 0C84                        l5083 12DA  
                      l5091 15A5                        l5139 00B9                        l1963 0051  
                      l5147 09DF                        l5155 0011                        l5171 0DC3  
                      l5163 0D71                        l5227 05B5                        l1955 0599  
                      l5219 0592                        l1947 049E                        l5251 014C  
                      l5243 00FB                        l5235 00CF                        l5403 0798  
                      l5411 07BE                        l5331 0645                        l5323 0611  
                      l5315 05F1                        l5307 05D1                        l1796 0B30  
                      l1964 00C2                        l4445 1542                        l4437 1508  
                      l4453 1411                        l4461 133C                        l4509 17E8  
                      l4533 0AB7                        l4541 0ADC                        l4525 0AA4  
                      l4517 0A87                        l4605 1777                        l4613 1252  
                      l4621 0907                        l1797 0B44                        l4701 16E9  
                      l5077 0C85                        l5069 0C64                        l5085 12E2  
                      l5093 15A8                        l1965 0065                        l5149 09E6  
                      l5173 0DC9                        l5165 0D7A                        l5157 0D4C  
                      l5229 05CF                        l1957 059F                        l1949 04A5  
                      l5181 0473                        l5261 0198                        l5253 0157  
                      l5245 0102                        l5237 00E4                        l5421 07E2  
                      l5413 07C2                        l5405 079E                        l5341 067A  
                      l5333 064E                        l5325 0621                        l5317 05F2  
                      l5309 05D5                        l1798 0BA8                        l1966 00B9  
                      l4439 1511                        l4455 1412                        l4447 13FE  
                      l4463 133E                        l4471 126B                        l4543 0AE2  
                      l4551 0B00                        l4535 0ABE                        l4527 0AAA  
                      l4519 0A90                        l4607 177D                        l4615 1255  
                      l4631 095B                        l4623 092D                        l1799 0B66  
                      l4711 1709                        l4703 16F0                        l1991 0BD3  
                      l5079 08FC                        l5087 12E8                        l5095 15B0  
                      l5175 0DE4                        l5167 0D85                        l5159 0D63  
                      l5191 049E                        l5183 047A                        l5263 01CC  
                      l5255 0158                        l5247 0103                        l5239 00F3  
                      l5271 0246                        l5423 07E3                        l5415 07CB  
                      l5407 07A7                        l5351 06AC                        l5343 0682  
                      l5335 0660                        l5327 0630                        l5319 05FC  
                      l5431 147F                        l1992 0C85                        l4457 1418  
                      l4449 1401                        l4465 1358                        l4481 127F  
                      l4473 1270                        l4553 0B04                        l4545 0AEB  
                      l4537 0AC7                        l4529 0AB1                        l4609 1784  
                      l4617 1256                        l4633 0969                        l4625 0931  
                      l4641 0B21                        l4713 1710                        l4705 16F7  
                      l4801 0FF7                        l1993 0C00                        l5097 15BF  
                      l5089 159F                        l5177 0E1E                        l5169 0D86  
                      l1977 0D71                        l5193 04A6                        l5185 047B  
                      l5265 01D2                        l5257 0163                        l5249 0118  
                      l5281 02F2                        l5273 0271                        l5425 07EA  
                      l5417 07D0                        l5409 07AF                        l5361 06D5  
                      l5353 06B5                        l5345 0689                        l5337 0669  
                      l5329 063C                        l5441 1499                        l5433 1481  
                      l1994 0C84                        l1978 0E1E                        l4395 143D  
                      l4459 1426                        l4467 1363                        l4483 1281  
                      l4475 1275                        l4491 1798                        l4555 0B10  
                      l4547 0AED                        l4539 0AC9                        l4571 1711  
                      l4387 096B                        l4635 096B                        l4627 0957  
                      l4619 0903                        l4651 0B44                        l4643 0B2C  
                      l4707 16FF                        l1987 14D2                        l4803 0FFA  
                      l4811 0A0F                        l1995 0C66                        l5099 15C5  
                      l1979 0D86                        l5187 0490                        l5195 04A7  
                      l5179 046A                        l5267 01E8                        l5259 0179  
                      l5275 0277                        l5291 1630                        l5283 15ED  
                      l5427 07F0                        l5419 07D4                        l5371 0708  
                      l5363 06DE                        l5355 06BC                        l5347 0692  
                      l5339 0670                        l5443 149E                        l5435 1484  
                      l1988 1504                        l1996 0C52                        l4397 1441  
                      l4469 1369                        l4477 1277                        l4493 179A  
                      l4485 1785                        l4557 0B19                        l4549 0AF9  
                      l4581 172D                        l4573 1716                        l4637 096E  
                      l4389 096D                        l4629 0959                        l4661 0B6C  
                      l4653 0B4C                        l4645 0B30                        l4709 1703  
                      l4741 14D2                        l4733 14BB                        l4805 0FFE  
                      l4821 0A48                        l4813 0A15                        l4901 0C86  
                      l5197 04BE                        l5189 0497                        l5277 0287  
                      l5269 01EA                        l5293 1642                        l5285 1615  
                      l5373 0712                        l5381 0732                        l5357 06C6  
                      l5365 06E6                        l5349 069A                        l5445 14A7  
                      l5437 1485                        l5429 147B                        l1998 0C33  
                      l4399 144C                        l4479 1279                        l4495 17A7  
                      l4487 1789                        l4591 1745                        l4583 172F  
                      l4575 171F                        l4671 0BA0                        l4663 0B75  
                      l4655 0B54                        l4647 0B34                        l4639 0B1A  
                      l4751 1503                        l4743 14E5                        l4735 14C2  
                      l4823 0A57                        l4815 0A2D                        l4807 09EE  
                      l4831 0324                        l4911 0CB9                        l4903 0C99  
                      l5199 04CB                        l5279 02B9                        l5287 161E  
                      l5295 164C                        l5391 0761                        l5383 0744  
                      l5375 071A                        l5367 06F8                        l5359 06CE  
                      l5447 14B1                        l5439 148A                        l4497 17AF  
                      l4489 1791                        l4593 174B                        l4585 1735  
                      l4577 1723                        l4665 0B87                        l4657 0B58  
                      l4673 0BA8                        l4649 0B3F                        l4681 16AB  
                      l4753 1504                        l4745 14F1                        l4737 14CA  
                      l4761 1283                        l4825 0A65                        l4817 0A35  
                      l4809 09F3                        l4841 035A                        l4833 033E  
                      l4921 0CE9                        l4913 0CBA                        l4905 0CA0  
                      l5289 1627                        l5297 1674                        l5393 076F  
                      l5385 074B                        l5377 0721                        l5369 0701  
                      l4499 17B3                        l4595 175C                        l4587 1739  
                      l4579 1728                        l4675 0BAC                        l4667 0B95  
                      l4659 0B66                        l4691 16C9                        l4683 16B0  
                      l4747 14FE                        l4739 14D1                        l4763 1286  
                      l4771 129D                        l4827 0A6E                        l4819 0A41  
                      l4851 0374                        l4843 035B                        l4835 0342  
                      l4931 0D16                        l4923 0CED                        l4915 0CC0  
                      l4907 0CA1                        l5299 167D                        l5395 0770  
                      l5387 0754                        l5379 072A                        ?_exp 005A  
                      l4597 1762                        l4589 1740                        l4677 0BB8  
                      l4669 0B97                        l4693 16CD                        l4685 16B9  
                      l4749 1502                        l4765 128C                        l4773 12A0  
                      l4781 0F0D                        l4829 0A75                        l4861 0393  
                      l4853 0378                        l4845 035F                        l4837 0348  
                      l4941 0D4B                        l4933 0D20                        l4925 0CF4  
                      l4917 0CC5                        l4909 0CB2                        l5397 0775  
                      l5389 075D                        ?_log 0054                        l4599 1764  
                      l4679 0BC1                        l4695 16D4                        l4687 16BD  
                      l4767 128F                        l4775 12A6                        l4791 0FEB  
                      l4783 0F71                        l4863 039D                        l4871 03C3  
                      l4855 037D                        l4847 0365                        l4839 0353  
                      l4935 0D22                        l4927 0D00                        l4919 0CD7  
                      l4951 0E4B                        l4943 0E1F                        l5399 077E  
                      l4697 16D9                        l4689 16C3                        l4769 1298  
                      l4777 12A9                        l4793 0FEF                        l4785 0F7A  
                      l4881 03F2                        l4873 03CA                        l4865 03A3  
                      l4857 037F                        l4849 0370                        l4937 0D2A  
                      l4929 0D08                        l4961 0E82                        l4953 0E52  
                      l4945 0E32                        l4699 16DF                        l4779 12B2  
                      l4795 0FF0                        l4787 0FDE                        l4891 0435  
                      l4883 03FE                        l4875 03D4                        l4867 03AE  
                      l4859 0385                        l4939 0D31                        l4971 0EA8  
                      l4963 0E88                        l4955 0E53                        l4947 0E39  
                      l4797 0FF3                        l4789 0FE2                        l4893 0439  
                      l4885 040F                        l4877 03DA                        l4869 03BB  
                      l4981 0EC8                        l4973 0EB0                        l4965 0E8E  
                      l4957 0E80                        l4949 0E3A                        l4799 0FF6  
                      l4895 0449                        l4887 0413                        l4879 03E5  
                      l4991 0F0C                        l4983 0ED9                        l4975 0EB8  
                      l4967 0E93                        l4959 0E81                        l4897 044D  
                      l4889 0424                        l4985 0EE1                        l4977 0EBF  
                      l4969 0E97                        l4993 1311                        l4899 0469  
                      l4987 0EE9                        l4979 0EC4                        l4995 1318  
                      l4989 0EF0                        l4997 1321                        l4999 133A  
                      ?_pow 0064                        STR_1 088D                        STR_2 088D  
                      STR_3 08DE                        STR_4 08E7                        STR_5 08DE  
                      STR_6 08F0                        STR_7 08F8                        STR_8 08C4  
                      STR_9 08D1                        _BRGH 04C2                        _CREN 00C4  
                      u3120 1441                        u3200 1247                        u4000 0342  
                      u3121 1440                        u3201 1246                        u3130 144C  
                      u4010 0348                        u3131 144B                        u4011 0347  
                      u3140 1453                        u3220 1550                        u3300 1789  
                      u4100 03A3                        u4020 0352                        u3141 1452  
                      u3221 154F                        u4101 03A2                        u4021 0351  
                      u3150 145A                        u3230 1410                        u3310 1790  
                      u4110 03AB                        u4030 035F                        u3151 1459  
                      u3231 140F                        u3311 178F                        u4111 03AA  
                      u3160 1461                        u3240 1425                        u3400 17FE  
                      u4200 03FE                        u4040 0365                        u5000 07FD  
                      u3161 1460                        u3225 154C                        u3241 1424  
                      u4201 03FD                        u4041 0364                        u5001 07FC  
                      u3170 1468                        u3250 143A                        u3330 17AD  
                      u3410 0A87                        u4210 0413                        u4130 03C1  
                      u4050 036F                        u3171 1467                        u3251 1439  
                      u3235 140C                        u3331 17AC                        u3411 0A86  
                      u4211 0412                        u4131 03C0                        u4051 036E  
                      u3180 146F                        u3260 1358                        u3500 0B04  
                      u3420 0A9C                        u4140 03C9                        u4060 0378  
                      u3181 146E                        u3245 1421                        u3261 1357  
                      u3325 179F                        u4221 042E                        u4141 03C8  
                      u4125 03AF                        u4061 0377                        u5005 07F9  
                      u3190 1476                        u3270 1361                        u3350 17CB  
                      u3430 0AB7                        u4230 0439                        u4222 0435  
                      u4070 037D                        u4310 0D30                        u3191 1475  
                      u3255 1436                        u3271 1360                        u3351 17CA  
                      u3431 0AB6                        u4231 0438                        u4071 037C  
                      u4311 0D2F                        u3280 1270                        u3440 0ABE  
                      u3600 1771                        u3520 1716                        u4160 03DA  
                      u4080 0392                        u4240 0C99                        u4400 0EBE  
                      u4320 0E32                        u3281 126F                        u3345 17BE  
                      u3441 0ABD                        u3425 0A98                        u3601 1770  
                      u3521 1715                        u4161 03D9                        u4081 0391  
                      u4305 0D23                        u4241 0C98                        u4401 0EBD  
                      u4321 0E31                        u5017 15AC                        u3290 127E  
                      u3370 17DC                        u3610 1777                        u3530 1723  
                      u4170 03E2                        u4250 0CB2                        u4410 0EC8  
                      u4330 0E4B                        u3291 127D                        u3371 17DB  
                      u3531 1722                        u4171 03E1                        u4155 03CB  
                      u4251 0CB1                        u4411 0EC7                        u4331 0E4A  
                      u5027 15BA                        u3380 17E0                        u3460 0ADA  
                      u3540 1735                        u3620 1252                        u3700 0B54  
                      u4260 0CD0                        u4340 0E63                        u3381 17DF  
                      u3365 17D0                        u3461 0AD9                        u3541 1734  
                      u3621 1251                        u3701 0B53                        u4421 0ED1  
                      u5037 15C9                        u3390 17F1                        u3470 0AE2  
                      u3630 0907                        u4190 03F8                        u4270 0CE2  
                      u4422 0ED8                        u4350 0E75                        u4510 13B3  
                      u3471 0AE1                        u3455 0ACA                        u3631 0906  
                      u5047 12AD                        u4191 03F7                        u4095 0394  
                      u4511 13B2                        u3560 1749                        u3720 0B6A  
                      u3800 16C9                        u4360 0E97                        u4520 0BCB  
                      u4600 13FC                        u3561 1748                        u3641 091F  
                      u3721 0B69                        u3801 16C8                        u5057 1293  
                      u4185 03E6                        u4265 0CCC                        u4361 0E96  
                      u4345 0E5F                        u4505 13A0                        u4521 0BCA  
                      u4601 13FB                        u3490 0AFE                        u3650 0931  
                      u3642 0920                        u4290 0D16                        u4450 0EEF  
                      u4610 0032                        u3395 17ED                        u3491 0AFD  
                      u3555 173A                        u3651 0930                        u3643 0925  
                      u3715 0B5A                        u4291 0D15                        u4275 0CDE  
                      u4451 0EEE                        u4435 0EDA                        u4371 0EA0  
                      u4355 0E71                        u4611 0031                        u3580 175C  
                      u3644 0926                        u3740 0B87                        u3820 16DD  
                      u3900 0F1D                        u4372 0EA7                        u4460 1318  
                      u4540 0BF3                        u4620 0047                        u4700 04BE  
                      u3485 0AEF                        u3581 175B                        u3661 0949  
                      u3741 0B86                        u3821 16DC                        u4285 0D01  
                      u4445 0EE2                        u4461 1317                        u4541 0BF2  
                      u4621 0046                        u4701 04BD                        u3670 0969  
                      u3662 094A                        u3830 16E9                        u3910 0F3E  
                      u4470 155D                        u4550 0C0D                        u4630 0064  
                      u4710 04EB                        u3575 174C                        u3671 0968  
                      u3663 094F                        u3735 0B6E                        u3831 16E8  
                      u3815 16CE                        u4295 0D12                        u4471 155C  
                      u4551 0C0C                        u4535 0BD9                        u4631 0063  
                      u3664 0950                        u3760 0BA6                        u3680 0B21  
                      u3920 0F53                        u4560 0C28                        u4640 009C  
                      u4720 0590                        u4800 0277                        u3585 1758  
                      u3761 0BA5                        u3745 0B83                        u3681 0B20  
                      u3921 0F54                        u3905 0F18                        u4385 0EA9  
                      u4561 0C27                        u4641 009B                        u4801 0276  
                      u3770 0BAC                        u3690 0B34                        u3850 16FD  
                      u3930 0F7A                        u3922 0F59                        u4490 1581  
                      u4650 09E5                        u4730 05AD                        u4810 05DF  
                      u3595 1765                        u3675 0965                        u3755 0B98  
                      u3691 0B33                        u3851 16FC                        u3835 16E5  
                      u3931 0F79                        u3923 0F5A                        u3915 0F39  
                      u4395 0EB1                        u4491 1580                        u4555 0C09  
                      u4651 09E4                        u4731 05AC                        u4811 05DE  
                      u3860 1703                        u3780 16B0                        u3940 0F8A  
                      u4580 12DA                        u4660 0D63                        u4740 00CF  
                      u4900 06B5                        u4820 05F0                        _RCIF 0065  
                      u3845 16F1                        u3781 16AF                        u4485 156E  
                      u4581 12D9                        u4661 0D62                        u4741 00CE  
                      u4901 06B4                        u4821 05EF                        u3790 16BD  
                      u3950 0FAB                        u4590 12E8                        u4670 0D7A  
                      u4750 00E4                        u4910 06CE                        u4830 05FC  
                      u3791 16BC                        u4575 0C6E                        u4591 12E7  
                      u4671 0D79                        u4735 05A9                        u4751 00E3  
                      u4911 06CD                        u4831 05FB                        u3880 14C2  
                      u3960 0FC0                        u4680 0473                        u4760 00FB  
                      u4920 06F8                        u4840 0620                        u3881 14C1  
                      u3961 0FC1                        u3945 0F85                        u4681 0472  
                      u4761 00FA                        u4921 06F7                        u4841 061F  
                      u4825 05EC                        u3970 0FEB                        u3962 0FC6  
                      u4690 0490                        u4770 0118                        u4930 0701  
                      u4850 0630                        u3971 0FEA                        u3963 0FC7  
                      u3955 0FA6                        u4691 048F                        u4771 0117  
                      u4931 0700                        u4851 062F                        u3980 0A33  
                      u4780 014C                        u4940 071A                        u4860 0660  
                      u3981 0A32                        u4781 014B                        u4941 0719  
                      u4861 065F                        u4845 061C                        u3990 0A56  
                      u4790 01D2                        u4950 0744                        u4870 0669  
                      u3895 14D8                        u3991 0A55                        u4951 0743  
                      u4871 0668                        u4960 076E                        u4880 0682  
                      u4785 0148                        u4961 076D                        u4881 0681  
                      u4970 0792                        u4890 06AC                        u3995 0A52  
                      u4971 0791                        u4891 06AB                        u4980 07BC  
                      u4981 07BB                        u4965 076A                        u4990 07E1  
                      u4991 07E0                        u4985 07B8                        u4995 07DD  
                      _SPEN 00C7                        _TRMT 04C1                        _WREN 0C62  
                      _TXEN 04C5                        _SYNC 04C4                        _main 147B  
                      _ftoa 01EA                ___ftpack@arg 0070           ??_Lcd8_Set_Cursor 0075  
                      _rfid 00C7                ___ftpack@exp 0073                        btemp 007E  
                      exp@x 005A                        log@x 0054                        pow@x 0064  
                      pow@y 0067                        start 0000           ___bmul@multiplier 0073  
              ___ftmul@cntr 0031                ___ftmul@sign 0032                ___fttol@exp1 007D  
                     ??_exp 005D                       ??_log 0057                ___fttol@lval 0079  
                     ??_pow 006A             __end_of___aldiv 0BC2                       ?_main 0070  
                     ?_ftoa 00A8             __end_of___awdiv 1785                       _EEADR 010D  
           __end_of___ftadd 046A                       STR_10 087C                       STR_11 08AA  
                     STR_12 08D1                       STR_13 0849                       STR_14 08B7  
                     STR_15 08D1                       STR_16 086B                       STR_17 089D  
                     STR_18 085A             __end_of___awmod 1711                       _CARRY 0018  
           __end_of___ftdiv 0D4C             __end_of___ftneg 1257             __end_of___ftmul 0F0D  
           ___awdiv@divisor 0070             __end_of___ftsub 1311             __end_of___fttol 0B1A  
           ___awdiv@counter 0075                       _RCREG 001A                       _SPBRG 0099  
                     _TRISB 0086                       _TRISC 0087                       _TRISD 0088  
                     _TXREG 0019                ___lltoft@exp 007D          __size_of_UART_Init 00F3  
        __size_of_UART_Read 000B               ___awtoft@sign 0022                       _delay 13FE  
                     _floor 001B                       _ldexp 0BC2                       _frexp 14BB  
                     _errno 006E               ___ftpack@sign 0074                       ftoa@i 00B3  
                     ftoa@n 00A8                       pclath 000A             __end_of_reverse 1552  
           __end_of_present 164C                       pow@yi 00A4                       status 0003  
          __end_of_Lcd8_Cmd 129C                       wtemp0 007E                 ldexp@newexp 0043  
              __end_of_main 14BB                __end_of_ftoa 0324          __size_of_Lcd8_Init 004E  
        __size_of_Lcd8_Port 003F           ??_Lcd8_Write_Char 0071                      ??_main 007E  
                    ??_ftoa 006B               ___fttol@sign1 0078                 ?_Lcd8_Clear 0070  
                    ?_delay 0070                      ?_floor 0040                      ?_ldexp 0040  
                    ?_frexp 0070            __end_of___altoft 159F                      _EEDATA 010C  
                    _EECON1 018C                      _EECON2 018D            ___awdiv@dividend 0072  
          __end_of___awtoft 133B            __end_of___ftpack 1800            __end_of___lltoft 13CC  
                    _TRISC6 043E                      _TRISC7 043F                 intToStr@str 0022  
         __end_of_UART_Init 1000           __end_of_UART_Read 124B                      ___bmul 126A  
                    ___ftge 0903                   ??___aldiv 0078                   ??___awdiv 0074  
                    _absent 164C                   ??___ftadd 0039                   ??___awmod 0074  
                 ??___ftdiv 0020                   ??___ftneg 007B                   ??___ftmul 0029  
                 ??___ftsub 007E                   ??___fttol 0074                      _buffer 00D3  
          __end_of_intToStr 0A76                      delay@i 0073                      delay@j 0075  
          ___awdiv@quotient 0077             ___awmod@divisor 0070             ___awmod@counter 0075  
                    _strcmp 133B                      clrloop 1239                      floor@i 0044  
                    floor@x 0040                      exp@exp 0061       ___ftmul@f3_as_product 002E  
                    log@exp 0058      __size_of_initial_State 0018                   ??_reverse 0072  
                 ??_present 006D           __end_of_Lcd8_Init 15ED           __end_of_Lcd8_Port 147B  
                ___altoft@c 0020                  ___ftadd@f1 0033                  ___ftadd@f2 0036  
                ___ftge@ff1 0070                  ___ftge@ff2 0073                eval_poly@res 0051  
                ___ftdiv@f1 007B                  ___ftdiv@f2 0078                  ___ftdiv@f3 0025  
                ___ftneg@f1 0078                  ___awtoft@c 007B         ___bmul@multiplicand 0070  
                ___ftmul@f1 0023                  ___ftmul@f2 0026                  ___ftsub@f1 0043  
                ___ftsub@f2 0040                  ___fttol@f1 0070              __pcstackCOMMON 0070  
        __size_of_checkRFID 022F                __pidataBANK3 136A               __end_of_delay 143C  
                ___lltoft@c 0078         __size_of_Lcd8_Clear 0007               __end_of_floor 00C3  
             __end_of_ldexp 0C86               __end_of_frexp 1505                   ?_Lcd8_Cmd 0070  
           _Lcd8_Set_Cursor 12D3                     ??_delay 0072                     ??_floor 0043  
                   ??_ldexp 0045                     ??_frexp 0074                  __pbssBANK0 006E  
                __pbssBANK1 00BF          __size_of_eval_poly 007F               _initial_State 0003  
  __size_of_UART_Data_Ready 0007                  __pmaintext 147B                     ?___bmul 0070  
                   ?___ftge 0070                     ?_absent 0070                   ?___altoft 0020  
                 ?___awtoft 007B                   ?___ftpack 0070            Lcd8_Set_Cursor@a 0075  
          Lcd8_Set_Cursor@b 0074                   ?___lltoft 0078                     ?_strcmp 0070  
                ??_Lcd8_Cmd 0071                  _ldexp$1975 0047           __end_of_checkRFID 0800  
                 ?_intToStr 0020              ?_initial_State 0070                  checkRFID@a 00BB  
                checkRFID@i 00BD             _Lcd8_Write_Char 129C                     ___aldiv 0B1A  
           __size_of___bmul 0018             __size_of___ftge 006C                     ___awdiv 1711  
                   ___ftadd 0324                     ___awmod 16AB                     ___ftdiv 0C86  
                   ___ftneg 124B                     ___ftmul 0E1F                     ___ftsub 12F2  
                   ___fttol 0A76             __size_of_absent 005F                  ??___altoft 0024  
   __end_of_Lcd8_Set_Cursor 12F2                  ??___awtoft 0020                  ??___ftpack 0075  
         __end_of_eval_poly 09EE                  ??___lltoft 007C             __size_of_strcmp 002F  
                   _counter 00C5                __size_of_exp 0167                __size_of_log 00D3  
                 Lcd8_Cmd@a 0073                __size_of_pow 0127            ___awmod@dividend 0072  
          ___aldiv@dividend 0074                     _reverse 1505                ??_Lcd8_Clear 0074  
                   _present 15ED                  _recordbook 00BF        end_of_initialization 12CF  
                   ftoa@res 00AB                     exp@sign 0063                  ??_intToStr 0025  
                   init_ram 125B                 reverse@temp 0075                     pow@sign 00A3  
          ___aldiv@quotient 0022           ??_UART_Data_Ready 0070          __end_of_Lcd8_Clear 0903  
                   strcmp@r 0074                   _UART_Init 0F0D                   _UART_Read 1240  
                 _PORTDbits 0008     __end_of_Lcd8_Write_Char 12B6             ??_initial_State 0078  
                 _Lcd8_Init 159F                 ___ftdiv@exp 0028                   _Lcd8_Port 143C  
               ___ftmul@exp 002D              __end_of___bmul 1282              __end_of___ftge 096F  
            __end_of_absent 16AB                  ?_UART_Init 0026                  ?_UART_Read 0070  
          ?_Lcd8_Set_Cursor 0074                  floor@expon 0047              __end_of_strcmp 136A  
       start_initialization 12B6                  eval_poly@d 004D                  eval_poly@n 004E  
                eval_poly@x 004A                  ldexp@value 0040           __size_of_Lcd8_Cmd 001A  
               __end_of_exp 05D1                 __end_of_log 0E1F                 __end_of_pow 01EA  
         _Lcd8_Write_String 13CC          ?_Lcd8_Write_String 0074                  frexp@value 0070  
                ?_Lcd8_Init 0070                  ?_Lcd8_Port 0070         ??_Lcd8_Write_String 0076  
                  ??___bmul 0071                    ??___ftge 0076                    ??_absent 006D  
               __pdataBANK3 0190                    ??_strcmp 0072           __size_of___altoft 004D  
         __size_of___awtoft 002A           __size_of___ftpack 007B           __size_of___lltoft 0032  
             __pcstackBANK0 0020               __pcstackBANK1 00A0   __end_of_Lcd8_Write_String 13FE  
          ?_Lcd8_Write_Char 0070                   _checkRFID 05D1           __size_of_intToStr 0088  
                  ?___aldiv 0070                    ?___awdiv 0070                   _ftoa$2281 00AE  
                  ?___ftadd 0033                    ?___awmod 0070                   __ptext900 159F  
                 __ptext901 12D3                   __ptext910 09EE                   __ptext902 08FC  
                 __ptext911 0F0D                   __ptext903 0BC2                   __ptext920 0A76  
                 __ptext912 129C                   __ptext904 139A                   __ptext921 1785  
                 __ptext913 1282                   __ptext905 1552                   __ptext922 126A  
                 __ptext914 14BB                   __ptext906 1311                   __ptext923 133B  
                 __ptext915 16AB                   __ptext907 0E1F                   __ptext924 13FE  
                 __ptext916 0B1A                   __ptext908 0C86                   __ptext925 1505  
                 __ptext917 0903                   __ptext909 0324                   __ptext926 1240  
                 __ptext918 124B                   __ptext927 1231                   __ptext919 1711  
                 __ptext928 143C                   __ptext929 0000                   __ptext890 15ED  
                 __ptext891 01EA                   __ptext892 00C3                   __ptext893 046A  
                  ?___ftdiv 0078                   __ptext894 0D4C                   __ptext895 0003  
                 __ptext896 096F                   __ptext888 05D1                   __ptext897 001B  
                 __ptext889 164C                   __ptext898 12F2                   __ptext899 13CC  
                  ?___ftneg 0078                    ?___ftmul 0023                    ?___ftsub 0040  
                  ?___fttol 0070                 ??_UART_Init 002A                 ??_UART_Read 0070  
                 __pstrings 0800                   _eval_poly 096F                    ?_reverse 0070  
                  ?_present 0070              __size_of_delay 003E              __size_of_floor 00A8  
            __size_of_ldexp 00C4              __size_of_frexp 004A                  UART_Init@x 0079  
                 delay@time 0070             ___aldiv@divisor 0070                  ?_checkRFID 0070  
           ___aldiv@counter 0020                 ??_Lcd8_Init 0074            Lcd8_Write_Char@a 0073  
               ??_Lcd8_Port 0070             _UART_Data_Ready 1231                  reverse@len 0070  
                reverse@str 007B           UART_Init@baudrate 0026                 __stringbase 080F  
                  _Lcd8_Cmd 1282                  ?_eval_poly 004A  __size_of_Lcd8_Write_String 0032  
                 ftoa@fpart 00B5                   ftoa@ipart 00B1                   frexp@eptr 0073  
                 intToStr@d 0023                   intToStr@i 0027                   intToStr@x 0020  
                 init_fetch 1257            __size_of___aldiv 00A8            __size_of___awdiv 0074  
          __size_of___ftadd 0146            __size_of___awmod 0066            __size_of___ftdiv 00C6  
          __size_of___ftneg 000C                    ___altoft 1552            __size_of___ftmul 00EE  
          __size_of___ftsub 001F            __size_of___fttol 00A4                    ___awtoft 1311  
                  ___ftpack 1785                    ___lltoft 139A                    _exp$1929 005E  
   __end_of_UART_Data_Ready 1238            __size_of_reverse 004D            __size_of_present 005F  
                  _pow$2282 00A0                 ??_checkRFID 00B8                    _intToStr 09EE  
     __end_of_initial_State 001B               __size_of_main 0040               __size_of_ftoa 013A  
                  clear_ram 1238                    _validIDs 0190                  Lcd8_Port@a 0070  
                  exp@coeff 0810                    log@coeff 082E                 ??_eval_poly 0050  
  __size_of_Lcd8_Set_Cursor 001F                   stringcode 080A                    reverse@i 0077  
                  reverse@j 0079          Lcd8_Write_String@a 0074          Lcd8_Write_String@i 0076  
            ftoa@afterpoint 00AC                    strcmp@s1 0075                    strcmp@s2 0070  
                  stringdir 080A                    stringtab 0800                ___aldiv@sign 0021  
          ?_UART_Data_Ready 0070    __size_of_Lcd8_Write_Char 001A  
